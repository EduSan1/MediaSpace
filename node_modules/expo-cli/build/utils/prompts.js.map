{"version":3,"file":"prompts.js","names":["color","require","strikethrough","gray","prompt","questions","nonInteractiveHelp","options","Array","isArray","program","nonInteractive","length","message","question","questionMessage","undefined","trim","replace","CommandError","prompts","onCancel","AbortCommandError","separator","title","disabled","value","autoCompleteAsync","limit","suggest","input","choices","regex","RegExp","filter","choice","test","name","type","selectAsync","onRender","firstRender","cursor","fire","up","next","moveCursor","render","bell","down","i","confirmAsync","initial","toggleConfirmAsync","active","inactive","promptEmailAsync","format","validate"],"sources":["../../src/utils/prompts.ts"],"sourcesContent":["import program from 'commander';\nimport prompts, { Options, PromptObject, PromptType } from 'prompts';\n\nimport CommandError, { AbortCommandError } from '../CommandError';\n\n// NOTE(brentvatne): we don't use strikethrough anywhere in expo-cli currently,\n// and prompts doesn't give us control over disabled styles (1), so until we\n// open a PR to prompts to make it more extensible in this regard we can just\n// have strikethrough make text grey instead through monkey-patching it.\n//\n// (1): https://github.com/terkelg/prompts/blob/972fbb2d43c7b1ee5058800f441daaf51f2c240f/lib/elements/select.js#L152-L154\nconst color = require('kleur');\ncolor.strikethrough = color.gray;\n\nexport type Question<V extends string = string> = PromptObject<V> & {\n  optionsPerPage?: number;\n};\n\nexport { PromptType };\n\ntype PromptOptions = { nonInteractiveHelp?: string } & Options;\n\nexport default function prompt(\n  questions: Question | Question[],\n  { nonInteractiveHelp, ...options }: PromptOptions = {}\n) {\n  questions = Array.isArray(questions) ? questions : [questions];\n  if (program.nonInteractive && questions.length !== 0) {\n    let message = `Input is required, but Expo CLI is in non-interactive mode.\\n`;\n    if (nonInteractiveHelp) {\n      message += nonInteractiveHelp;\n    } else {\n      const question = questions[0];\n      const questionMessage =\n        typeof question.message === 'function'\n          ? question.message(undefined, {}, question)\n          : question.message;\n\n      message += `Required input:\\n${(questionMessage || '').trim().replace(/^/gm, '> ')}`;\n    }\n    throw new CommandError('NON_INTERACTIVE', message);\n  }\n  return prompts(questions, {\n    onCancel() {\n      throw new AbortCommandError();\n    },\n    ...options,\n  });\n}\n\n// todo: replace this workaround, its still selectable by the cursor\n// see: https://github.com/terkelg/prompts/issues/254\nprompt.separator = (title: string) => ({ title, disabled: true, value: undefined });\n\nexport type NamelessQuestion = Omit<Question<'value'>, 'name' | 'type'>;\n\n/**\n * Create an auto complete list that can be searched and cancelled.\n *\n * @param questions\n * @param options\n */\nexport async function autoCompleteAsync(\n  questions: NamelessQuestion | NamelessQuestion[],\n  options?: PromptOptions\n): Promise<string> {\n  const { value } = await prompt(\n    {\n      limit: 11,\n      suggest(input: any, choices: any) {\n        const regex = new RegExp(input, 'i');\n        return choices.filter((choice: any) => regex.test(choice.title));\n      },\n      ...questions,\n      name: 'value',\n      type: 'autocomplete',\n    },\n    options\n  );\n  return value ?? null;\n}\n\n/**\n * Create a selection list that can be cancelled.\n *\n * @param questions\n * @param options\n */\nexport async function selectAsync(\n  questions: NamelessQuestion,\n  options?: PromptOptions\n): Promise<any> {\n  const { value } = await prompt(\n    {\n      limit: 11,\n      ...questions,\n      // @ts-ignore: onRender not in the types\n      onRender(this: {\n        cursor: number;\n        firstRender: boolean;\n        choices: (Omit<prompts.Choice, 'disable'> & { disabled?: boolean })[];\n        value: string;\n        render: () => void;\n        moveCursor: (n: number) => void;\n        fire: () => void;\n        up: () => void;\n        down: () => void;\n        bell: () => void;\n        next: () => void;\n      }) {\n        if (this.firstRender) {\n          // Ensure the initial state isn't on a disabled item.\n          while (this.choices[this.cursor].disabled) {\n            this.cursor++;\n            if (this.cursor > this.choices.length - 1) break;\n          }\n          this.fire();\n          // Without this, the value will be `0` instead of a string.\n          this.value = (this.choices[this.cursor] || {}).value;\n\n          // Support up arrow and `k` key -- no looping\n          this.up = () => {\n            let next = this.cursor;\n            while (true) {\n              if (next <= 0) break;\n              next--;\n              if (!this.choices[next].disabled) break;\n            }\n            if (!this.choices[next].disabled && next !== this.cursor) {\n              this.moveCursor(next);\n              this.render();\n            } else {\n              this.bell();\n            }\n          };\n\n          // Support down arrow and `j` key -- no looping\n          this.down = () => {\n            let next = this.cursor;\n            while (true) {\n              if (next >= this.choices.length - 1) break;\n              next++;\n              if (!this.choices[next].disabled) break;\n            }\n            if (!this.choices[next].disabled && next !== this.cursor) {\n              this.moveCursor(next);\n              this.render();\n            } else {\n              this.bell();\n            }\n          };\n\n          // Support tab -- looping\n          this.next = () => {\n            let next = this.cursor;\n            let i = 0;\n            while (i < this.choices.length) {\n              i++;\n              next = (next + 1) % this.choices.length;\n              if (!this.choices[next].disabled) break;\n            }\n            if (!this.choices[next].disabled) {\n              this.moveCursor(next);\n              this.render();\n            } else {\n              // unexpected\n              this.bell();\n            }\n          };\n        }\n      },\n      name: 'value',\n      type: 'select',\n    },\n    options\n  );\n  return value ?? null;\n}\n\n/**\n * Create a standard yes/no confirmation that can be cancelled.\n *\n * @param questions\n * @param options\n */\nexport async function confirmAsync(\n  questions: NamelessQuestion,\n  options?: PromptOptions\n): Promise<boolean> {\n  const { value } = await prompt(\n    {\n      initial: true,\n      ...questions,\n      name: 'value',\n      type: 'confirm',\n    },\n    options\n  );\n  return value ?? null;\n}\n\n/**\n * Create a more dynamic yes/no confirmation that can be cancelled.\n *\n * @param questions\n * @param options\n */\nexport async function toggleConfirmAsync(\n  questions: NamelessQuestion,\n  options?: PromptOptions\n): Promise<boolean> {\n  const { value } = await prompt(\n    {\n      active: 'yes',\n      inactive: 'no',\n      ...questions,\n      name: 'value',\n      type: 'toggle',\n    },\n    options\n  );\n  return value ?? null;\n}\n\n/**\n * Prompt the user for an email address.\n *\n * @param questions\n * @param options\n */\nexport async function promptEmailAsync(\n  questions: NamelessQuestion,\n  options?: PromptOptions\n): Promise<string> {\n  const { value } = await prompt(\n    {\n      type: 'text',\n      format: value => value.trim(),\n      validate: (value: string) =>\n        /.+@.+/.test(value) ? true : \"That doesn't look like a valid email.\",\n      ...questions,\n      name: 'value',\n    },\n    options\n  );\n  return value.trim();\n}\n"],"mappings":"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"}