{"version":3,"file":"formatStackTrace.js","names":["getStringBetweenParens","value","regExp","matches","exec","length","focusLastPathComponent","parts","split","last","pop","current","chalk","dim","join","formatStackTrace","stacktrace","command","treeStackLines","line","first","trim","push","map","index","shift","bold","startsWith","branch","filter","Boolean"],"sources":["../../src/utils/formatStackTrace.ts"],"sourcesContent":["import chalk from 'chalk';\n\nfunction getStringBetweenParens(value: string): string {\n  const regExp = /\\(([^)]+)\\)/;\n  const matches = regExp.exec(value);\n  if (matches && matches?.length > 1) {\n    return matches[1];\n  }\n  return value;\n}\n\nfunction focusLastPathComponent(value: string): string {\n  const parts = value.split('/');\n  if (parts.length > 1) {\n    const last = parts.pop();\n    const current = chalk.dim(parts.join('/') + '/');\n    return `${current}${last}`;\n  }\n  return chalk.dim(value);\n}\n\nexport function formatStackTrace(stacktrace: string, command: string): string {\n  const treeStackLines: string[][] = [];\n  for (const line of stacktrace.split('\\n')) {\n    const [first, ...parts] = line.trim().split(' ');\n    // Remove at -- we'll use a branch instead.\n    if (first === 'at') {\n      treeStackLines.push(parts);\n    }\n  }\n\n  return treeStackLines\n    .map((parts, index) => {\n      let first = parts.shift();\n      let last = parts.pop();\n\n      // Replace anonymous with command name\n      if (first === 'Command.<anonymous>') {\n        first = chalk.bold(`expo ${command}`);\n      } else if (first?.startsWith('Object.')) {\n        // Remove extra JS types from function names\n        first = first.split('Object.').pop()!;\n      } else if (first?.startsWith('Function.')) {\n        // Remove extra JS types from function names\n        first = first.split('Function.').pop()!;\n      } else if (first?.startsWith('/')) {\n        // If the first element is a path\n        first = focusLastPathComponent(getStringBetweenParens(first));\n      }\n\n      if (last) {\n        last = focusLastPathComponent(getStringBetweenParens(last));\n      }\n      const branch = (index === treeStackLines.length - 1 ? '└' : '├') + '─';\n      return ['   ', branch, first, ...parts, last].filter(Boolean).join(' ');\n    })\n    .join('\\n');\n}\n"],"mappings":"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"}