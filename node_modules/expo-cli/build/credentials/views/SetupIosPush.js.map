{"version":3,"file":"SetupIosPush.js","names":["SetupIosPush","constructor","app","open","ctx","user","Error","appCredentials","ios","getAppCredentials","deprecatedPushId","credentials","pushId","deprecatedPushP12","pushP12","deprecatedPushPassword","pushPassword","nonInteractive","CommandError","confirm","confirmAsync","message","Log","log","configuredPushKey","getPushKey","isValid","iosPushView","validatePushKey","CreateOrReusePushKey"],"sources":["../../../src/credentials/views/SetupIosPush.ts"],"sourcesContent":["import CommandError from '../../CommandError';\nimport Log from '../../log';\nimport { confirmAsync } from '../../utils/prompts';\nimport { AppLookupParams } from '../api/IosApi';\nimport { Context, IView } from '../context';\nimport * as iosPushView from './IosPushCredentials';\n\nexport class SetupIosPush implements IView {\n  constructor(private app: AppLookupParams) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    if (!ctx.user) {\n      throw new Error(`This workflow requires you to be logged in.`);\n    }\n\n    // TODO: Remove this on Nov 2020 when Apple no longer accepts deprecated push certs\n    const appCredentials = await ctx.ios.getAppCredentials(this.app);\n    const deprecatedPushId = appCredentials?.credentials?.pushId;\n    const deprecatedPushP12 = appCredentials?.credentials?.pushP12;\n    const deprecatedPushPassword = appCredentials?.credentials?.pushPassword;\n    if (deprecatedPushId && deprecatedPushP12 && deprecatedPushPassword) {\n      if (ctx.nonInteractive) {\n        throw new CommandError(\n          'NON_INTERACTIVE',\n          \"We've detected legacy Push Certificates on file. Start the CLI without the '--non-interactive' flag to upgrade to the newer standard.\"\n        );\n      }\n\n      const confirm = await confirmAsync({\n        message: `We've detected legacy Push Certificates on file. Would you like to upgrade to the newer standard?`,\n      });\n      if (!confirm) {\n        Log.log(`Using Deprecated Push Cert: ${deprecatedPushId} on file`);\n        return null;\n      }\n    }\n\n    const configuredPushKey = await ctx.ios.getPushKey(this.app);\n\n    if (configuredPushKey) {\n      // we dont need to setup if we have a valid push key on file\n      const isValid = await iosPushView.validatePushKey(ctx, configuredPushKey);\n      if (isValid) {\n        return null;\n      }\n    }\n\n    return new iosPushView.CreateOrReusePushKey(this.app);\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAGA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AAEO,MAAMA,YAAN,CAAoC;EACzCC,WAAW,CAASC,GAAT,EAA+B;IAAA,KAAtBA,GAAsB,GAAtBA,GAAsB;EAAE;;EAElC,MAAJC,IAAI,CAACC,GAAD,EAAsC;IAAA;;IAC9C,IAAI,CAACA,GAAG,CAACC,IAAT,EAAe;MACb,MAAM,IAAIC,KAAJ,CAAW,6CAAX,CAAN;IACD,CAH6C,CAK9C;;;IACA,MAAMC,cAAc,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAQC,iBAAR,CAA0B,KAAKP,GAA/B,CAA7B;IACA,MAAMQ,gBAAgB,GAAGH,cAAH,aAAGA,cAAH,gDAAGA,cAAc,CAAEI,WAAnB,0DAAG,sBAA6BC,MAAtD;IACA,MAAMC,iBAAiB,GAAGN,cAAH,aAAGA,cAAH,iDAAGA,cAAc,CAAEI,WAAnB,2DAAG,uBAA6BG,OAAvD;IACA,MAAMC,sBAAsB,GAAGR,cAAH,aAAGA,cAAH,iDAAGA,cAAc,CAAEI,WAAnB,2DAAG,uBAA6BK,YAA5D;;IACA,IAAIN,gBAAgB,IAAIG,iBAApB,IAAyCE,sBAA7C,EAAqE;MACnE,IAAIX,GAAG,CAACa,cAAR,EAAwB;QACtB,MAAM,KAAIC,uBAAJ,EACJ,iBADI,EAEJ,uIAFI,CAAN;MAID;;MAED,MAAMC,OAAO,GAAG,MAAM,IAAAC,uBAAA,EAAa;QACjCC,OAAO,EAAG;MADuB,CAAb,CAAtB;;MAGA,IAAI,CAACF,OAAL,EAAc;QACZG,cAAA,CAAIC,GAAJ,CAAS,+BAA8Bb,gBAAiB,UAAxD;;QACA,OAAO,IAAP;MACD;IACF;;IAED,MAAMc,iBAAiB,GAAG,MAAMpB,GAAG,CAACI,GAAJ,CAAQiB,UAAR,CAAmB,KAAKvB,GAAxB,CAAhC;;IAEA,IAAIsB,iBAAJ,EAAuB;MACrB;MACA,MAAME,OAAO,GAAG,MAAMC,WAAW,GAACC,eAAZ,CAA4BxB,GAA5B,EAAiCoB,iBAAjC,CAAtB;;MACA,IAAIE,OAAJ,EAAa;QACX,OAAO,IAAP;MACD;IACF;;IAED,OAAO,KAAIC,WAAW,GAACE,oBAAhB,EAAqC,KAAK3B,GAA1C,CAAP;EACD;;AAzCwC"}