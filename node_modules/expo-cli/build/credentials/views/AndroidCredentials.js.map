{"version":3,"file":"AndroidCredentials.js","names":["ExperienceView","constructor","experienceName","open","ctx","credentials","android","fetchCredentials","isEmpty","keystore","pushCredentials","Log","log","newLine","displayAndroidAppCredentials","action","prompt","type","name","message","choices","value","title","handleAction","context","selected","UpdateKeystore","skipKeystoreValidation","RemoveKeystore","UpdateFcmKey","DownloadKeystore"],"sources":["../../../src/credentials/views/AndroidCredentials.ts"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\n\nimport Log from '../../log';\nimport prompt from '../../utils/prompts';\nimport { displayAndroidAppCredentials } from '../actions/list';\nimport { Context, IView } from '../context';\nimport { DownloadKeystore, RemoveKeystore, UpdateKeystore } from './AndroidKeystore';\nimport { UpdateFcmKey } from './AndroidPushCredentials';\n\nclass ExperienceView implements IView {\n  constructor(private experienceName: string) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const credentials = await ctx.android.fetchCredentials(this.experienceName);\n\n    if (isEmpty(credentials.keystore) && isEmpty(credentials.pushCredentials)) {\n      Log.log(`No credentials available for ${this.experienceName} experience.\\n`);\n    } else if (this.experienceName) {\n      Log.newLine();\n      await displayAndroidAppCredentials(credentials);\n      Log.newLine();\n    }\n\n    const { action } = await prompt({\n      type: 'select',\n      name: 'action',\n      message: 'What do you want to do?',\n      choices: [\n        { value: 'update-keystore', title: 'Update upload Keystore' },\n        { value: 'remove-keystore', title: 'Remove keystore' },\n        { value: 'update-fcm-key', title: 'Update FCM Api Key' },\n        { value: 'fetch-keystore', title: 'Download Keystore from the Expo servers' },\n        // { value: 'fetch-public-cert', title: 'Extract public cert from Keystore' },\n        // {\n        //   value: 'fetch-private-signing-key',\n        //   title:\n        //     'Extract private signing key (required when migration to App Signing by Google Play)',\n        // },\n      ],\n    });\n\n    return this.handleAction(ctx, action);\n  }\n\n  handleAction(context: Context, selected: string): IView | null {\n    switch (selected) {\n      case 'update-keystore':\n        return new UpdateKeystore(this.experienceName, { skipKeystoreValidation: false });\n      case 'remove-keystore':\n        return new RemoveKeystore(this.experienceName);\n      case 'update-fcm-key':\n        return new UpdateFcmKey(this.experienceName);\n      case 'fetch-keystore':\n        return new DownloadKeystore(this.experienceName);\n      case 'fetch-public-cert':\n        return null;\n    }\n    return null;\n  }\n}\n\nexport { ExperienceView };\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA,MAAMA,cAAN,CAAsC;EACpCC,WAAW,CAASC,cAAT,EAAiC;IAAA,KAAxBA,cAAwB,GAAxBA,cAAwB;EAAE;;EAEpC,MAAJC,IAAI,CAACC,GAAD,EAAsC;IAC9C,MAAMC,WAAW,GAAG,MAAMD,GAAG,CAACE,OAAJ,CAAYC,gBAAZ,CAA6B,KAAKL,cAAlC,CAA1B;;IAEA,IAAI,IAAAM,kBAAA,EAAQH,WAAW,CAACI,QAApB,KAAiC,IAAAD,kBAAA,EAAQH,WAAW,CAACK,eAApB,CAArC,EAA2E;MACzEC,cAAA,CAAIC,GAAJ,CAAS,gCAA+B,KAAKV,cAAe,gBAA5D;IACD,CAFD,MAEO,IAAI,KAAKA,cAAT,EAAyB;MAC9BS,cAAA,CAAIE,OAAJ;;MACA,MAAM,IAAAC,oCAAA,EAA6BT,WAA7B,CAAN;;MACAM,cAAA,CAAIE,OAAJ;IACD;;IAED,MAAM;MAAEE;IAAF,IAAa,MAAM,IAAAC,kBAAA,EAAO;MAC9BC,IAAI,EAAE,QADwB;MAE9BC,IAAI,EAAE,QAFwB;MAG9BC,OAAO,EAAE,yBAHqB;MAI9BC,OAAO,EAAE,CACP;QAAEC,KAAK,EAAE,iBAAT;QAA4BC,KAAK,EAAE;MAAnC,CADO,EAEP;QAAED,KAAK,EAAE,iBAAT;QAA4BC,KAAK,EAAE;MAAnC,CAFO,EAGP;QAAED,KAAK,EAAE,gBAAT;QAA2BC,KAAK,EAAE;MAAlC,CAHO,EAIP;QAAED,KAAK,EAAE,gBAAT;QAA2BC,KAAK,EAAE;MAAlC,CAJO,CAKP;MACA;MACA;MACA;MACA;MACA;MAVO;IAJqB,CAAP,CAAzB;IAkBA,OAAO,KAAKC,YAAL,CAAkBnB,GAAlB,EAAuBW,MAAvB,CAAP;EACD;;EAEDQ,YAAY,CAACC,OAAD,EAAmBC,QAAnB,EAAmD;IAC7D,QAAQA,QAAR;MACE,KAAK,iBAAL;QACE,OAAO,KAAIC,iCAAJ,EAAmB,KAAKxB,cAAxB,EAAwC;UAAEyB,sBAAsB,EAAE;QAA1B,CAAxC,CAAP;;MACF,KAAK,iBAAL;QACE,OAAO,KAAIC,iCAAJ,EAAmB,KAAK1B,cAAxB,CAAP;;MACF,KAAK,gBAAL;QACE,OAAO,KAAI2B,sCAAJ,EAAiB,KAAK3B,cAAtB,CAAP;;MACF,KAAK,gBAAL;QACE,OAAO,KAAI4B,mCAAJ,EAAqB,KAAK5B,cAA1B,CAAP;;MACF,KAAK,mBAAL;QACE,OAAO,IAAP;IAVJ;;IAYA,OAAO,IAAP;EACD;;AAjDmC"}