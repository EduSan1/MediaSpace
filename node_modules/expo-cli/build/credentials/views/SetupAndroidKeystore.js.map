{"version":3,"file":"SetupAndroidKeystore.js","names":["SetupAndroidKeystore","constructor","experienceName","options","open","ctx","keystore","keystorePassword","keyAlias","keyPassword","android","fetchKeystore","nonInteractive","allowMissingKeystore","Log","warn","Error","UpdateKeystore","bestEffortKeystoreGeneration","skipKeystoreValidation","SetupAndroidBuildCredentialsFromLocal","localCredentials","credentialsJsonReader","readAndroidCredentialsAsync","projectDir","error","validateKeystoreAsync","updateKeystore"],"sources":["../../../src/credentials/views/SetupAndroidKeystore.ts"],"sourcesContent":["import Log from '../../log';\nimport { Context, IView } from '../context';\nimport * as credentialsJsonReader from '../credentialsJson/read';\nimport validateKeystoreAsync from '../utils/validateKeystore';\nimport { UpdateKeystore } from './AndroidKeystore';\n\ninterface Options {\n  nonInteractive?: boolean;\n  allowMissingKeystore?: boolean;\n  skipKeystoreValidation: boolean;\n}\n\nexport class SetupAndroidKeystore implements IView {\n  constructor(private experienceName: string, private options: Options) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    const { keystore, keystorePassword, keyAlias, keyPassword } =\n      (await ctx.android.fetchKeystore(this.experienceName)) ?? {};\n    if (keystore && keystorePassword && keyAlias && keyPassword) {\n      return null;\n    }\n    if (this.options.nonInteractive) {\n      if (this.options.allowMissingKeystore) {\n        Log.warn(\n          'There is no valid Keystore defined for this app, new one will be generated on Expo servers.'\n        );\n        return null;\n      } else {\n        throw new Error('Generating a new Keystore is not supported in --non-interactive mode');\n      }\n    }\n\n    return new UpdateKeystore(this.experienceName, {\n      bestEffortKeystoreGeneration: true,\n      skipKeystoreValidation: this.options.skipKeystoreValidation,\n    });\n  }\n}\n\nexport class SetupAndroidBuildCredentialsFromLocal implements IView {\n  constructor(\n    private experienceName: string,\n    private options: { skipKeystoreValidation: boolean }\n  ) {}\n\n  async open(ctx: Context): Promise<IView | null> {\n    let localCredentials;\n    try {\n      localCredentials = await credentialsJsonReader.readAndroidCredentialsAsync(ctx.projectDir);\n    } catch (error: any) {\n      Log.error(\n        'Reading credentials from credentials.json failed. Make sure this file is correct and all credentials are present there.'\n      );\n      throw error;\n    }\n    if (!this.options.skipKeystoreValidation) {\n      await validateKeystoreAsync(localCredentials.keystore);\n    }\n    await ctx.android.updateKeystore(this.experienceName, localCredentials.keystore);\n    return null;\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AAQO,MAAMA,oBAAN,CAA4C;EACjDC,WAAW,CAASC,cAAT,EAAyCC,OAAzC,EAA2D;IAAA,KAAlDD,cAAkD,GAAlDA,cAAkD;IAAA,KAAlBC,OAAkB,GAAlBA,OAAkB;EAAE;;EAE9D,MAAJC,IAAI,CAACC,GAAD,EAAsC;IAAA;;IAC9C,MAAM;MAAEC,QAAF;MAAYC,gBAAZ;MAA8BC,QAA9B;MAAwCC;IAAxC,6BACH,MAAMJ,GAAG,CAACK,OAAJ,CAAYC,aAAZ,CAA0B,KAAKT,cAA/B,CADH,yEACsD,EAD5D;;IAEA,IAAII,QAAQ,IAAIC,gBAAZ,IAAgCC,QAAhC,IAA4CC,WAAhD,EAA6D;MAC3D,OAAO,IAAP;IACD;;IACD,IAAI,KAAKN,OAAL,CAAaS,cAAjB,EAAiC;MAC/B,IAAI,KAAKT,OAAL,CAAaU,oBAAjB,EAAuC;QACrCC,cAAA,CAAIC,IAAJ,CACE,6FADF;;QAGA,OAAO,IAAP;MACD,CALD,MAKO;QACL,MAAM,IAAIC,KAAJ,CAAU,sEAAV,CAAN;MACD;IACF;;IAED,OAAO,KAAIC,iCAAJ,EAAmB,KAAKf,cAAxB,EAAwC;MAC7CgB,4BAA4B,EAAE,IADe;MAE7CC,sBAAsB,EAAE,KAAKhB,OAAL,CAAagB;IAFQ,CAAxC,CAAP;EAID;;AAxBgD;;;;AA2B5C,MAAMC,qCAAN,CAA6D;EAClEnB,WAAW,CACDC,cADC,EAEDC,OAFC,EAGT;IAAA,KAFQD,cAER,GAFQA,cAER;IAAA,KADQC,OACR,GADQA,OACR;EAAE;;EAEM,MAAJC,IAAI,CAACC,GAAD,EAAsC;IAC9C,IAAIgB,gBAAJ;;IACA,IAAI;MACFA,gBAAgB,GAAG,MAAMC,qBAAqB,GAACC,2BAAtB,CAAkDlB,GAAG,CAACmB,UAAtD,CAAzB;IACD,CAFD,CAEE,OAAOC,KAAP,EAAmB;MACnBX,cAAA,CAAIW,KAAJ,CACE,yHADF;;MAGA,MAAMA,KAAN;IACD;;IACD,IAAI,CAAC,KAAKtB,OAAL,CAAagB,sBAAlB,EAA0C;MACxC,MAAM,IAAAO,2BAAA,EAAsBL,gBAAgB,CAACf,QAAvC,CAAN;IACD;;IACD,MAAMD,GAAG,CAACK,OAAJ,CAAYiB,cAAZ,CAA2B,KAAKzB,cAAhC,EAAgDmB,gBAAgB,CAACf,QAAjE,CAAN;IACA,OAAO,IAAP;EACD;;AArBiE"}