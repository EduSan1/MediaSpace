{"version":3,"file":"read.js","names":["CredentialsJsonSchema","Joi","object","android","keystore","keystorePath","string","required","keystorePassword","keyAlias","keyPassword","ios","provisioningProfilePath","distributionCertificate","path","password","experimental","npmToken","fileExistsAsync","projectDir","fs","pathExists","join","readAndroidCredentialsAsync","credentialsJson","readAsync","Error","keystoreInfo","readFile","getAbsolutePath","readIosCredentialsAsync","provisioningProfile","certP12","certPassword","readSecretEnvsAsync","undefined","NPM_TOKEN","credentialsJSONRaw","readRawAsync","value","error","validate","stripUnknown","convert","abortEarly","toString","credentialsJsonFilePath","credentialsJSONContents","JSON","parse","filePath","isAbsolute"],"sources":["../../../src/credentials/credentialsJson/read.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport Joi from 'joi';\nimport path from 'path';\n\nimport { Keystore } from '../credentials';\n\ninterface CredentialsJson {\n  android?: {\n    keystore: {\n      keystorePath: string;\n      keystorePassword: string;\n      keyAlias: string;\n      keyPassword: string;\n    };\n  };\n  ios?: {\n    provisioningProfilePath: string;\n    distributionCertificate: {\n      path: string;\n      password: string;\n    };\n  };\n  experimental?: {\n    npmToken?: string;\n  };\n}\n\nconst CredentialsJsonSchema = Joi.object({\n  android: Joi.object({\n    keystore: Joi.object({\n      keystorePath: Joi.string().required(),\n      keystorePassword: Joi.string().required(),\n      keyAlias: Joi.string().required(),\n      keyPassword: Joi.string().required(),\n    }),\n  }),\n  ios: Joi.object({\n    provisioningProfilePath: Joi.string().required(),\n    distributionCertificate: Joi.object({\n      path: Joi.string().required(),\n      password: Joi.string().required(),\n    }).required(),\n  }),\n  experimental: Joi.object({\n    npmToken: Joi.string(),\n  }),\n});\n\ninterface AndroidCredentials {\n  keystore: Keystore;\n}\n\ninterface iOSCredentials {\n  provisioningProfile: string;\n  distributionCertificate: {\n    certP12: string;\n    certPassword: string;\n  };\n}\n\nexport async function fileExistsAsync(projectDir: string): Promise<boolean> {\n  return await fs.pathExists(path.join(projectDir, 'credentials.json'));\n}\n\nexport async function readAndroidCredentialsAsync(projectDir: string): Promise<AndroidCredentials> {\n  const credentialsJson = await readAsync(projectDir);\n  if (!credentialsJson.android) {\n    throw new Error('Android credentials are missing from credentials.json'); // TODO: add fyi\n  }\n  const keystoreInfo = credentialsJson.android.keystore;\n  return {\n    keystore: {\n      keystore: await fs.readFile(getAbsolutePath(projectDir, keystoreInfo.keystorePath), 'base64'),\n      keystorePassword: keystoreInfo.keystorePassword,\n      keyAlias: keystoreInfo.keyAlias,\n      keyPassword: keystoreInfo.keyPassword,\n    },\n  };\n}\n\nexport async function readIosCredentialsAsync(projectDir: string): Promise<iOSCredentials> {\n  const credentialsJson = await readAsync(projectDir);\n  if (!credentialsJson.ios) {\n    throw new Error('iOS credentials are missing from credentials.json'); // TODO: add fyi\n  }\n  return {\n    provisioningProfile: await fs.readFile(\n      getAbsolutePath(projectDir, credentialsJson.ios.provisioningProfilePath),\n      'base64'\n    ),\n    distributionCertificate: {\n      certP12: await fs.readFile(\n        getAbsolutePath(projectDir, credentialsJson.ios.distributionCertificate.path),\n        'base64'\n      ),\n      certPassword: credentialsJson.ios.distributionCertificate.password,\n    },\n  };\n}\n\nexport async function readSecretEnvsAsync(\n  projectDir: string\n): Promise<Record<string, string> | undefined> {\n  if (!(await fileExistsAsync(projectDir))) {\n    return undefined;\n  }\n  const credentialsJson = await readAsync(projectDir);\n  const npmToken = credentialsJson?.experimental?.npmToken;\n  return npmToken ? { NPM_TOKEN: npmToken } : undefined;\n}\n\nasync function readAsync(projectDir: string): Promise<CredentialsJson> {\n  const credentialsJSONRaw = await readRawAsync(projectDir);\n\n  const { value: credentialsJson, error } = CredentialsJsonSchema.validate(credentialsJSONRaw, {\n    stripUnknown: true,\n    convert: true,\n    abortEarly: false,\n  });\n  if (error) {\n    throw new Error(`credentials.json is not valid [${error.toString()}]`);\n  }\n\n  return credentialsJson;\n}\n\nexport async function readRawAsync(projectDir: string): Promise<any> {\n  const credentialsJsonFilePath = path.join(projectDir, 'credentials.json');\n  try {\n    const credentialsJSONContents = await fs.readFile(credentialsJsonFilePath, 'utf8');\n    return JSON.parse(credentialsJSONContents);\n  } catch {\n    throw new Error(\n      `credentials.json must exist in the project root directory and contain a valid JSON`\n    );\n  }\n}\n\nconst getAbsolutePath = (projectDir: string, filePath: string): string =>\n  path.isAbsolute(filePath) ? filePath : path.join(projectDir, filePath);\n"],"mappings":";;;;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAyBA,MAAMA,qBAAqB,GAAGC,cAAA,CAAIC,MAAJ,CAAW;EACvCC,OAAO,EAAEF,cAAA,CAAIC,MAAJ,CAAW;IAClBE,QAAQ,EAAEH,cAAA,CAAIC,MAAJ,CAAW;MACnBG,YAAY,EAAEJ,cAAA,CAAIK,MAAJ,GAAaC,QAAb,EADK;MAEnBC,gBAAgB,EAAEP,cAAA,CAAIK,MAAJ,GAAaC,QAAb,EAFC;MAGnBE,QAAQ,EAAER,cAAA,CAAIK,MAAJ,GAAaC,QAAb,EAHS;MAInBG,WAAW,EAAET,cAAA,CAAIK,MAAJ,GAAaC,QAAb;IAJM,CAAX;EADQ,CAAX,CAD8B;EASvCI,GAAG,EAAEV,cAAA,CAAIC,MAAJ,CAAW;IACdU,uBAAuB,EAAEX,cAAA,CAAIK,MAAJ,GAAaC,QAAb,EADX;IAEdM,uBAAuB,EAAEZ,cAAA,CAAIC,MAAJ,CAAW;MAClCY,IAAI,EAAEb,cAAA,CAAIK,MAAJ,GAAaC,QAAb,EAD4B;MAElCQ,QAAQ,EAAEd,cAAA,CAAIK,MAAJ,GAAaC,QAAb;IAFwB,CAAX,EAGtBA,QAHsB;EAFX,CAAX,CATkC;EAgBvCS,YAAY,EAAEf,cAAA,CAAIC,MAAJ,CAAW;IACvBe,QAAQ,EAAEhB,cAAA,CAAIK,MAAJ;EADa,CAAX;AAhByB,CAAX,CAA9B;;AAiCO,eAAeY,eAAf,CAA+BC,UAA/B,EAAqE;EAC1E,OAAO,MAAMC,kBAAA,CAAGC,UAAH,CAAcP,eAAA,CAAKQ,IAAL,CAAUH,UAAV,EAAsB,kBAAtB,CAAd,CAAb;AACD;;AAEM,eAAeI,2BAAf,CAA2CJ,UAA3C,EAA4F;EACjG,MAAMK,eAAe,GAAG,MAAMC,SAAS,CAACN,UAAD,CAAvC;;EACA,IAAI,CAACK,eAAe,CAACrB,OAArB,EAA8B;IAC5B,MAAM,IAAIuB,KAAJ,CAAU,uDAAV,CAAN,CAD4B,CAC8C;EAC3E;;EACD,MAAMC,YAAY,GAAGH,eAAe,CAACrB,OAAhB,CAAwBC,QAA7C;EACA,OAAO;IACLA,QAAQ,EAAE;MACRA,QAAQ,EAAE,MAAMgB,kBAAA,CAAGQ,QAAH,CAAYC,eAAe,CAACV,UAAD,EAAaQ,YAAY,CAACtB,YAA1B,CAA3B,EAAoE,QAApE,CADR;MAERG,gBAAgB,EAAEmB,YAAY,CAACnB,gBAFvB;MAGRC,QAAQ,EAAEkB,YAAY,CAAClB,QAHf;MAIRC,WAAW,EAAEiB,YAAY,CAACjB;IAJlB;EADL,CAAP;AAQD;;AAEM,eAAeoB,uBAAf,CAAuCX,UAAvC,EAAoF;EACzF,MAAMK,eAAe,GAAG,MAAMC,SAAS,CAACN,UAAD,CAAvC;;EACA,IAAI,CAACK,eAAe,CAACb,GAArB,EAA0B;IACxB,MAAM,IAAIe,KAAJ,CAAU,mDAAV,CAAN,CADwB,CAC8C;EACvE;;EACD,OAAO;IACLK,mBAAmB,EAAE,MAAMX,kBAAA,CAAGQ,QAAH,CACzBC,eAAe,CAACV,UAAD,EAAaK,eAAe,CAACb,GAAhB,CAAoBC,uBAAjC,CADU,EAEzB,QAFyB,CADtB;IAKLC,uBAAuB,EAAE;MACvBmB,OAAO,EAAE,MAAMZ,kBAAA,CAAGQ,QAAH,CACbC,eAAe,CAACV,UAAD,EAAaK,eAAe,CAACb,GAAhB,CAAoBE,uBAApB,CAA4CC,IAAzD,CADF,EAEb,QAFa,CADQ;MAKvBmB,YAAY,EAAET,eAAe,CAACb,GAAhB,CAAoBE,uBAApB,CAA4CE;IALnC;EALpB,CAAP;AAaD;;AAEM,eAAemB,mBAAf,CACLf,UADK,EAEwC;EAAA;;EAC7C,IAAI,EAAE,MAAMD,eAAe,CAACC,UAAD,CAAvB,CAAJ,EAA0C;IACxC,OAAOgB,SAAP;EACD;;EACD,MAAMX,eAAe,GAAG,MAAMC,SAAS,CAACN,UAAD,CAAvC;EACA,MAAMF,QAAQ,GAAGO,eAAH,aAAGA,eAAH,gDAAGA,eAAe,CAAER,YAApB,0DAAG,sBAA+BC,QAAhD;EACA,OAAOA,QAAQ,GAAG;IAAEmB,SAAS,EAAEnB;EAAb,CAAH,GAA6BkB,SAA5C;AACD;;AAED,eAAeV,SAAf,CAAyBN,UAAzB,EAAuE;EACrE,MAAMkB,kBAAkB,GAAG,MAAMC,YAAY,CAACnB,UAAD,CAA7C;EAEA,MAAM;IAAEoB,KAAK,EAAEf,eAAT;IAA0BgB;EAA1B,IAAoCxC,qBAAqB,CAACyC,QAAtB,CAA+BJ,kBAA/B,EAAmD;IAC3FK,YAAY,EAAE,IAD6E;IAE3FC,OAAO,EAAE,IAFkF;IAG3FC,UAAU,EAAE;EAH+E,CAAnD,CAA1C;;EAKA,IAAIJ,KAAJ,EAAW;IACT,MAAM,IAAId,KAAJ,CAAW,kCAAiCc,KAAK,CAACK,QAAN,EAAiB,GAA7D,CAAN;EACD;;EAED,OAAOrB,eAAP;AACD;;AAEM,eAAec,YAAf,CAA4BnB,UAA5B,EAA8D;EACnE,MAAM2B,uBAAuB,GAAGhC,eAAA,CAAKQ,IAAL,CAAUH,UAAV,EAAsB,kBAAtB,CAAhC;;EACA,IAAI;IACF,MAAM4B,uBAAuB,GAAG,MAAM3B,kBAAA,CAAGQ,QAAH,CAAYkB,uBAAZ,EAAqC,MAArC,CAAtC;IACA,OAAOE,IAAI,CAACC,KAAL,CAAWF,uBAAX,CAAP;EACD,CAHD,CAGE,MAAM;IACN,MAAM,IAAIrB,KAAJ,CACH,oFADG,CAAN;EAGD;AACF;;AAED,MAAMG,eAAe,GAAG,CAACV,UAAD,EAAqB+B,QAArB,KACtBpC,eAAA,CAAKqC,UAAL,CAAgBD,QAAhB,IAA4BA,QAA5B,GAAuCpC,eAAA,CAAKQ,IAAL,CAAUH,UAAV,EAAsB+B,QAAtB,CADzC"}