{"version":3,"file":"update.js","names":["updateAndroidCredentialsAsync","ctx","credentialsJsonFilePath","path","join","projectDir","rawCredentialsJsonObject","fs","pathExists","rawFile","readFile","JSON","parse","error","Log","experienceName","projectOwner","manifest","slug","keystore","android","fetchKeystore","isKeystoreComplete","keystorePassword","keyPassword","keyAlias","confirm","confirmAsync","message","warn","keystorePath","log","updateFileAsync","shouldWarnKeystore","isFileUntrackedAsync","writeJson","spaces","shouldWarnCredentialsJson","newFilePaths","push","displayUntrackedFilesWarning","updateIosCredentialsAsync","bundleIdentifier","appLookupParams","accountName","projectName","pprofilePath","ios","provisioningProfilePath","distCertPath","distributionCertificate","appCredentials","getAppCredentials","distCredentials","getDistCert","credentials","provisioningProfile","areCredentialsComplete","certP12","certPassword","shouldWarnPProfile","shouldWarnDistCert","password","filePath","base64Data","absolutePath","isAbsolute","remove","mkdirp","dirname","writeFile","Buffer","from","withUntrackedFiles","gitStatusAsync","showUntracked","trackedFiles","pathWithoutLeadingDot","replace","includes","length"],"sources":["../../../src/credentials/credentialsJson/update.ts"],"sourcesContent":["import fs from 'fs-extra';\nimport path from 'path';\n\nimport Log from '../../log';\nimport { confirmAsync } from '../../utils/prompts';\nimport { Context } from '../context';\nimport { gitStatusAsync } from '../utils/git';\n\nexport async function updateAndroidCredentialsAsync(ctx: Context) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error: any) {\n      Log.error(`There was an error while reading credentials.json [${error}]`);\n      Log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n  const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n  const keystore = await ctx.android.fetchKeystore(experienceName);\n  if (!keystore) {\n    Log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const isKeystoreComplete =\n    keystore.keystore && keystore.keystorePassword && keystore.keyPassword && keystore.keyAlias;\n\n  if (!isKeystoreComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      Log.warn('Aborting...');\n      return;\n    }\n  }\n\n  const keystorePath =\n    rawCredentialsJsonObject?.android?.keystore?.keystorePath ?? 'android/keystores/keystore.jks';\n  Log.log(`Writing Keystore to ${keystorePath}`);\n  await updateFileAsync(ctx.projectDir, keystorePath, keystore.keystore);\n  const shouldWarnKeystore = await isFileUntrackedAsync(keystorePath);\n\n  rawCredentialsJsonObject.android = {\n    keystore: {\n      keystorePath,\n      keystorePassword: keystore.keystorePassword,\n      keyAlias: keystore.keyAlias,\n      keyPassword: keystore.keyPassword,\n    },\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnKeystore) {\n    newFilePaths.push(keystorePath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nexport async function updateIosCredentialsAsync(ctx: Context, bundleIdentifier: string) {\n  const credentialsJsonFilePath = path.join(ctx.projectDir, 'credentials.json');\n  let rawCredentialsJsonObject: any = {};\n  if (await fs.pathExists(credentialsJsonFilePath)) {\n    try {\n      const rawFile = await fs.readFile(credentialsJsonFilePath, 'utf-8');\n      rawCredentialsJsonObject = JSON.parse(rawFile);\n    } catch (error: any) {\n      Log.error(`There was an error while reading credentials.json [${error}]`);\n      Log.error('Make sure that file is correct (or remove it) and rerun this command.');\n      throw error;\n    }\n  }\n\n  const appLookupParams = {\n    accountName: ctx.projectOwner,\n    projectName: ctx.manifest.slug,\n    bundleIdentifier,\n  };\n  const pprofilePath =\n    rawCredentialsJsonObject?.ios?.provisioningProfilePath ?? 'ios/certs/profile.mobileprovision';\n  const distCertPath =\n    rawCredentialsJsonObject?.ios?.distributionCertificate?.path ?? 'ios/certs/dist-cert.p12';\n  const appCredentials = await ctx.ios.getAppCredentials(appLookupParams);\n  const distCredentials = await ctx.ios.getDistCert(appLookupParams);\n  if (!appCredentials?.credentials?.provisioningProfile && !distCredentials) {\n    Log.error('There are no credentials configured for this project on Expo servers');\n    return;\n  }\n\n  const areCredentialsComplete =\n    appCredentials?.credentials?.provisioningProfile &&\n    distCredentials?.certP12 &&\n    distCredentials?.certPassword;\n\n  if (!areCredentialsComplete) {\n    const confirm = await confirmAsync({\n      message:\n        'Credentials on Expo servers might be invalid or incomplete. Are you sure you want to continue?',\n    });\n    if (!confirm) {\n      Log.warn('Aborting...');\n      return;\n    }\n  }\n\n  Log.log(`Writing Provisioning Profile to ${pprofilePath}`);\n  await updateFileAsync(\n    ctx.projectDir,\n    pprofilePath,\n    appCredentials?.credentials?.provisioningProfile\n  );\n  const shouldWarnPProfile = await isFileUntrackedAsync(pprofilePath);\n\n  Log.log(`Writing Distribution Certificate to ${distCertPath}`);\n  await updateFileAsync(ctx.projectDir, distCertPath, distCredentials?.certP12);\n  const shouldWarnDistCert = await isFileUntrackedAsync(distCertPath);\n\n  rawCredentialsJsonObject.ios = {\n    ...(appCredentials?.credentials?.provisioningProfile\n      ? { provisioningProfilePath: pprofilePath }\n      : {}),\n    ...(distCredentials?.certP12 && distCredentials?.certPassword\n      ? {\n          distributionCertificate: {\n            path: distCertPath,\n            password: distCredentials?.certPassword,\n          },\n        }\n      : {}),\n  };\n  await fs.writeJson(credentialsJsonFilePath, rawCredentialsJsonObject, {\n    spaces: 2,\n  });\n  const shouldWarnCredentialsJson = await isFileUntrackedAsync('credentials.json');\n\n  const newFilePaths = [];\n  if (shouldWarnPProfile) {\n    newFilePaths.push(pprofilePath);\n  }\n  if (shouldWarnDistCert) {\n    newFilePaths.push(distCertPath);\n  }\n  if (shouldWarnCredentialsJson) {\n    newFilePaths.push('credentials.json');\n  }\n  displayUntrackedFilesWarning(newFilePaths);\n}\n\nasync function updateFileAsync(projectDir: string, filePath: string, base64Data?: string) {\n  const absolutePath = path.isAbsolute(filePath) ? filePath : path.join(projectDir, filePath);\n  if (await fs.pathExists(absolutePath)) {\n    await fs.remove(absolutePath);\n  }\n  if (base64Data) {\n    await fs.mkdirp(path.dirname(filePath));\n    await fs.writeFile(filePath, Buffer.from(base64Data, 'base64'));\n  }\n}\n\nasync function isFileUntrackedAsync(path: string): Promise<boolean> {\n  const withUntrackedFiles = await gitStatusAsync({ showUntracked: true });\n  const trackedFiles = await gitStatusAsync({ showUntracked: false });\n  const pathWithoutLeadingDot = path.replace(/^\\.\\//, ''); // remove leading './' from path\n  return (\n    withUntrackedFiles.includes(pathWithoutLeadingDot) &&\n    !trackedFiles.includes(pathWithoutLeadingDot)\n  );\n}\n\nfunction displayUntrackedFilesWarning(newFilePaths: string[]) {\n  if (newFilePaths.length === 1) {\n    Log.warn(\n      `File ${newFilePaths[0]} is currently untracked, remember to add it to .gitignore or to encrypt it. (e.g. with git-crypt)`\n    );\n  } else if (newFilePaths.length > 1) {\n    Log.warn(\n      `Files ${newFilePaths.join(\n        ', '\n      )} are currently untracked, remember to add them to .gitignore or to encrypt them. (e.g. with git-crypt)`\n    );\n  }\n}\n"],"mappings":"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"}