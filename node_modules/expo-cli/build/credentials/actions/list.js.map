{"version":3,"file":"list.js","names":["displayProjectCredentials","appLookupParams","appCredentials","pushKey","distCert","experienceName","accountName","projectName","bundleIdentifier","Log","log","chalk","bold","displayIosAppCredentials","displayIosUserCredentials","displayIosCredentials","credentials","cred","userCredentials","provisioningProfile","green","provisioningProfileId","teamId","teamName","pushP12","pushPassword","pushId","type","apnsKeyId","certId","warn","field","usedByApps","Set","filter","c","id","map","join","usedByAppsText","gray","displayAndroidCredentials","credentialsList","displayAndroidAppCredentials","tmpFilename","path","os","tmpdir","uuid","keystore","storeBuf","Buffer","from","fs","writeFile","Android","logKeystoreHashes","keystorePath","pushCredentials","fcmApiKey","error","remove"],"sources":["../../../src/credentials/actions/list.ts"],"sourcesContent":["import chalk from 'chalk';\nimport fs from 'fs-extra';\nimport os from 'os';\nimport path from 'path';\nimport { v4 as uuid } from 'uuid';\nimport { AndroidCredentials as Android } from 'xdl';\n\nimport Log from '../../log';\nimport { AppLookupParams } from '../api/IosApi';\nimport {\n  AndroidCredentials,\n  IosAppCredentials,\n  IosCredentials,\n  IosDistCredentials,\n  IosPushCredentials,\n} from '../credentials';\n\nexport function displayProjectCredentials(\n  appLookupParams: AppLookupParams,\n  appCredentials?: IosAppCredentials | null,\n  pushKey?: IosPushCredentials | null,\n  distCert?: IosDistCredentials | null\n): void {\n  const experienceName = `@${appLookupParams.accountName}/${appLookupParams.projectName}`;\n  const bundleIdentifier = appLookupParams.bundleIdentifier;\n  if (!appCredentials) {\n    Log.log(\n      chalk.bold(\n        `No credentials configured for app ${experienceName} with bundle identifier ${bundleIdentifier}\\n`\n      )\n    );\n    return;\n  }\n\n  Log.log();\n  Log.log(chalk.bold('Project Credential Configuration:'));\n  displayIosAppCredentials(appCredentials);\n  Log.log();\n\n  if (distCert) {\n    displayIosUserCredentials(distCert);\n  }\n\n  if (pushKey) {\n    displayIosUserCredentials(pushKey);\n  }\n}\n\nexport async function displayIosCredentials(credentials: IosCredentials) {\n  Log.log(chalk.bold('Available credentials for iOS apps\\n'));\n\n  Log.log(chalk.bold('Application credentials\\n'));\n  for (const cred of credentials.appCredentials) {\n    displayIosAppCredentials(cred);\n    Log.log();\n  }\n\n  Log.log();\n  Log.log(chalk.bold('User credentials\\n'));\n  for (const cred of credentials.userCredentials) {\n    displayIosUserCredentials(cred, credentials);\n    Log.log();\n  }\n  Log.log();\n  Log.log();\n}\n\nexport function displayIosAppCredentials(appCredentials: IosAppCredentials) {\n  Log.log(\n    `  Experience: ${chalk.bold(appCredentials.experienceName)}, bundle identifier: ${\n      appCredentials.bundleIdentifier\n    }`\n  );\n  if (appCredentials.credentials.provisioningProfile) {\n    Log.log(\n      `    Provisioning profile (ID: ${chalk.green(\n        appCredentials.credentials.provisioningProfileId || '---------'\n      )})`\n    );\n  } else {\n    Log.log('    Provisioning profile is missing. It will be generated during the next build');\n  }\n  if (appCredentials.credentials.teamId || appCredentials.credentials.teamName) {\n    Log.log(\n      `    Apple Team ID: ${chalk.green(\n        appCredentials.credentials.teamId || '---------'\n      )},  Apple Team Name: ${chalk.green(appCredentials.credentials.teamName || '---------')}`\n    );\n  }\n  if (appCredentials.credentials.pushP12 && appCredentials.credentials.pushPassword) {\n    Log.log(\n      `    (deprecated) Push Certificate (Push ID: ${chalk.green(\n        appCredentials.credentials.pushId || '-----'\n      )})`\n    );\n  }\n}\n\nexport function displayIosUserCredentials(\n  userCredentials: IosPushCredentials | IosDistCredentials,\n  credentials?: IosCredentials\n) {\n  if (userCredentials.type === 'push-key') {\n    Log.log(`  Push Notifications Key - Key ID: ${chalk.green(userCredentials.apnsKeyId)}`);\n  } else if (userCredentials.type === 'dist-cert') {\n    Log.log(\n      `  Distribution Certificate - Certificate ID: ${chalk.green(\n        userCredentials.certId || '-----'\n      )}`\n    );\n  } else {\n    Log.warn(`  Unknown key type ${(userCredentials as any).type}`);\n  }\n  Log.log(\n    `    Apple Team ID: ${chalk.green(\n      userCredentials.teamId || '---------'\n    )},  Apple Team Name: ${chalk.green(userCredentials.teamName || '---------')}`\n  );\n\n  if (credentials) {\n    const field = userCredentials.type === 'push-key' ? 'pushCredentialsId' : 'distCredentialsId';\n    const usedByApps = [\n      ...new Set(\n        credentials.appCredentials\n          .filter(c => c[field] === userCredentials.id)\n          .map(c => `${c.experienceName} (${c.bundleIdentifier})`)\n      ),\n    ].join(',\\n      ');\n    const usedByAppsText = usedByApps ? `used by\\n      ${usedByApps}` : 'not used by any apps';\n    Log.log(`    ${chalk.gray(usedByAppsText)}`);\n  }\n}\n\nexport async function displayAndroidCredentials(credentialsList: AndroidCredentials[]) {\n  Log.log(chalk.bold('Available Android credentials'));\n  Log.log();\n  for (const credentials of credentialsList) {\n    await displayAndroidAppCredentials(credentials);\n  }\n}\n\nexport async function displayAndroidAppCredentials(credentials: AndroidCredentials) {\n  const tmpFilename = path.join(os.tmpdir(), `expo_tmp_keystore_${uuid()}file.jks`);\n  try {\n    Log.log(chalk.green(credentials.experienceName));\n    Log.log(chalk.bold('  Upload Keystore hashes'));\n    if (credentials.keystore?.keystore) {\n      const storeBuf = Buffer.from(credentials.keystore.keystore, 'base64');\n      await fs.writeFile(tmpFilename, storeBuf);\n      await Android.logKeystoreHashes(\n        {\n          keystorePath: tmpFilename,\n          ...(credentials.keystore as Android.Keystore),\n        },\n        '    '\n      );\n    } else {\n      Log.log('    -----------------------');\n    }\n    Log.log(chalk.bold('  Push Notifications credentials'));\n    Log.log('    FCM Api Key: ', credentials.pushCredentials?.fcmApiKey ?? '---------------------');\n    Log.log('\\n');\n  } catch (error: any) {\n    Log.error('  Failed to parse the Keystore', error);\n    Log.log('\\n');\n  } finally {\n    await fs.remove(tmpFilename);\n  }\n}\n"],"mappings":"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"}