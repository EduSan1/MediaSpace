{"version":3,"file":"pushKey.js","names":["isPushKey","obj","apnsKeyP8","apnsKeyId","teamId","MaxKeysCreatedError","Keys","APPLE_KEYS_TOO_MANY_GENERATED_ERROR","chalk","underline","listPushKeysAsync","authCtx","spinner","ora","start","context","getRequestContext","keys","getKeysAsync","succeed","error","fail","createPushKeyAsync","name","dateformat","key","createKeyAsync","isApns","downloadKeyAsync","id","team","teamName","err","resultString","rawDump","match","CommandError","revokePushKeyAsync","ids","length","Promise","all","map","revokeKeyAsync","Log","PushKeyManager","constructor","appleCtx","ctx","list","create","revoke","format"],"sources":["../../src/appleApi/pushKey.ts"],"sourcesContent":["import { Keys } from '@expo/apple-utils';\nimport chalk from 'chalk';\nimport dateformat from 'dateformat';\n\nimport CommandError from '../CommandError';\nimport Log from '../log';\nimport { ora } from '../utils/ora';\nimport { AppleCtx, getRequestContext } from './authenticate';\n\nexport type PushKeyInfo = {\n  id: string;\n  name: string;\n};\n\nexport type PushKey = {\n  apnsKeyP8: string;\n  apnsKeyId: string;\n  teamId: string;\n  teamName?: string;\n};\n\nexport function isPushKey(obj: { [key: string]: any }): obj is PushKey {\n  return (\n    obj.apnsKeyP8 &&\n    typeof obj.apnsKeyP8 === 'string' &&\n    obj.apnsKeyId &&\n    typeof obj.apnsKeyId === 'string' &&\n    obj.teamId &&\n    typeof obj.teamId === 'string'\n  );\n}\n\nconst { MaxKeysCreatedError } = Keys;\n\nconst APPLE_KEYS_TOO_MANY_GENERATED_ERROR = `\nYou can have only ${chalk.underline('two')} Apple Keys generated on your Apple Developer account.\nPlease revoke the old ones or reuse existing from your other apps.\nPlease remember that Apple Keys are not application specific!\n`;\n\nasync function listPushKeysAsync(authCtx: AppleCtx): Promise<PushKeyInfo[]> {\n  const spinner = ora(`Fetching Apple push keys`).start();\n  try {\n    const context = getRequestContext(authCtx);\n    const keys = await Keys.getKeysAsync(context);\n    spinner.succeed(`Fetched Apple push keys`);\n    return keys;\n  } catch (error: any) {\n    spinner.fail(`Failed to fetch Apple push keys`);\n    throw error;\n  }\n}\n\nasync function createPushKeyAsync(\n  authCtx: AppleCtx,\n  name: string = `Expo Push Notifications Key ${dateformat('yyyymmddHHMMss')}`\n): Promise<PushKey> {\n  const spinner = ora(`Creating Apple push key`).start();\n  try {\n    const context = getRequestContext(authCtx);\n    const key = await Keys.createKeyAsync(context, { name, isApns: true });\n    const apnsKeyP8 = await Keys.downloadKeyAsync(context, { id: key.id });\n    spinner.succeed(`Created Apple push key`);\n    return {\n      apnsKeyId: key.id,\n      apnsKeyP8,\n      teamId: authCtx.team.id,\n      teamName: authCtx.team.name,\n    };\n  } catch (err: any) {\n    spinner.fail('Failed to create Apple push key');\n    const resultString = err.rawDump?.resultString;\n    if (\n      err instanceof MaxKeysCreatedError ||\n      (resultString && resultString.match(/maximum allowed number of Keys/))\n    ) {\n      throw new CommandError(APPLE_KEYS_TOO_MANY_GENERATED_ERROR);\n    }\n    throw err;\n  }\n}\n\nasync function revokePushKeyAsync(authCtx: AppleCtx, ids: string[]): Promise<void> {\n  const name = `Apple push key${ids?.length === 1 ? '' : 's'}`;\n\n  const spinner = ora(`Revoking ${name}`).start();\n  try {\n    const context = getRequestContext(authCtx);\n    await Promise.all(ids.map(id => Keys.revokeKeyAsync(context, { id })));\n\n    spinner.succeed(`Revoked ${name}`);\n  } catch (error: any) {\n    Log.error(error);\n    spinner.fail(`Failed to revoke ${name}`);\n    throw error;\n  }\n}\n\nexport class PushKeyManager {\n  ctx: AppleCtx;\n  constructor(appleCtx: AppleCtx) {\n    this.ctx = appleCtx;\n  }\n\n  async list(): Promise<PushKeyInfo[]> {\n    return listPushKeysAsync(this.ctx);\n  }\n\n  async create(name?: string): Promise<PushKey> {\n    return createPushKeyAsync(this.ctx, name);\n  }\n\n  async revoke(ids: string[]) {\n    return revokePushKeyAsync(this.ctx, ids);\n  }\n\n  format({ id, name }: PushKeyInfo): string {\n    return `${name} - ID: ${id}`;\n  }\n}\n"],"mappings":"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"}