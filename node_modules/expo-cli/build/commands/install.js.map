{"version":3,"file":"install.js","names":["program","applyAsyncAction","command","alias","helpGroup","option","description","on","Log","log","chalk","green"],"sources":["../../src/commands/install.ts"],"sourcesContent":["import chalk from 'chalk';\nimport type { Command } from 'commander';\n\nimport Log from '../log';\nimport { applyAsyncAction } from './utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncAction<string[]>(\n    program\n      .command('install [packages...]')\n      .alias('add')\n      .helpGroup('core')\n      .option('--npm', 'Use npm to install dependencies. (default when package-lock.json exists)')\n      .option('--yarn', 'Use Yarn to install dependencies. (default when yarn.lock exists)')\n      .description('Install a module or other package to a project')\n      .on('--help', () => {\n        Log.log(\n          `  Additional options can be passed to the ${chalk.green('npm install')} or ${chalk.green(\n            'yarn add'\n          )} command by using ${chalk.green('--')}`\n        );\n        Log.log(`  For example: ${chalk.green('expo install somepackage -- --verbose')}`);\n      }),\n    () => import('./installAsync')\n  );\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAGA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AAEe,kBAAUA,OAAV,EAA4B;EACzC,IAAAC,oCAAA,EACED,OAAO,CACJE,OADH,CACW,uBADX,EAEGC,KAFH,CAES,KAFT,EAGGC,SAHH,CAGa,MAHb,EAIGC,MAJH,CAIU,OAJV,EAImB,0EAJnB,EAKGA,MALH,CAKU,QALV,EAKoB,mEALpB,EAMGC,WANH,CAMe,gDANf,EAOGC,EAPH,CAOM,QAPN,EAOgB,MAAM;IAClBC,cAAA,CAAIC,GAAJ,CACG,6CAA4CC,gBAAA,CAAMC,KAAN,CAAY,aAAZ,CAA2B,OAAMD,gBAAA,CAAMC,KAAN,CAC5E,UAD4E,CAE5E,qBAAoBD,gBAAA,CAAMC,KAAN,CAAY,IAAZ,CAAkB,EAH1C;;IAKAH,cAAA,CAAIC,GAAJ,CAAS,kBAAiBC,gBAAA,CAAMC,KAAN,CAAY,uCAAZ,CAAqD,EAA/E;EACD,CAdH,CADF,EAgBE,mEAAa,gBAAb,GAhBF;AAkBD"}