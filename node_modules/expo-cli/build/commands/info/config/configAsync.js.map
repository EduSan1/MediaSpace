{"version":3,"file":"configAsync.js","names":["actionAsync","projectRoot","options","json","warnAboutLocalCLI","localCmd","config","type","profileMethod","getPrebuildConfigAsync","platforms","compileModsAsync","exp","introspect","assertMissingModProviders","modRequest","modResults","getConfig","skipSDKVersionRequirement","isPublicConfig","CommandError","configOutput","full","Log","log","logConfig","nested","JSON","stringify"],"sources":["../../../../src/commands/info/config/configAsync.ts"],"sourcesContent":["import { getConfig, ProjectConfig } from '@expo/config';\nimport { compileModsAsync } from '@expo/config-plugins/build/plugins/mod-compiler';\nimport { getPrebuildConfigAsync } from '@expo/prebuild-config';\n\nimport CommandError from '../../../CommandError';\nimport Log from '../../../log';\nimport { warnAboutLocalCLI } from '../../../utils/migration';\nimport { logConfig } from '../../eject/configureProjectAsync';\nimport { profileMethod } from '../../utils/profileMethod';\n\ntype Options = {\n  type?: string;\n  full: boolean;\n  json?: boolean;\n};\n\nexport async function actionAsync(projectRoot: string, options: Options) {\n  // Don't break the existing functionality.\n  if (!options.json) {\n    warnAboutLocalCLI(projectRoot, { localCmd: 'config' });\n  }\n  let config: ProjectConfig;\n\n  if (options.type === 'prebuild') {\n    config = await profileMethod(getPrebuildConfigAsync)(projectRoot, {\n      platforms: ['ios', 'android'],\n    });\n  } else if (options.type === 'introspect') {\n    config = await profileMethod(getPrebuildConfigAsync)(projectRoot, {\n      platforms: ['ios', 'android'],\n    });\n\n    await compileModsAsync(config.exp, {\n      projectRoot,\n      introspect: true,\n      platforms: ['ios', 'android'],\n      assertMissingModProviders: false,\n    });\n    // @ts-ignore\n    delete config.modRequest;\n    // @ts-ignore\n    delete config.modResults;\n  } else if (options.type === 'public') {\n    config = profileMethod(getConfig)(projectRoot, {\n      skipSDKVersionRequirement: true,\n      isPublicConfig: true,\n    });\n  } else if (options.type) {\n    throw new CommandError(\n      `Invalid option: --type ${options.type}. Valid options are: public, prebuild`\n    );\n  } else {\n    config = profileMethod(getConfig)(projectRoot, {\n      skipSDKVersionRequirement: true,\n    });\n  }\n\n  const configOutput = options.full ? config : config.exp;\n\n  if (!options.json) {\n    Log.log();\n    logConfig(configOutput);\n    Log.log();\n  } else {\n    Log.nested(JSON.stringify(configOutput));\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAQO,eAAeA,WAAf,CAA2BC,WAA3B,EAAgDC,OAAhD,EAAkE;EACvE;EACA,IAAI,CAACA,OAAO,CAACC,IAAb,EAAmB;IACjB,IAAAC,8BAAA,EAAkBH,WAAlB,EAA+B;MAAEI,QAAQ,EAAE;IAAZ,CAA/B;EACD;;EACD,IAAIC,MAAJ;;EAEA,IAAIJ,OAAO,CAACK,IAAR,KAAiB,UAArB,EAAiC;IAC/BD,MAAM,GAAG,MAAM,IAAAE,8BAAA,EAAcC,wCAAd,EAAsCR,WAAtC,EAAmD;MAChES,SAAS,EAAE,CAAC,KAAD,EAAQ,SAAR;IADqD,CAAnD,CAAf;EAGD,CAJD,MAIO,IAAIR,OAAO,CAACK,IAAR,KAAiB,YAArB,EAAmC;IACxCD,MAAM,GAAG,MAAM,IAAAE,8BAAA,EAAcC,wCAAd,EAAsCR,WAAtC,EAAmD;MAChES,SAAS,EAAE,CAAC,KAAD,EAAQ,SAAR;IADqD,CAAnD,CAAf;IAIA,MAAM,IAAAC,+BAAA,EAAiBL,MAAM,CAACM,GAAxB,EAA6B;MACjCX,WADiC;MAEjCY,UAAU,EAAE,IAFqB;MAGjCH,SAAS,EAAE,CAAC,KAAD,EAAQ,SAAR,CAHsB;MAIjCI,yBAAyB,EAAE;IAJM,CAA7B,CAAN,CALwC,CAWxC;;IACA,OAAOR,MAAM,CAACS,UAAd,CAZwC,CAaxC;;IACA,OAAOT,MAAM,CAACU,UAAd;EACD,CAfM,MAeA,IAAId,OAAO,CAACK,IAAR,KAAiB,QAArB,EAA+B;IACpCD,MAAM,GAAG,IAAAE,8BAAA,EAAcS,mBAAd,EAAyBhB,WAAzB,EAAsC;MAC7CiB,yBAAyB,EAAE,IADkB;MAE7CC,cAAc,EAAE;IAF6B,CAAtC,CAAT;EAID,CALM,MAKA,IAAIjB,OAAO,CAACK,IAAZ,EAAkB;IACvB,MAAM,KAAIa,uBAAJ,EACH,0BAAyBlB,OAAO,CAACK,IAAK,uCADnC,CAAN;EAGD,CAJM,MAIA;IACLD,MAAM,GAAG,IAAAE,8BAAA,EAAcS,mBAAd,EAAyBhB,WAAzB,EAAsC;MAC7CiB,yBAAyB,EAAE;IADkB,CAAtC,CAAT;EAGD;;EAED,MAAMG,YAAY,GAAGnB,OAAO,CAACoB,IAAR,GAAehB,MAAf,GAAwBA,MAAM,CAACM,GAApD;;EAEA,IAAI,CAACV,OAAO,CAACC,IAAb,EAAmB;IACjBoB,cAAA,CAAIC,GAAJ;;IACA,IAAAC,kCAAA,EAAUJ,YAAV;;IACAE,cAAA,CAAIC,GAAJ;EACD,CAJD,MAIO;IACLD,cAAA,CAAIG,MAAJ,CAAWC,IAAI,CAACC,SAAL,CAAeP,YAAf,CAAX;EACD;AACF"}