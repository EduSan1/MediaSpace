{"version":3,"file":"initAsync.js","names":["FEATURED_TEMPLATES","shortName","name","description","isMacOS","process","platform","assertValidName","folderName","validation","CreateApp","validateName","CommandError","chalk","red","isFolderNameForbidden","parseOptions","command","yes","yarn","npm","install","template","assertFolderEmptyAsync","projectRoot","overwrite","message","Log","newLine","nested","SilentError","resolveProjectRootAsync","input","trim","answer","prompts","type","initial","validate","path","basename","resolve","nonInteractiveHelp","error","code","green","program","cyan","join","fs","ensureDir","padEnd","str","width","len","Math","max","stripAnsi","length","Array","resolveTemplateAsync","resolvedTemplate","version","newestSdkVersion","data","newestSdkReleaseData","Versions","newestReleasedSdkVersionAsync","versionParam","beta","majorVersion","parseInt","includes","templateSpec","npmPackageArg","registry","escapedName","raw","fetchSpec","descriptionColumn","map","t","selectAsync","optionsPerPage","choices","separator","value","title","bold","short","actionAsync","incomingProjectRoot","warnMigration","options","deprecatedNameArgument","undefined","AbortCommandError","cwd","npmPackageName","debug","projectName","initialConfig","expo","slug","extractTemplateStep","logNewSection","projectPath","extractAndPrepareTemplateAppAsync","succeed","e","fail","packageManager","resolvePackageManager","isBare","directoryExistsAsync","workflow","hasPodsInstalled","needsPodsInstalled","existsSync","installNodeDependenciesAsync","installCocoaPodsAsync","cdPath","getChangeDirectoryPath","addNewLineIfNone","logProjectReadyAsync","logNodeInstallWarning","logCocoaPodsWarning","initGitRepoAsync","installJsDepsStep","root","spawnAsync","log","gray","errno","warn","stdio","dim","macOSComment","addBareUpdatesWarningsAsync","hasExpoUpdatesInstalledAsync","usesOldExpoUpdatesAsync","terminalLink","didConfigureUpdatesProjectFiles","username","UserManager","getCurrentUsernameAsync","configureUpdatesProjectFilesAsync","exp","getConfig","skipSDKVersionRequirement","androidManifestPath","AndroidConfig","Paths","getAndroidManifestAsync","androidManifestJSON","Manifest","readAndroidManifestAsync","result","Updates","setUpdatesConfig","writeAndroidManifestAsync","iosSourceRoot","IOSConfig","getSourceRoot","supportingDirectory","plistFilePath","plist","parse","readFileSync","writeFile","build"],"sources":["../../src/commands/initAsync.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport { AndroidConfig, IOSConfig } from '@expo/config-plugins';\nimport plist from '@expo/plist';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport program from 'commander';\nimport fs from 'fs-extra';\nimport npmPackageArg from 'npm-package-arg';\nimport path from 'path';\nimport stripAnsi from 'strip-ansi';\nimport terminalLink from 'terminal-link';\nimport { UserManager, Versions } from 'xdl';\n\nimport CommandError, { AbortCommandError, SilentError } from '../CommandError';\nimport Log from '../log';\nimport { warnMigration } from '../utils/migration';\nimport { logNewSection } from '../utils/ora';\nimport prompts, { selectAsync } from '../utils/prompts';\nimport { directoryExistsAsync } from './eject/clearNativeFolder';\nimport * as CreateApp from './utils/CreateApp';\nimport { hasExpoUpdatesInstalledAsync, usesOldExpoUpdatesAsync } from './utils/ProjectUtils';\nimport { extractAndPrepareTemplateAppAsync } from './utils/extractTemplateAppAsync';\n\ntype Options = {\n  template?: string;\n  install: boolean;\n  npm: boolean;\n  yarn: boolean;\n  yes: boolean;\n};\n\nconst FEATURED_TEMPLATES = [\n  '----- Managed workflow -----',\n  {\n    shortName: 'blank',\n    name: 'expo-template-blank',\n    description: 'a minimal app as clean as an empty canvas',\n  },\n  {\n    shortName: 'blank (TypeScript)',\n    name: 'expo-template-blank-typescript',\n    description: 'same as blank but with TypeScript configuration',\n  },\n  {\n    shortName: 'tabs (TypeScript)',\n    name: 'expo-template-tabs',\n    description: 'several example screens and tabs using react-navigation and TypeScript',\n  },\n  '----- Bare workflow -----',\n  {\n    shortName: 'minimal',\n    name: 'expo-template-bare-minimum',\n    description: 'bare and minimal, just the essentials to get you started',\n  },\n];\n\nconst isMacOS = process.platform === 'darwin';\n\nfunction assertValidName(folderName: string) {\n  const validation = CreateApp.validateName(folderName);\n  if (typeof validation === 'string') {\n    throw new CommandError(\n      `Cannot create an app named ${chalk.red(`\"${folderName}\"`)}. ${validation}`\n    );\n  }\n  const isFolderNameForbidden = CreateApp.isFolderNameForbidden(folderName);\n  if (isFolderNameForbidden) {\n    throw new CommandError(\n      `Cannot create an app named ${chalk.red(\n        `\"${folderName}\"`\n      )} because it would conflict with a dependency of the same name.`\n    );\n  }\n}\n\nfunction parseOptions(command: Partial<Options>): Options {\n  return {\n    yes: !!command.yes,\n    yarn: !!command.yarn,\n    npm: !!command.npm,\n    install: !!command.install,\n    template: command.template,\n  };\n}\n\nasync function assertFolderEmptyAsync(projectRoot: string, folderName?: string) {\n  if (!(await CreateApp.assertFolderEmptyAsync({ projectRoot, folderName, overwrite: false }))) {\n    const message = 'Try using a new directory name, or moving these files.';\n    Log.newLine();\n    Log.nested(message);\n    Log.newLine();\n    throw new SilentError(message);\n  }\n}\n\nasync function resolveProjectRootAsync(input?: string): Promise<string> {\n  let name = input?.trim();\n\n  if (!name) {\n    try {\n      const { answer } = await prompts(\n        {\n          type: 'text',\n          name: 'answer',\n          message: 'What would you like to name your app?',\n          initial: 'my-app',\n          validate: name => {\n            const validation = CreateApp.validateName(path.basename(path.resolve(name)));\n            if (typeof validation === 'string') {\n              return 'Invalid project name: ' + validation;\n            }\n            return true;\n          },\n        },\n        {\n          nonInteractiveHelp: 'Pass the project name using the first argument `expo init <name>`',\n        }\n      );\n\n      if (typeof answer === 'string') {\n        name = answer.trim();\n      }\n    } catch (error: any) {\n      // Handle the aborted message in a custom way.\n      if (error.code !== 'ABORTED') {\n        throw error;\n      }\n    }\n  }\n\n  if (!name) {\n    const message = [\n      '',\n      'Please choose your app name:',\n      `  ${chalk.green(`${program.name()} init`)} ${chalk.cyan('<app-name>')}`,\n      '',\n      `Run ${chalk.green(`${program.name()} init --help`)} for more info`,\n      '',\n    ].join('\\n');\n    Log.nested(message);\n    throw new SilentError(message);\n  }\n\n  const projectRoot = path.resolve(name);\n  const folderName = path.basename(projectRoot);\n\n  assertValidName(folderName);\n\n  await fs.ensureDir(projectRoot);\n\n  await assertFolderEmptyAsync(projectRoot, folderName);\n\n  return projectRoot;\n}\n\nfunction padEnd(str: string, width: number): string {\n  // Pulled from commander for overriding\n  const len = Math.max(0, width - stripAnsi(str).length);\n  return str + Array(len + 1).join(' ');\n}\n\nasync function resolveTemplateAsync(resolvedTemplate?: string | null) {\n  const {\n    version: newestSdkVersion,\n    data: newestSdkReleaseData,\n  } = await Versions.newestReleasedSdkVersionAsync();\n\n  // If the user is opting into a beta then we need to append the template tag explicitly\n  // in order to not fall back to the latest tag for templates.\n  let versionParam = '';\n  if (newestSdkReleaseData?.beta) {\n    const majorVersion = parseInt(newestSdkVersion, 10);\n    versionParam = `@sdk-${majorVersion}`;\n\n    // If the --template flag is provided without an explicit version, then opt-in to\n    // the beta version\n    if (resolvedTemplate && !resolvedTemplate.includes('@')) {\n      resolvedTemplate = `${resolvedTemplate}${versionParam}`;\n    }\n  }\n\n  let templateSpec;\n  if (resolvedTemplate) {\n    templateSpec = npmPackageArg(resolvedTemplate);\n\n    // For backwards compatibility, 'blank' and 'tabs' are aliases for\n    // 'expo-template-blank' and 'expo-template-tabs', respectively.\n    if (\n      templateSpec.name &&\n      templateSpec.registry &&\n      ['blank', 'tabs', 'bare-minimum'].includes(templateSpec.name)\n    ) {\n      templateSpec.escapedName = `expo-template-${templateSpec.name}`;\n      templateSpec.name = templateSpec.escapedName;\n      templateSpec.raw = templateSpec.escapedName;\n    }\n\n    return `${templateSpec.name ?? templateSpec.raw}@${templateSpec.fetchSpec ?? 'latest'}`;\n  }\n\n  const descriptionColumn =\n    Math.max(...FEATURED_TEMPLATES.map(t => (typeof t === 'object' ? t.shortName.length : 0))) + 2;\n  const template = await selectAsync(\n    {\n      message: 'Choose a template:',\n      optionsPerPage: 20,\n      choices: FEATURED_TEMPLATES.map(template => {\n        if (typeof template === 'string') {\n          return prompts.separator(template);\n        } else {\n          return {\n            value: template.name,\n            title:\n              chalk.bold(padEnd(template.shortName, descriptionColumn)) +\n              template.description.trim(),\n            short: template.name,\n          };\n        }\n      }),\n    },\n    {\n      nonInteractiveHelp:\n        '--template: argument is required in non-interactive mode. Valid choices are: \"blank\", \"tabs\", \"bare-minimum\" or any custom template (name of npm package).',\n    }\n  );\n  return `${template}${versionParam}`;\n}\n\nexport async function actionAsync(incomingProjectRoot: string, command: Partial<Options>) {\n  warnMigration('npx create-expo-app --template');\n\n  const options = parseOptions(command);\n\n  const deprecatedNameArgument =\n    typeof (command as any).name === 'string' ? (command as any).name : undefined;\n  if (deprecatedNameArgument) {\n    // Commander doesn't support using the `--name` argument so it shouldn't have been implemented in the first place.\n    // Using `--name` will cause other parts of commander to break since it expects a function and `this.name` would be a string.\n\n    Log.error(chalk`Deprecated: Use {bold expo init [name]} instead of {bold --name [name]}.`);\n    throw new AbortCommandError();\n  }\n\n  // Resolve the name, and projectRoot\n  let projectRoot: string;\n  if (!incomingProjectRoot && options.yes) {\n    projectRoot = path.resolve(process.cwd());\n    const folderName = path.basename(projectRoot);\n    assertValidName(folderName);\n    await assertFolderEmptyAsync(projectRoot, folderName);\n  } else {\n    projectRoot = await resolveProjectRootAsync(incomingProjectRoot);\n  }\n\n  let resolvedTemplate: string | null = options.template ?? null;\n  // @ts-ignore: This guards against someone passing --template without a name after it.\n  if (resolvedTemplate === true) {\n    throw new CommandError('Please specify the template name');\n  }\n\n  // Download and sync templates\n  // TODO(Bacon): revisit\n  if (options.yes && !resolvedTemplate) {\n    resolvedTemplate = 'blank';\n  }\n\n  // Supported templates:\n  // `-t tabs` (tabs, blank, bare-minimum, expo-template-blank-typescript)\n  // `-t tabs@40`\n  // `-t tabs@sdk-40`\n  // `-t tabs@latest`\n  // `-t expo-template-tabs@latest`\n  const npmPackageName = await resolveTemplateAsync(resolvedTemplate);\n\n  Log.debug(`Using template: ${npmPackageName}`);\n\n  const projectName = path.basename(projectRoot);\n  const initialConfig: Record<string, any> & { expo: any } = {\n    // In older templates the `.name` property is set when extracting template files. This is because older templates have the `.name` property set to `HelloWorld`.\n    // Newer templates don't need the `.name` property set, so we don't bother with setting it.\n    expo: {\n      name: projectName,\n      slug: projectName,\n    },\n  };\n\n  const extractTemplateStep = logNewSection('Downloading template.');\n  let projectPath;\n  try {\n    projectPath = await extractAndPrepareTemplateAppAsync(\n      npmPackageName,\n      projectRoot,\n      initialConfig\n    );\n    extractTemplateStep.succeed('Downloaded template.');\n  } catch (e: any) {\n    extractTemplateStep.fail('Something went wrong while downloading and extracting the template.');\n    throw e;\n  }\n\n  // Install dependencies\n\n  const packageManager = CreateApp.resolvePackageManager(options);\n\n  // TODO(Bacon): not this\n  const isBare = await directoryExistsAsync(path.join(projectRoot, 'ios'));\n  const workflow = isBare ? 'bare' : 'managed';\n\n  let hasPodsInstalled: boolean = false;\n  const needsPodsInstalled = fs.existsSync(path.join(projectRoot, 'ios/Podfile'));\n  if (options.install) {\n    await installNodeDependenciesAsync(projectRoot, packageManager);\n    if (needsPodsInstalled) {\n      hasPodsInstalled = await CreateApp.installCocoaPodsAsync(projectRoot);\n    }\n  }\n\n  const cdPath = CreateApp.getChangeDirectoryPath(projectRoot);\n\n  // Log info\n\n  Log.addNewLineIfNone();\n\n  await logProjectReadyAsync(projectRoot, {\n    cdPath,\n    packageManager,\n    workflow,\n  });\n\n  // Log a warning about needing to install node modules\n  if (!options.install) {\n    logNodeInstallWarning(cdPath, packageManager);\n  }\n  if (needsPodsInstalled && !hasPodsInstalled) {\n    logCocoaPodsWarning(cdPath);\n  }\n\n  // Initialize Git at the end to ensure all lock files are committed.\n  await initGitRepoAsync(projectPath);\n}\n\nasync function installNodeDependenciesAsync(projectRoot: string, packageManager: 'yarn' | 'npm') {\n  const installJsDepsStep = logNewSection('Installing JavaScript dependencies.');\n  try {\n    await CreateApp.installNodeDependenciesAsync(projectRoot, packageManager);\n    installJsDepsStep.succeed('Installed JavaScript dependencies.');\n  } catch {\n    installJsDepsStep.fail(\n      `Something went wrong installing JavaScript dependencies. Check your ${packageManager} logs. Continuing to initialize the app.`\n    );\n  }\n}\n\n/**\n * Check if the project is inside an existing Git repo, if so bail out,\n * if not then create a new git repo and commit the initial files.\n *\n * @returns `true` if git is setup.\n */\nasync function initGitRepoAsync(root: string): Promise<boolean> {\n  // let's see if we're in a git tree\n  try {\n    await spawnAsync('git', ['rev-parse', '--is-inside-work-tree'], {\n      cwd: root,\n    });\n    // Log a light notice if we're in a git tree.\n    Log.log(\n      chalk.gray(`Project is already inside of a git repo, skipping ${chalk.bold`git init`}.`)\n    );\n    // Bail out if inside git repo, this makes monorepos a bit easier to setup.\n    return true;\n  } catch (e: any) {\n    if (e.errno === 'ENOENT') {\n      Log.warn('Unable to initialize git repo. `git` not in PATH.');\n      return false;\n    }\n  }\n\n  // not in git tree, so let's init\n  try {\n    await spawnAsync('git', ['init'], { cwd: root });\n    Log.debug('Initialized a git repository.');\n\n    await spawnAsync('git', ['add', '--all'], { cwd: root, stdio: 'ignore' });\n    await spawnAsync('git', ['commit', '-m', 'Created a new Expo app'], {\n      cwd: root,\n      stdio: 'ignore',\n    });\n\n    return true;\n  } catch (e: any) {\n    Log.debug('git error:', e);\n    // no-op -- this is just a convenience and we don't care if it fails\n    return false;\n  }\n}\n\nfunction logNodeInstallWarning(cdPath: string, packageManager: 'yarn' | 'npm'): void {\n  Log.newLine();\n  Log.nested(`⚠️  Before running your app, make sure you have node modules installed:`);\n  Log.nested('');\n  if (cdPath) {\n    // In the case of --yes the project can be created in place so there would be no need to change directories.\n    Log.nested(`  cd ${cdPath}/`);\n  }\n  Log.nested(`  ${packageManager === 'npm' ? 'npm install' : 'yarn'}`);\n  Log.nested('');\n}\n\nfunction logCocoaPodsWarning(cdPath: string): void {\n  if (process.platform !== 'darwin') {\n    return;\n  }\n  Log.newLine();\n  Log.nested(\n    `⚠️  Before running your app on iOS, make sure you have CocoaPods installed and initialize the project:`\n  );\n  Log.nested('');\n  if (cdPath) {\n    // In the case of --yes the project can be created in place so there would be no need to change directories.\n    Log.nested(`  cd ${cdPath}/`);\n  }\n  Log.nested(`  npx pod-install`);\n  Log.nested('');\n}\n\nasync function logProjectReadyAsync(\n  projectRoot: string,\n  {\n    cdPath,\n    packageManager,\n    workflow,\n  }: {\n    cdPath: string;\n    packageManager: string;\n    workflow: 'managed' | 'bare';\n  }\n) {\n  Log.nested(chalk.bold(`✅ Your project is ready!`));\n  Log.newLine();\n\n  // empty string if project was created in current directory\n  if (cdPath) {\n    Log.nested(\n      `To run your project, navigate to the directory and run one of the following ${packageManager} commands.`\n    );\n    Log.newLine();\n    Log.nested(`- ${chalk.bold('cd ' + cdPath)}`);\n  } else {\n    Log.nested(`To run your project, run one of the following ${packageManager} commands.`);\n    Log.newLine();\n  }\n\n  if (workflow === 'managed') {\n    Log.nested(\n      `- ${chalk.bold(`${packageManager} start`)} ${chalk.dim(\n        `# you can open iOS, Android, or web from here, or run them directly with the commands below.`\n      )}`\n    );\n  }\n  Log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run android' : 'yarn android')}`);\n\n  let macOSComment = '';\n  if (!isMacOS && workflow === 'bare') {\n    macOSComment =\n      ' # you need to use macOS to build the iOS project - use managed workflow if you need to do iOS development without a Mac';\n  } else if (!isMacOS && workflow === 'managed') {\n    macOSComment = ' # requires an iOS device or macOS for access to an iOS simulator';\n  }\n  Log.nested(\n    `- ${chalk.bold(packageManager === 'npm' ? 'npm run ios' : 'yarn ios')}${macOSComment}`\n  );\n\n  Log.nested(`- ${chalk.bold(packageManager === 'npm' ? 'npm run web' : 'yarn web')}`);\n\n  if (workflow === 'bare') {\n    Log.newLine();\n    Log.nested(\n      `💡 You can also open up the projects in the ${chalk.bold('ios')} and ${chalk.bold(\n        'android'\n      )} directories with their respective IDEs.`\n    );\n\n    await addBareUpdatesWarningsAsync(projectRoot);\n\n    // TODO: add equivalent of this or some command to wrap it:\n    // # ios\n    // $ open -a Xcode ./ios/{PROJECT_NAME}.xcworkspace\n    // # android\n    // $ open -a /Applications/Android\\\\ Studio.app ./android\n  }\n}\n\nasync function addBareUpdatesWarningsAsync(projectRoot: string) {\n  if (!(await hasExpoUpdatesInstalledAsync(projectRoot))) {\n    return;\n  }\n\n  if (await usesOldExpoUpdatesAsync(projectRoot)) {\n    Log.nested(\n      `🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/main/packages/expo-updates/README.md'\n      )} has been configured in your project. Before you do a release build, make sure you run ${chalk.bold(\n        'expo publish'\n      )}. ${terminalLink('Learn more.', 'https://expo.fyi/release-builds-with-expo-updates')}`\n    );\n    return;\n  }\n\n  let didConfigureUpdatesProjectFiles: boolean = false;\n  const username = await UserManager.getCurrentUsernameAsync();\n  if (username) {\n    try {\n      await configureUpdatesProjectFilesAsync(projectRoot, username);\n      didConfigureUpdatesProjectFiles = true;\n    } catch {}\n  }\n\n  if (didConfigureUpdatesProjectFiles) {\n    Log.nested(\n      `🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/main/packages/expo-updates/README.md'\n      )} has been configured in your project. If you publish this project under a different user account than ${chalk.bold(\n        username\n      )}, you'll need to update the configuration in Expo.plist and AndroidManifest.xml before making a release build.`\n    );\n  } else {\n    Log.nested(\n      `🚀 ${terminalLink(\n        'expo-updates',\n        'https://github.com/expo/expo/blob/main/packages/expo-updates/README.md'\n      )} has been installed in your project. Before you do a release build, you'll need to configure a few values in Expo.plist and AndroidManifest.xml in order for updates to work.`\n    );\n  }\n}\n\nasync function configureUpdatesProjectFilesAsync(projectRoot: string, username: string) {\n  // skipSDKVersionRequirement here so that this will work when you use the\n  // --no-install flag. the tradeoff is that the SDK version field won't be\n  // filled in, but we should be getting rid of that for expo-updates ASAP\n  // anyways.\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  // apply Android config\n  const androidManifestPath = await AndroidConfig.Paths.getAndroidManifestAsync(projectRoot);\n  const androidManifestJSON = await AndroidConfig.Manifest.readAndroidManifestAsync(\n    androidManifestPath\n  );\n  const result = await AndroidConfig.Updates.setUpdatesConfig(\n    projectRoot,\n    exp,\n    androidManifestJSON,\n    username\n  );\n  await AndroidConfig.Manifest.writeAndroidManifestAsync(androidManifestPath, result);\n\n  // apply iOS config\n  const iosSourceRoot = IOSConfig.Paths.getSourceRoot(projectRoot);\n  const supportingDirectory = path.join(iosSourceRoot, 'Supporting');\n\n  const plistFilePath = path.join(supportingDirectory, 'Expo.plist');\n  let data = plist.parse(fs.readFileSync(plistFilePath, 'utf8'));\n  data = IOSConfig.Updates.setUpdatesConfig(projectRoot, exp, data, username);\n\n  await fs.writeFile(plistFilePath, plist.build(data));\n}\n"],"mappings":"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"}