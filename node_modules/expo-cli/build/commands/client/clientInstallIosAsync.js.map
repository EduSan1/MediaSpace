{"version":3,"file":"clientInstallIosAsync.js","names":["actionAsync","options","forceLatest","latest","currentSdkConfig","ClientUpgradeUtils","getExpoSdkConfig","process","cwd","currentSdkVersion","sdkVersion","undefined","sdkVersions","Versions","sdkVersionsAsync","latestSdk","newestReleasedSdkVersionAsync","currentSdk","recommendedClient","getClient","latestClient","data","url","Log","error","chalk","bold","Simulator","upgradeExpoAsync","version","log","recommendedClientVersion","answer","confirmAsync","message","availableClients","getAvailableClients","project","platform","length","targetClient","askClientToInstall","latestSdkVersion","clients","clientUrl"],"sources":["../../../src/commands/client/clientInstallIosAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { Simulator, Versions } from 'xdl';\n\nimport Log from '../../log';\nimport { confirmAsync } from '../../utils/prompts';\nimport * as ClientUpgradeUtils from '../utils/ClientUpgradeUtils';\n\ntype Options = {\n  latest?: boolean;\n};\n\nexport async function actionAsync(options: Options) {\n  const forceLatest = !!options.latest;\n  const currentSdkConfig = await ClientUpgradeUtils.getExpoSdkConfig(process.cwd());\n  const currentSdkVersion = currentSdkConfig ? currentSdkConfig.sdkVersion : undefined;\n  const sdkVersions = await Versions.sdkVersionsAsync();\n  const latestSdk = await Versions.newestReleasedSdkVersionAsync();\n  const currentSdk = sdkVersions[currentSdkVersion!];\n  const recommendedClient = ClientUpgradeUtils.getClient('ios', currentSdk);\n  const latestClient = ClientUpgradeUtils.getClient('ios', latestSdk.data);\n\n  if (forceLatest) {\n    if (!latestClient?.url) {\n      Log.error(\n        `Unable to find latest client version. Check your internet connection or run this command again without the ${chalk.bold(\n          '--latest'\n        )} flag.`\n      );\n      return;\n    }\n\n    if (\n      await Simulator.upgradeExpoAsync({ url: latestClient.url, version: latestClient.version })\n    ) {\n      Log.log('Done!');\n    } else {\n      Log.error(`Unable to install Expo Go ${latestClient.version} for iOS.`);\n    }\n    return;\n  }\n\n  if (!currentSdkVersion) {\n    Log.log(\n      'Could not find your Expo project. If you run this from a project, we can help pick the right Expo Go version!'\n    );\n  }\n\n  if (currentSdk && !recommendedClient) {\n    Log.log(\n      `You are currently using SDK ${currentSdkVersion}. Unfortunately, we couldn't detect the proper client version for this SDK.`\n    );\n  }\n\n  if (currentSdk && recommendedClient) {\n    const recommendedClientVersion = recommendedClient.version || 'version unknown';\n    const answer = await confirmAsync({\n      message: `You are currently using SDK ${currentSdkVersion}. Would you like to install client ${recommendedClientVersion} released for this SDK?`,\n    });\n    if (answer) {\n      await Simulator.upgradeExpoAsync({\n        url: recommendedClient.url,\n        version: recommendedClient.version,\n      });\n      Log.log('Done!');\n      return;\n    }\n  } else {\n    const answer = await confirmAsync({\n      message: latestClient?.version\n        ? chalk`Do you want to install the latest client? {dim (${latestClient.version})}`\n        : 'Do you want to install the latest client?',\n    });\n    if (answer) {\n      await Simulator.upgradeExpoAsync({\n        url: latestClient?.url,\n        version: latestClient?.version,\n      });\n      Log.log('Done!');\n      return;\n    }\n  }\n\n  const availableClients = ClientUpgradeUtils.getAvailableClients({\n    sdkVersions,\n    project: currentSdkConfig,\n    platform: 'ios',\n  });\n\n  if (availableClients.length === 0) {\n    const answer = await confirmAsync({\n      message: currentSdk\n        ? `We don't have a compatible client for SDK ${currentSdkVersion}. Do you want to try the latest client?`\n        : \"It looks like we don't have a compatible client. Do you want to try the latest client?\",\n    });\n    if (answer) {\n      await Simulator.upgradeExpoAsync({\n        url: latestClient?.url,\n        version: latestClient?.version,\n      });\n      Log.log('Done!');\n    } else {\n      Log.log('No client to install');\n    }\n    return;\n  }\n\n  const targetClient = await ClientUpgradeUtils.askClientToInstall({\n    currentSdkVersion,\n    latestSdkVersion: latestSdk.version,\n    clients: availableClients,\n  });\n\n  if (await Simulator.upgradeExpoAsync({ url: targetClient.clientUrl })) {\n    Log.log('Done!');\n  }\n}\n"],"mappings":"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"}