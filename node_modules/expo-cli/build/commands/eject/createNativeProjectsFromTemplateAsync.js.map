{"version":3,"file":"createNativeProjectsFromTemplateAsync.js","names":["directoryExistsAsync","file","fs","stat","catch","isDirectory","createNativeProjectsFromTemplateAsync","projectRoot","exp","pkg","template","tempDir","platforms","skipDependencyUpdate","copiedPaths","cloneNativeDirectoriesAsync","writeMetroConfig","depsResults","updatePackageJSONAsync","hasNewProjectFiles","length","needsPodInstall","includes","hasNewDependencies","hasNewDevDependencies","creatingNativeProjectStep","logNewSection","targetPaths","getTargetPaths","skippedPaths","resolveTemplateArgAsync","name","templatePackageName","getTemplateNpmPackageName","sdkVersion","downloadAndExtractNpmModuleAsync","cwd","copyPathsFromTemplateAsync","results","GitIgnore","mergeGitIgnorePaths","path","join","message","chalk","dim","map","bold","didMerge","didClear","succeed","e","AbortCommandError","Log","error","fail","log","yellow","SilentError","semver","major","templatePath","paths","targetPath","projectPath","push","copySync","bareEntryFile","resolveBareEntryFile","main","isPkgMainExpoAppEntry","resolvedMainField","extensions","getBareExtensions","getFileWithExtensions"],"sources":["../../../src/commands/eject/createNativeProjectsFromTemplateAsync.ts"],"sourcesContent":["import { ExpoConfig, PackageJSONConfig } from '@expo/config';\nimport { ModPlatform } from '@expo/config-plugins';\nimport { getBareExtensions, getFileWithExtensions } from '@expo/config/paths';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\n\nimport { AbortCommandError, SilentError } from '../../CommandError';\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport * as GitIgnore from '../utils/GitIgnore';\nimport { downloadAndExtractNpmModuleAsync } from '../utils/npm';\nimport { resolveTemplateArgAsync } from './Github';\nimport {\n  DependenciesModificationResults,\n  isPkgMainExpoAppEntry,\n  updatePackageJSONAsync,\n} from './updatePackageJson';\nimport { writeMetroConfig } from './writeMetroConfig';\n\nasync function directoryExistsAsync(file: string): Promise<boolean> {\n  return (await fs.stat(file).catch(() => null))?.isDirectory() ?? false;\n}\n\n/**\n *\n * @param projectRoot\n * @param tempDir\n *\n * @return `true` if the project is ejecting, and `false` if it's syncing.\n */\nexport async function createNativeProjectsFromTemplateAsync({\n  projectRoot,\n  exp,\n  pkg,\n  template,\n  tempDir,\n  platforms,\n  skipDependencyUpdate,\n}: {\n  projectRoot: string;\n  exp: ExpoConfig;\n  pkg: PackageJSONConfig;\n  template?: string;\n  tempDir: string;\n  platforms: ModPlatform[];\n  skipDependencyUpdate?: string[];\n}): Promise<\n  { hasNewProjectFiles: boolean; needsPodInstall: boolean } & DependenciesModificationResults\n> {\n  const copiedPaths = await cloneNativeDirectoriesAsync({\n    projectRoot,\n    template,\n    tempDir,\n    exp,\n    pkg,\n    platforms,\n  });\n\n  writeMetroConfig({ projectRoot, pkg, tempDir });\n\n  const depsResults = await updatePackageJSONAsync({\n    projectRoot,\n    tempDir,\n    pkg,\n    skipDependencyUpdate,\n  });\n\n  return {\n    hasNewProjectFiles: !!copiedPaths.length,\n    // If the iOS folder changes or new packages are added, we should rerun pod install.\n    needsPodInstall:\n      copiedPaths.includes('ios') ||\n      depsResults.hasNewDependencies ||\n      depsResults.hasNewDevDependencies,\n    ...depsResults,\n  };\n}\n\n/**\n * Extract the template and copy the ios and android directories over to the project directory.\n *\n * @param force should create native projects even if they already exist.\n * @return `true` if any project files were created.\n */\nasync function cloneNativeDirectoriesAsync({\n  projectRoot,\n  tempDir,\n  template,\n  exp,\n  pkg,\n  platforms,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  template?: string;\n  exp: Pick<ExpoConfig, 'name' | 'sdkVersion'>;\n  pkg: PackageJSONConfig;\n  platforms: ModPlatform[];\n}): Promise<string[]> {\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const creatingNativeProjectStep = logNewSection(\n    'Creating native project directories (./ios and ./android) and updating .gitignore'\n  );\n\n  const targetPaths = getTargetPaths(projectRoot, pkg, platforms);\n\n  let copiedPaths: string[] = [];\n  let skippedPaths: string[] = [];\n  try {\n    if (template) {\n      await resolveTemplateArgAsync(tempDir, creatingNativeProjectStep, exp.name, template);\n    } else {\n      const templatePackageName = await getTemplateNpmPackageName(exp.sdkVersion);\n      await downloadAndExtractNpmModuleAsync(templatePackageName, {\n        cwd: tempDir,\n        name: exp.name,\n      });\n    }\n    [copiedPaths, skippedPaths] = await copyPathsFromTemplateAsync(\n      projectRoot,\n      tempDir,\n      targetPaths\n    );\n    const results = GitIgnore.mergeGitIgnorePaths(\n      path.join(projectRoot, '.gitignore'),\n      path.join(tempDir, '.gitignore')\n    );\n\n    let message = `Created native project${platforms.length > 1 ? 's' : ''}`;\n\n    if (skippedPaths.length) {\n      message += chalk.dim(\n        ` | ${skippedPaths.map(path => chalk.bold(`/${path}`)).join(', ')} already created`\n      );\n    }\n    if (!results?.didMerge) {\n      message += chalk.dim(` | gitignore already synced`);\n    } else if (results.didMerge && results.didClear) {\n      message += chalk.dim(` | synced gitignore`);\n    }\n    creatingNativeProjectStep.succeed(message);\n  } catch (e: any) {\n    if (!(e instanceof AbortCommandError)) {\n      Log.error(e.message);\n    }\n    creatingNativeProjectStep.fail('Failed to create the native project.');\n    Log.log(\n      chalk.yellow(\n        'You may want to delete the `./ios` and/or `./android` directories before trying again.'\n      )\n    );\n    throw new SilentError(e);\n  }\n\n  return copiedPaths;\n}\n\n/** Given an `sdkVersion` like `44.0.0` return a fully qualified NPM package name like: `expo-template-bare-minimum@sdk-44` */\nfunction getTemplateNpmPackageName(sdkVersion?: string): string {\n  // When undefined or UNVERSIONED, we use the latest version.\n  if (!sdkVersion || sdkVersion === 'UNVERSIONED') {\n    Log.log('Using an unspecified Expo SDK version. The latest template will be used.');\n    return `expo-template-bare-minimum@latest`;\n  }\n  return `expo-template-bare-minimum@sdk-${semver.major(sdkVersion)}`;\n}\n\nasync function copyPathsFromTemplateAsync(\n  projectRoot: string,\n  templatePath: string,\n  paths: string[]\n): Promise<[string[], string[]]> {\n  const copiedPaths = [];\n  const skippedPaths = [];\n  for (const targetPath of paths) {\n    const projectPath = path.join(projectRoot, targetPath);\n    if (!(await directoryExistsAsync(projectPath))) {\n      copiedPaths.push(targetPath);\n      fs.copySync(path.join(templatePath, targetPath), projectPath);\n    } else {\n      skippedPaths.push(targetPath);\n    }\n  }\n  return [copiedPaths, skippedPaths];\n}\n\nfunction getTargetPaths(projectRoot: string, pkg: PackageJSONConfig, platforms: ModPlatform[]) {\n  const targetPaths: string[] = [...platforms];\n\n  const bareEntryFile = resolveBareEntryFile(projectRoot, pkg.main);\n  // Only create index.js if we cannot resolve the existing entry point (after replacing the expo entry).\n  if (!bareEntryFile) {\n    targetPaths.push('index.js');\n  }\n\n  return targetPaths;\n}\n\nexport function resolveBareEntryFile(projectRoot: string, main: any) {\n  // expo app entry is not needed for bare projects.\n  if (isPkgMainExpoAppEntry(main)) return null;\n  // Look at the `package.json`s `main` field for the main file.\n  const resolvedMainField = main ?? './index';\n  // Get a list of possible extensions for the main file.\n  const extensions = getBareExtensions(['ios', 'android']);\n  // Testing the main field against all of the provided extensions - for legacy reasons we can't use node module resolution as the package.json allows you to pass in a file without a relative path and expect it as a relative path.\n  return getFileWithExtensions(projectRoot, resolvedMainField, extensions);\n}\n"],"mappings":"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"}