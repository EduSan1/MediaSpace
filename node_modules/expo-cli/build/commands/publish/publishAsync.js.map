{"version":3,"file":"publishAsync.js","names":["EAS_UPDATE_URL","actionAsync","projectRoot","options","assertValidReleaseChannel","releaseChannel","exp","pkg","getConfig","skipSDKVersionRequirement","confirmExpoUpdatesInstalledAsync","assertUpdateURLCorrectlyConfigured","sdkVersion","runtimeVersion","CommandError","ErrorCodes","INVALID_RUNTIME_VERSION","target","getDefaultTarget","user","UserManager","ensureLoggedInAsync","owner","getProjectOwner","Log","addNewLineIfNone","log","chalk","bold","replace","l","toUpperCase","kind","newLine","logExpoUpdatesWarnings","logOptimizeWarnings","isLegacyImportsEnabled","logBareWorkflowWarnings","spinner","quiet","logNewSection","result","Project","publishAsync","maxWorkers","resetCache","clear","url","projectPageUrl","succeed","logManifestUrl","logProjectPageUrl","copiedToClipboard","recipient","sendTo","getRecipient","sendUrlAsync","isInvalidReleaseChannel","channelRe","RegExp","test","isExpoUpdatesInstalledAsync","projectDir","resolveFrom","err","debug","installExpoUpdatesAsync","expoCliPath","spawnAsync","isBare","dim","TerminalLink","learnMore","install","confirmAsync","message","isMaybeAnEASUrl","includes","configuredURL","updates","INVALID_UPDATE_URL","manifestUrl","getExampleManifestUrl","fallbackToUrl","productionMessage","gray","urlWithIndexSuffix","hasConflictingUpdatesPackages","dependencies","nestedWarn","formatNamedWarning","hasOptimized","fs","existsSync","path","join","hasExpoInstalled"],"sources":["../../../src/commands/publish/publishAsync.ts"],"sourcesContent":["import {\n  ExpoConfig,\n  getConfig,\n  getDefaultTarget,\n  isLegacyImportsEnabled,\n  PackageJSONConfig,\n  ProjectTarget,\n} from '@expo/config';\nimport spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport fs from 'fs';\nimport { Ora } from 'ora';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport { Project, UserManager } from 'xdl';\n\nimport CommandError, { ErrorCodes } from '../../CommandError';\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { confirmAsync } from '../../utils/prompts';\nimport * as TerminalLink from '../utils/TerminalLink';\nimport { formatNamedWarning } from '../utils/logConfigWarnings';\nimport * as sendTo from '../utils/sendTo';\n\nconst EAS_UPDATE_URL = 'https://u.expo.dev';\n\ntype Options = {\n  clear?: boolean;\n  sendTo?: string | boolean;\n  quiet?: boolean;\n  target?: ProjectTarget;\n  releaseChannel?: string;\n  duringBuild?: boolean;\n  maxWorkers?: number;\n  parent?: { nonInteractive: boolean };\n};\n\nexport async function actionAsync(\n  projectRoot: string,\n  options: Options = {}\n): Promise<Project.PublishedProjectResult> {\n  assertValidReleaseChannel(options.releaseChannel);\n\n  const { exp, pkg } = getConfig(projectRoot, {\n    skipSDKVersionRequirement: true,\n  });\n  await confirmExpoUpdatesInstalledAsync(projectRoot);\n  assertUpdateURLCorrectlyConfigured(exp);\n  const { sdkVersion, runtimeVersion } = exp;\n\n  // TODO(@jkhales): remove this check when runtimeVersion policies are supported, if they are ever supported\n  if (typeof runtimeVersion !== 'undefined' && typeof runtimeVersion !== 'string') {\n    throw new CommandError(\n      ErrorCodes.INVALID_RUNTIME_VERSION,\n      `Runtime version policies are not supported by the publish command.`\n    );\n  }\n\n  const target = options.target ?? getDefaultTarget(projectRoot);\n\n  // note: this validates the exp.owner when the user is a robot\n  const user = await UserManager.ensureLoggedInAsync();\n  const owner = UserManager.getProjectOwner(user, exp);\n\n  Log.addNewLineIfNone();\n\n  // Log building info before building.\n  // This gives the user sometime to bail out if the info is unexpected.\n  if (runtimeVersion) {\n    Log.log(`\\u203A Runtime version: ${chalk.bold(runtimeVersion)}`);\n  } else if (sdkVersion) {\n    Log.log(`\\u203A Expo SDK: ${chalk.bold(sdkVersion)}`);\n  }\n  Log.log(`\\u203A Release channel: ${chalk.bold(options.releaseChannel)}`);\n  Log.log(`\\u203A Workflow: ${chalk.bold(target.replace(/\\b\\w/g, l => l.toUpperCase()))}`);\n  if (user.kind === 'robot') {\n    Log.log(`\\u203A Owner: ${chalk.bold(owner)}`);\n  }\n\n  Log.newLine();\n\n  // Log warnings.\n\n  logExpoUpdatesWarnings(pkg);\n\n  logOptimizeWarnings({ projectRoot });\n\n  if (!options.target && target === 'bare' && isLegacyImportsEnabled(exp)) {\n    logBareWorkflowWarnings(pkg);\n  }\n\n  Log.addNewLineIfNone();\n\n  // Build and publish the project.\n\n  let spinner: Ora | null = null;\n  if (options.quiet) {\n    spinner = logNewSection(`Building optimized bundles and generating sourcemaps...`);\n  } else {\n    Log.log(`Building optimized bundles and generating sourcemaps...`);\n  }\n\n  const result = await Project.publishAsync(projectRoot, {\n    releaseChannel: options.releaseChannel,\n    quiet: options.quiet,\n    maxWorkers: options.maxWorkers,\n    target,\n    resetCache: options.clear,\n  });\n\n  const url = result.url;\n  const projectPageUrl = result.projectPageUrl;\n\n  if (options.quiet && spinner) {\n    spinner.succeed();\n  }\n\n  Log.log('Publish complete');\n  Log.newLine();\n\n  logManifestUrl({ url, sdkVersion, runtimeVersion });\n\n  if (target === 'managed' && projectPageUrl) {\n    // note(brentvatne): disable copy to clipboard functionality for now, need to think more about\n    // whether this is desirable.\n    //\n    // Attempt to copy the URL to the clipboard, if it succeeds then append a notice to the log.\n    // const copiedToClipboard = copyToClipboard(websiteUrl);\n\n    logProjectPageUrl({ url: projectPageUrl, copiedToClipboard: false });\n\n    // Only send the link for managed projects.\n    const recipient = await sendTo.getRecipient(options.sendTo);\n    if (recipient) {\n      await sendTo.sendUrlAsync(projectPageUrl, recipient);\n    }\n  }\n\n  Log.newLine();\n\n  return result;\n}\n\nexport function isInvalidReleaseChannel(releaseChannel?: string): boolean {\n  const channelRe = new RegExp(/^[a-z\\d][a-z\\d._-]*$/);\n  return !!releaseChannel && !channelRe.test(releaseChannel);\n}\n\n// TODO(Bacon): should we prompt with a normalized value?\nfunction assertValidReleaseChannel(releaseChannel?: string): void {\n  if (isInvalidReleaseChannel(releaseChannel)) {\n    throw new CommandError(\n      'Release channel name can only contain lowercase letters, numbers and special characters . _ and -'\n    );\n  }\n}\n\nasync function isExpoUpdatesInstalledAsync(projectDir: string): Promise<boolean> {\n  try {\n    resolveFrom(projectDir, 'expo-updates/package.json');\n    return true;\n  } catch (err: any) {\n    Log.debug(err);\n    return false;\n  }\n}\n\nasync function installExpoUpdatesAsync(projectDir: string): Promise<void> {\n  const expoCliPath = resolveFrom(projectDir, 'expo/bin/cli.js');\n\n  Log.newLine();\n  Log.log(`Running ${chalk.bold('expo install expo-updates')}`);\n  Log.newLine();\n  await spawnAsync(expoCliPath, ['install', 'expo-updates']);\n  Log.newLine();\n}\n\nasync function confirmExpoUpdatesInstalledAsync(projectDir: string): Promise<void> {\n  if (await isExpoUpdatesInstalledAsync(projectDir)) {\n    return;\n  }\n\n  const isBare = getDefaultTarget(projectDir) === 'bare';\n  if (isBare) {\n    throw new CommandError(\n      `This project is missing ${chalk.bold(\n        'expo-updates'\n      )}. Please install it in order to publish an update. ${chalk.dim(\n        TerminalLink.learnMore('https://docs.expo.dev/bare/installing-updates/')\n      )}`\n    );\n  }\n\n  const install = await confirmAsync({\n    message: `In order to publish an update, ${chalk.bold(\n      'expo-updates'\n    )} needs to be installed. Do you want to install it now?`,\n  });\n\n  if (install) {\n    await installExpoUpdatesAsync(projectDir);\n  } else {\n    throw new CommandError(\n      `This project is missing ${chalk.bold(\n        'expo-updates'\n      )}. Please install it in order to publish an update.`\n    );\n  }\n}\n\nfunction isMaybeAnEASUrl(url: string): boolean {\n  return url.includes(EAS_UPDATE_URL);\n}\n\nfunction assertUpdateURLCorrectlyConfigured(exp: ExpoConfig): void {\n  const configuredURL = exp.updates?.url;\n  if (!configuredURL) {\n    // If no URL is configured, we generate a classic updates URL in the expo-updates config-plugin.\n    return;\n  }\n  if (isMaybeAnEASUrl(configuredURL)) {\n    throw new CommandError(\n      ErrorCodes.INVALID_UPDATE_URL,\n      `It seems like your project is configured for EAS Update. Please use 'eas update' instead.`\n    );\n  }\n}\n\n/**\n * @example üìù  Manifest: https://exp.host/@bacon/my-app/index.exp?sdkVersion=38.0.0 Learn more: https://expo.fyi/manifest-url\n * @param options\n */\nfunction logManifestUrl({\n  url,\n  sdkVersion,\n  runtimeVersion,\n}: {\n  url: string;\n  sdkVersion?: string;\n  runtimeVersion?: string;\n}) {\n  const manifestUrl = getExampleManifestUrl(url, { sdkVersion, runtimeVersion }) ?? url;\n  Log.log(\n    `üìù  Manifest: ${chalk.bold(TerminalLink.fallbackToUrl(url, manifestUrl))} ${chalk.dim(\n      TerminalLink.learnMore('https://expo.fyi/manifest-url')\n    )}`\n  );\n}\n\n/**\n *\n * @example ‚öôÔ∏è   Project page: https://expo.dev/@bacon/projects/my-app [copied to clipboard] Learn more: https://expo.fyi/project-page\n * @param options\n */\nfunction logProjectPageUrl({\n  url,\n  copiedToClipboard,\n}: {\n  url: string;\n  copiedToClipboard: boolean;\n}) {\n  let productionMessage = `‚öôÔ∏è   Project page: ${chalk.bold(TerminalLink.fallbackToUrl(url, url))}`;\n\n  if (copiedToClipboard) {\n    productionMessage += ` ${chalk.gray(`[copied to clipboard]`)}`;\n  }\n  productionMessage += ` ${chalk.dim(TerminalLink.learnMore('https://expo.fyi/project-page'))}`;\n\n  Log.log(productionMessage);\n}\n\nfunction getExampleManifestUrl(\n  url: string,\n  { sdkVersion, runtimeVersion }: { sdkVersion?: string; runtimeVersion?: string }\n): string | null {\n  if (!(sdkVersion || runtimeVersion)) {\n    return null;\n  }\n\n  if (url.includes('release-channel') && url.includes('?release-channel')) {\n    const urlWithIndexSuffix = url.replace('?release-channel', '/index.exp?release-channel');\n    return runtimeVersion\n      ? urlWithIndexSuffix + `&runtimeVersion=${runtimeVersion}`\n      : urlWithIndexSuffix + `&sdkVersion=${sdkVersion}`;\n  } else if (url.includes('?') && !url.includes('release-channel')) {\n    // This is the only relevant url query param we are aware of at the time of\n    // writing this code, so if there is some other param included we don't know\n    // how to deal with it and log nothing.\n    return null;\n  } else {\n    return runtimeVersion\n      ? `${url}/index.exp?runtimeVersion=${runtimeVersion}`\n      : `${url}/index.exp?sdkVersion=${sdkVersion}`;\n  }\n}\n\nexport function logExpoUpdatesWarnings(pkg: PackageJSONConfig): void {\n  const hasConflictingUpdatesPackages =\n    pkg.dependencies?.['expo-updates'] && pkg.dependencies?.['expokit'];\n\n  if (!hasConflictingUpdatesPackages) {\n    return;\n  }\n\n  Log.nestedWarn(\n    formatNamedWarning(\n      'Conflicting Updates',\n      `You have both the ${chalk.bold('expokit')} and ${chalk.bold(\n        'expo-updates'\n      )} packages installed in package.json.\\n  These two packages are incompatible and ${chalk.bold(\n        'publishing updates with expo-updates will not work if expokit is installed'\n      )}.\\n  If you intend to use ${chalk.bold('expo-updates')}, please remove ${chalk.bold(\n        'expokit'\n      )} from your dependencies.`\n    )\n  );\n}\n\nexport function logOptimizeWarnings({ projectRoot }: { projectRoot: string }): void {\n  const hasOptimized = fs.existsSync(path.join(projectRoot, '/.expo-shared/assets.json'));\n  if (hasOptimized) {\n    return;\n  }\n  Log.nestedWarn(\n    formatNamedWarning(\n      'Optimization',\n      `Project may contain uncompressed images. Optimizing image assets can improve app size and performance.\\n  To fix this, run ${chalk.bold(\n        `npx expo-optimize`\n      )}`,\n      'https://docs.expo.dev/distribution/optimizing-updates/#optimize-images'\n    )\n  );\n}\n\n/**\n * Warn users if they attempt to publish in a bare project that may also be\n * using Expo Go and does not If the developer does not have the Expo\n * package installed then we do not need to warn them as there is no way that\n * it will run in Expo Go in development even. We should revisit this with\n * dev client, and possibly also by excluding SDK version for bare\n * expo-updates usage in the future (and then surfacing this as an error in\n * the Expo Go app instead)\n *\n * Related: https://github.com/expo/expo/issues/9517\n *\n * @param pkg package.json\n */\nexport function logBareWorkflowWarnings(pkg: PackageJSONConfig) {\n  const hasExpoInstalled = pkg.dependencies?.['expo'];\n  if (!hasExpoInstalled) {\n    return;\n  }\n\n  Log.nestedWarn(\n    formatNamedWarning(\n      'Workflow target',\n      `This is a ${chalk.bold(\n        'bare workflow'\n      )} project. The resulting publish will only run properly inside of a native build of your project. If you want to publish a version of your app that will run in Expo Go, please use ${chalk.bold(\n        'expo publish --target managed'\n      )}. You can skip this warning by explicitly running ${chalk.bold(\n        'expo publish --target bare'\n      )} in the future.`\n    )\n  );\n}\n"],"mappings":"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"}