{"version":3,"file":"publish.js","names":["program","applyAsyncActionProjectDir","command","alias","description","helpGroup","option","checkConfig","parseInt"],"sources":["../../../src/commands/publish/publish.ts"],"sourcesContent":["import type { Command } from 'commander';\n\nimport { applyAsyncActionProjectDir } from '../utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncActionProjectDir(\n    program\n      .command('publish [path]')\n      .alias('p')\n      .description('Deploy a project to Expo hosting')\n      .helpGroup('publish')\n      .option('-q, --quiet', 'Suppress verbose output from the Metro bundler.')\n      .option('-s, --send-to [dest]', 'A phone number or email address to send a link to')\n      .option('-c, --clear', 'Clear the Metro bundler cache')\n      .option(\n        '-t, --target <managed|bare>',\n        'Target environment for which this publish is intended. Options are `managed` or `bare`.'\n      )\n      // TODO(anp) set a default for this dynamically based on whether we're inside a container?\n      .option('--max-workers <num>', 'Maximum number of tasks to allow Metro to spawn.')\n      .option(\n        '--release-channel <name>',\n        \"The release channel to publish to. Default is 'default'.\",\n        'default'\n      ),\n    () => import('./publishAsync')\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:set [path]')\n      .alias('ps')\n      .description('Specify the channel to serve a published release')\n      .helpGroup('publish')\n      .option(\n        '-c, --release-channel <name>',\n        'The channel to set the published release. (Required)'\n      )\n      .option(\n        '-p, --publish-id <publish-id>',\n        'The id of the published release to serve from the channel. (Required)'\n      ),\n    () => import('./publishSetAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:rollback [path]')\n      .alias('pr')\n      .description('Undo an update to a channel')\n      .helpGroup('publish')\n      .option('--channel-id <channel-id>', 'This flag is deprecated.')\n      .option('-c, --release-channel <name>', 'The channel to rollback from. (Required)')\n      .option('-s, --sdk-version <version>', 'The sdk version to rollback. (Required)')\n      .option('-p, --platform <android|ios>', 'The platform to rollback.'),\n    () => import('./publishRollbackAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:history [path]')\n      .alias('ph')\n      .description(\"Log the project's releases\")\n      .helpGroup('publish')\n      .option(\n        '-c, --release-channel <name>',\n        'Filter by release channel. If this flag is not included, the most recent publications will be shown.'\n      )\n      .option(\n        '--count <number-of-logs>',\n        'Number of logs to view, maximum 100, default 5.',\n        parseInt\n      )\n      .option(\n        '-p, --platform <android|ios>',\n        'Filter by platform, android or ios. Defaults to both platforms.'\n      )\n      .option('-s, --sdk-version <version>', 'Filter by SDK version e.g. 35.0.0')\n      .option('-r, --raw', 'Produce some raw output.'),\n    () => import('./publishHistoryAsync'),\n    { checkConfig: true }\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('publish:details [path]')\n      .alias('pd')\n      .description('Log details of a published release')\n      .helpGroup('publish')\n      .option('--publish-id <publish-id>', 'Publication id. (Required)')\n      .option('-r, --raw', 'Produce some raw output.'),\n    () => import('./publishDetailsAsync'),\n    { checkConfig: true }\n  );\n}\n"],"mappings":";;;;;;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;AAEe,kBAAUA,OAAV,EAA4B;EACzC,IAAAC,8CAAA,EACED,OAAO,CACJE,OADH,CACW,gBADX,EAEGC,KAFH,CAES,GAFT,EAGGC,WAHH,CAGe,kCAHf,EAIGC,SAJH,CAIa,SAJb,EAKGC,MALH,CAKU,aALV,EAKyB,iDALzB,EAMGA,MANH,CAMU,sBANV,EAMkC,mDANlC,EAOGA,MAPH,CAOU,aAPV,EAOyB,+BAPzB,EAQGA,MARH,CASI,6BATJ,EAUI,yFAVJ,EAYE;EAZF,CAaGA,MAbH,CAaU,qBAbV,EAaiC,kDAbjC,EAcGA,MAdH,CAeI,0BAfJ,EAgBI,0DAhBJ,EAiBI,SAjBJ,CADF,EAoBE,mEAAa,gBAAb,GApBF;EAuBA,IAAAL,8CAAA,EACED,OAAO,CACJE,OADH,CACW,oBADX,EAEGC,KAFH,CAES,IAFT,EAGGC,WAHH,CAGe,kDAHf,EAIGC,SAJH,CAIa,SAJb,EAKGC,MALH,CAMI,8BANJ,EAOI,sDAPJ,EASGA,MATH,CAUI,+BAVJ,EAWI,uEAXJ,CADF,EAcE,mEAAa,mBAAb,GAdF,EAeE;IAAEC,WAAW,EAAE;EAAf,CAfF;EAkBA,IAAAN,8CAAA,EACED,OAAO,CACJE,OADH,CACW,yBADX,EAEGC,KAFH,CAES,IAFT,EAGGC,WAHH,CAGe,6BAHf,EAIGC,SAJH,CAIa,SAJb,EAKGC,MALH,CAKU,2BALV,EAKuC,0BALvC,EAMGA,MANH,CAMU,8BANV,EAM0C,0CAN1C,EAOGA,MAPH,CAOU,6BAPV,EAOyC,yCAPzC,EAQGA,MARH,CAQU,8BARV,EAQ0C,2BAR1C,CADF,EAUE,mEAAa,wBAAb,GAVF,EAWE;IAAEC,WAAW,EAAE;EAAf,CAXF;EAcA,IAAAN,8CAAA,EACED,OAAO,CACJE,OADH,CACW,wBADX,EAEGC,KAFH,CAES,IAFT,EAGGC,WAHH,CAGe,4BAHf,EAIGC,SAJH,CAIa,SAJb,EAKGC,MALH,CAMI,8BANJ,EAOI,sGAPJ,EASGA,MATH,CAUI,0BAVJ,EAWI,iDAXJ,EAYIE,QAZJ,EAcGF,MAdH,CAeI,8BAfJ,EAgBI,iEAhBJ,EAkBGA,MAlBH,CAkBU,6BAlBV,EAkByC,mCAlBzC,EAmBGA,MAnBH,CAmBU,WAnBV,EAmBuB,0BAnBvB,CADF,EAqBE,mEAAa,uBAAb,GArBF,EAsBE;IAAEC,WAAW,EAAE;EAAf,CAtBF;EAyBA,IAAAN,8CAAA,EACED,OAAO,CACJE,OADH,CACW,wBADX,EAEGC,KAFH,CAES,IAFT,EAGGC,WAHH,CAGe,oCAHf,EAIGC,SAJH,CAIa,SAJb,EAKGC,MALH,CAKU,2BALV,EAKuC,4BALvC,EAMGA,MANH,CAMU,WANV,EAMuB,0BANvB,CADF,EAQE,mEAAa,uBAAb,GARF,EASE;IAAEC,WAAW,EAAE;EAAf,CATF;AAWD"}