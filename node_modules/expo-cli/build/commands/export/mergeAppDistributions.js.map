{"version":3,"file":"mergeAppDistributions.js","names":["isSelfHostedIndex","obj","sdkVersion","mergeAppDistributions","projectRoot","sourceDirs","outputDir","assetPathToWrite","path","resolve","fs","ensureDir","bundlesPathToWrite","androidIndexes","iosIndexes","sourceDir","promises","sourceAssetDir","outputAssetDir","assetPromise","copy","push","sourceBundleDir","outputBundleDir","bundlePromise","Promise","all","putJsonInMemory","indexPath","accumulator","index","JsonFile","readAsync","XDLError","Array","isArray","androidIndexPath","iosIndexPath","getSortedIndex","indexes","sort","index1","index2","semver","eq","Log","error","gte","sortedAndroidIndexes","sortedIosIndexes","Project","writeArtifactSafelyAsync","join","JSON","stringify"],"sources":["../../../src/commands/export/mergeAppDistributions.ts"],"sourcesContent":["import { ExpoAppManifest } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\nimport { Project, XDLError } from 'xdl';\n\nimport Log from '../../log';\n\ntype SelfHostedIndex = ExpoAppManifest & {\n  dependencies: string[];\n};\n\nfunction isSelfHostedIndex(obj: any): obj is SelfHostedIndex {\n  return !!obj.sdkVersion;\n}\n\n// Takes multiple exported apps in sourceDirs and coalesces them to one app in outputDir\nexport async function mergeAppDistributions(\n  projectRoot: string,\n  sourceDirs: string[],\n  outputDir: string\n): Promise<void> {\n  const assetPathToWrite = path.resolve(projectRoot, outputDir, 'assets');\n  await fs.ensureDir(assetPathToWrite);\n  const bundlesPathToWrite = path.resolve(projectRoot, outputDir, 'bundles');\n  await fs.ensureDir(bundlesPathToWrite);\n\n  // merge files from bundles and assets\n  const androidIndexes: SelfHostedIndex[] = [];\n  const iosIndexes: SelfHostedIndex[] = [];\n\n  for (const sourceDir of sourceDirs) {\n    const promises = [];\n\n    // copy over assets/bundles from other src dirs to the output dir\n    if (sourceDir !== outputDir) {\n      // copy file over to assetPath\n      const sourceAssetDir = path.resolve(projectRoot, sourceDir, 'assets');\n      const outputAssetDir = path.resolve(projectRoot, outputDir, 'assets');\n      const assetPromise = fs.copy(sourceAssetDir, outputAssetDir);\n      promises.push(assetPromise);\n\n      // copy files over to bundlePath\n      const sourceBundleDir = path.resolve(projectRoot, sourceDir, 'bundles');\n      const outputBundleDir = path.resolve(projectRoot, outputDir, 'bundles');\n      const bundlePromise = fs.copy(sourceBundleDir, outputBundleDir);\n      promises.push(bundlePromise);\n\n      await Promise.all(promises);\n    }\n\n    // put index.jsons into memory\n    const putJsonInMemory = async (indexPath: string, accumulator: SelfHostedIndex[]) => {\n      const index = await JsonFile.readAsync(indexPath);\n\n      if (!isSelfHostedIndex(index)) {\n        throw new XDLError(\n          'INVALID_MANIFEST',\n          `Invalid index.json, must specify an sdkVersion at ${indexPath}`\n        );\n      }\n      if (Array.isArray(index)) {\n        // index.json could also be an array\n        accumulator.push(...index);\n      } else {\n        accumulator.push(index);\n      }\n    };\n\n    const androidIndexPath = path.resolve(projectRoot, sourceDir, 'android-index.json');\n    await putJsonInMemory(androidIndexPath, androidIndexes);\n\n    const iosIndexPath = path.resolve(projectRoot, sourceDir, 'ios-index.json');\n    await putJsonInMemory(iosIndexPath, iosIndexes);\n  }\n\n  // sort indexes by descending sdk value\n  const getSortedIndex = (indexes: SelfHostedIndex[]) => {\n    return indexes.sort((index1: SelfHostedIndex, index2: SelfHostedIndex) => {\n      if (semver.eq(index1.sdkVersion, index2.sdkVersion)) {\n        Log.error(\n          `Encountered multiple index.json with the same SDK version ${index1.sdkVersion}. This could result in undefined behavior.`\n        );\n      }\n      return semver.gte(index1.sdkVersion, index2.sdkVersion) ? -1 : 1;\n    });\n  };\n\n  const sortedAndroidIndexes = getSortedIndex(androidIndexes);\n  const sortedIosIndexes = getSortedIndex(iosIndexes);\n\n  // Save the json arrays to disk\n  await Project.writeArtifactSafelyAsync(\n    projectRoot,\n    null,\n    path.join(outputDir, 'android-index.json'),\n    JSON.stringify(sortedAndroidIndexes)\n  );\n\n  await Project.writeArtifactSafelyAsync(\n    projectRoot,\n    null,\n    path.join(outputDir, 'ios-index.json'),\n    JSON.stringify(sortedIosIndexes)\n  );\n}\n"],"mappings":"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"}