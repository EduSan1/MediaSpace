{"version":3,"file":"index.js","names":["program","applyAsyncActionProjectDir","command","description","longDescription","helpGroup"],"sources":["../../../src/commands/fetch/index.ts"],"sourcesContent":["import type { Command } from 'commander';\n\nimport { applyAsyncActionProjectDir } from '../utils/applyAsyncAction';\n\nexport default function (program: Command) {\n  applyAsyncActionProjectDir(\n    program\n      .command('fetch:ios:certs [path]')\n      .description(`Download the project's iOS standalone app signing credentials`)\n      .longDescription(\n        `Fetch this project's iOS certificates/keys and provisioning profile. Writes files to the PROJECT_DIR and prints passwords to stdout.`\n      )\n      .helpGroup('credentials'),\n    () => import('./fetchIosCertsAsync')\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('fetch:android:keystore [path]')\n      .description(\"Download the project's Android keystore\")\n      .longDescription(\n        \"Fetch this project's Android Keystore. Writes Keystore to PROJECT_DIR/PROJECT_NAME.jks and prints passwords to stdout.\"\n      )\n      .helpGroup('credentials'),\n    () => import('./fetchAndroidKeystoreAsync')\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('fetch:android:hashes [path]')\n      .description(\"Compute and log the project's Android key hashes\")\n      .longDescription(\n        \"Fetch this project's Android key hashes needed to set up Google/Facebook authentication. Note: if you are using Google Play signing, this app will be signed with a different key after publishing to the store, and you'll need to use the hashes displayed in the Google Play console.\"\n      )\n      .helpGroup('credentials'),\n    () => import('./fetchAndroidHashesAsync')\n  );\n\n  applyAsyncActionProjectDir(\n    program\n      .command('fetch:android:upload-cert [path]')\n      .description(\"Download the project's Android keystore\")\n      .longDescription(\n        \"Fetch this project's upload certificate needed after opting in to app signing by Google Play or after resetting a previous upload certificate\"\n      )\n      .helpGroup('credentials'),\n    () => import('./fetchAndroidUploadCertAsync')\n  );\n}\n"],"mappings":";;;;;;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;AAEe,kBAAUA,OAAV,EAA4B;EACzC,IAAAC,8CAAA,EACED,OAAO,CACJE,OADH,CACW,wBADX,EAEGC,WAFH,CAEgB,+DAFhB,EAGGC,eAHH,CAIK,sIAJL,EAMGC,SANH,CAMa,aANb,CADF,EAQE,mEAAa,sBAAb,GARF;EAWA,IAAAJ,8CAAA,EACED,OAAO,CACJE,OADH,CACW,+BADX,EAEGC,WAFH,CAEe,yCAFf,EAGGC,eAHH,CAII,wHAJJ,EAMGC,SANH,CAMa,aANb,CADF,EAQE,mEAAa,6BAAb,GARF;EAWA,IAAAJ,8CAAA,EACED,OAAO,CACJE,OADH,CACW,6BADX,EAEGC,WAFH,CAEe,kDAFf,EAGGC,eAHH,CAII,0RAJJ,EAMGC,SANH,CAMa,aANb,CADF,EAQE,mEAAa,2BAAb,GARF;EAWA,IAAAJ,8CAAA,EACED,OAAO,CACJE,OADH,CACW,kCADX,EAEGC,WAFH,CAEe,yCAFf,EAGGC,eAHH,CAII,+IAJJ,EAMGC,SANH,CAMa,aANb,CADF,EAQE,mEAAa,+BAAb,GARF;AAUD"}