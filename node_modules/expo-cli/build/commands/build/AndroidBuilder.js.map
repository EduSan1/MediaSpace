{"version":3,"file":"AndroidBuilder.js","names":["ANDROID","PLATFORMS","AndroidBuilder","BaseBuilder","run","options","type","utils","askBuildType","apk","Android","checkSplashScreenImages","projectDir","checkForBuildInProgress","collectAndValidateCredentials","publishedExpIds","publicUrl","undefined","ensureReleaseExists","checkStatusBeforeBuild","build","checkProjectConfig","checkIfSdkIsSupported","manifest","sdkVersion","getOrPromptForPackage","updateProjectConfig","platform","nonInteractive","parent","skipCredentialsCheck","ctx","Context","init","experienceName","projectOwner","slug","clearCredentials","BuildError","runCredentialsManager","RemoveKeystore","paramKeystore","getKeystoreFromParams","useKeystore","keystore","skipKeystoreValidation","SetupAndroidKeystore","allowMissingKeystore"],"sources":["../../../src/commands/build/AndroidBuilder.ts"],"sourcesContent":["import { Android } from 'xdl';\n\nimport { Context } from '../../credentials';\nimport { runCredentialsManager } from '../../credentials/route';\nimport {\n  getKeystoreFromParams,\n  RemoveKeystore,\n  useKeystore,\n} from '../../credentials/views/AndroidKeystore';\nimport { SetupAndroidKeystore } from '../../credentials/views/SetupAndroidKeystore';\nimport { getOrPromptForPackage } from '../utils/getOrPromptApplicationId';\nimport BaseBuilder from './BaseBuilder';\nimport BuildError from './BuildError';\nimport { Platform, PLATFORMS } from './constants';\nimport * as utils from './utils';\n\nconst { ANDROID } = PLATFORMS;\n\nexport default class AndroidBuilder extends BaseBuilder {\n  async run(): Promise<void> {\n    // This gets run after all other validation to prevent users from having to answer this question multiple times.\n    this.options.type = await utils.askBuildType(this.options.type!, {\n      apk: 'Build a package to deploy to the store or install directly on Android devices',\n      'app-bundle': 'Build an optimized bundle for the store',\n    });\n\n    // Check SplashScreen images sizes\n    await Android.checkSplashScreenImages(this.projectDir);\n\n    // Check the status of any current builds\n    await this.checkForBuildInProgress();\n    // Check for existing credentials, collect any missing credentials, and validate them\n    await this.collectAndValidateCredentials();\n    // Publish the current experience, if necessary\n    const publishedExpIds = this.options.publicUrl ? undefined : await this.ensureReleaseExists();\n\n    if (!this.options.publicUrl) {\n      await this.checkStatusBeforeBuild();\n    }\n\n    // Initiate a build\n    await this.build(publishedExpIds);\n  }\n\n  async checkProjectConfig(): Promise<void> {\n    // Run this first because the error messages are related\n    // to ExpoKit which is harder to change than the bundle ID.\n    await super.checkProjectConfig();\n\n    await utils.checkIfSdkIsSupported(this.manifest.sdkVersion!, ANDROID);\n\n    // Check the android package name\n    await getOrPromptForPackage(this.projectDir);\n\n    this.updateProjectConfig();\n  }\n\n  platform(): Platform {\n    return ANDROID;\n  }\n\n  async collectAndValidateCredentials(): Promise<void> {\n    const nonInteractive = this.options.parent?.nonInteractive;\n    const skipCredentialsCheck = this.options.skipCredentialsCheck === true;\n\n    const ctx = new Context();\n    await ctx.init(this.projectDir, { nonInteractive });\n\n    const experienceName = `@${ctx.projectOwner}/${ctx.manifest.slug}`;\n\n    if (this.options.clearCredentials) {\n      if (nonInteractive) {\n        throw new BuildError(\n          'Clearing your Android build credentials from our build servers is a PERMANENT and IRREVERSIBLE action, it\\'s not supported when combined with the \"--non-interactive\" option'\n        );\n      }\n      await runCredentialsManager(ctx, new RemoveKeystore(experienceName));\n    }\n\n    const paramKeystore = await getKeystoreFromParams(this.options);\n    if (paramKeystore) {\n      await useKeystore(ctx, {\n        experienceName,\n        keystore: paramKeystore,\n        skipKeystoreValidation: skipCredentialsCheck,\n      });\n    } else {\n      await runCredentialsManager(\n        ctx,\n        new SetupAndroidKeystore(experienceName, {\n          nonInteractive,\n          allowMissingKeystore: true,\n          skipKeystoreValidation: skipCredentialsCheck,\n        })\n      );\n    }\n  }\n}\n"],"mappings":"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"}