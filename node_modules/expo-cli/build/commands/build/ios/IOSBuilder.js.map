{"version":3,"file":"IOSBuilder.js","names":["noBundleIdMessage","missingBundleIdentifierError","XDLError","IOSBuilder","BaseBuilder","run","options","type","utils","askBuildType","archive","simulator","maybeWarnDamagedSimulator","Log","addNewLineIfNone","checkForBuildInProgress","prepareCredentials","publishedExpIds","ensureProjectIsPublished","publicUrl","checkStatusBeforeBuild","build","maybeExplainUploadStep","bestEffortAppleCtx","ctx","hasAppleCtx","appleId","ensureAppleCtx","nonInteractive","parent","confirm","confirmAsync","message","log","chalk","green","checkProjectConfig","sdkVersion","manifest","checkIfSdkIsSupported","PLATFORMS","IOS","validateIcon","getOrPromptForBundleIdentifier","projectDir","updateProjectConfig","getAccountNameAsync","owner","getUserAsync","username","accountName","projectName","slug","bundleIdentifier","ios","appLookupParams","context","Context","init","skipCredentialsCheck","clearAndRevokeCredentialsIfRequested","produceCredentials","e","code","ErrorCodes","NON_INTERACTIVE","newLine","link","TerminalLink","fallbackToTextAndUrl","bold","red","CommandError","appCredentials","getAppCredentials","pushCredentials","getPushKey","distCredentials","getDistCert","displayProjectCredentials","_setupDistCert","distCertFromParams","getDistCertFromParams","useDistCertFromParams","runCredentialsManager","SetupIosDist","error","_setupPushCert","pushKeyFromParams","getPushKeyFromParams","usePushKeyFromParams","SetupIosPush","_setupProvisioningProfile","provisioningProfileFromParams","getProvisioningProfileFromParams","provisioningProfilePath","useProvisioningProfileFromParams","SetupIosProvisioningProfile","apple","ensureBundleIdExistsAsync","appleCtx","enablePushNotifications","clearCredentials","clearDistCert","clearPushKey","clearPushCert","clearProvisioningProfile","shouldClearAnything","credsToClear","determineCredentialsToClear","shouldRevokeOnApple","revokeCredentials","provisioningProfile","getProvisioningProfile","view","RemoveProvisioningProfile","removeSpecific","distributionCert","RemoveIosDist","pushKey","RemoveIosPush","pushCert","getPushCert","deletePushCert","credsToClearAll","Boolean","pickBy","undefined","ensureReleaseExists","platform","icon","ensurePNGIsNotTransparent","err","process","transporterAppLink","learnMore","isMacOsCatalinaOrLater","os","semver","satisfies","release","underline","grey"],"sources":["../../../../src/commands/build/ios/IOSBuilder.ts"],"sourcesContent":["import chalk from 'chalk';\nimport pickBy from 'lodash/pickBy';\nimport os from 'os';\nimport semver from 'semver';\nimport { XDLError } from 'xdl';\n\nimport CommandError, { ErrorCodes } from '../../../CommandError';\nimport * as apple from '../../../appleApi';\nimport { displayProjectCredentials } from '../../../credentials/actions/list';\nimport { Context } from '../../../credentials/context';\nimport { runCredentialsManager } from '../../../credentials/route';\nimport {\n  getDistCertFromParams,\n  RemoveIosDist,\n  useDistCertFromParams,\n} from '../../../credentials/views/IosDistCert';\nimport {\n  getProvisioningProfileFromParams,\n  RemoveProvisioningProfile,\n  useProvisioningProfileFromParams,\n} from '../../../credentials/views/IosProvisioningProfile';\nimport {\n  getPushKeyFromParams,\n  RemoveIosPush,\n  usePushKeyFromParams,\n} from '../../../credentials/views/IosPushCredentials';\nimport { SetupIosDist } from '../../../credentials/views/SetupIosDist';\nimport { SetupIosProvisioningProfile } from '../../../credentials/views/SetupIosProvisioningProfile';\nimport { SetupIosPush } from '../../../credentials/views/SetupIosPush';\nimport Log from '../../../log';\nimport { confirmAsync } from '../../../utils/prompts';\nimport * as TerminalLink from '../../utils/TerminalLink';\nimport { getOrPromptForBundleIdentifier } from '../../utils/getOrPromptApplicationId';\nimport BaseBuilder from '../BaseBuilder';\nimport { PLATFORMS } from '../constants';\nimport * as utils from '../utils';\nimport { ensurePNGIsNotTransparent } from './utils/image';\n\nconst noBundleIdMessage = `Your project must have a \\`bundleIdentifier\\` set in the Expo config (app.json or app.config.js).\\nSee https://expo.fyi/bundle-identifier`;\n\nfunction missingBundleIdentifierError() {\n  return new XDLError('INVALID_OPTIONS', noBundleIdMessage);\n}\n\ninterface AppLookupParams {\n  accountName: string;\n  projectName: string;\n  bundleIdentifier: string;\n}\n\nclass IOSBuilder extends BaseBuilder {\n  async run(): Promise<void> {\n    // This gets run after all other validation to prevent users from having to answer this question multiple times.\n    this.options.type = await utils.askBuildType(this.options.type!, {\n      archive: 'Deploy the build to the store',\n      simulator: 'Run the build on a simulator',\n    });\n    this.maybeWarnDamagedSimulator();\n    Log.addNewLineIfNone();\n    await this.checkForBuildInProgress();\n    if (this.options.type === 'archive') {\n      await this.prepareCredentials();\n    }\n    const publishedExpIds = await this.ensureProjectIsPublished();\n    if (!this.options.publicUrl) {\n      await this.checkStatusBeforeBuild();\n    }\n    await this.build(publishedExpIds);\n\n    this.maybeExplainUploadStep();\n    this.maybeWarnDamagedSimulator();\n  }\n\n  // Try to get the user to provide Apple credentials upfront\n  // We will be able to do full validation of their iOS creds this way\n  async bestEffortAppleCtx(ctx: Context): Promise<void> {\n    if (ctx.hasAppleCtx()) {\n      // skip prompts if already have apple ctx\n      return;\n    }\n    if (this.options.appleId) {\n      // skip prompts and auto authenticate if flags are passed\n      return await ctx.ensureAppleCtx();\n    }\n\n    const nonInteractive = this.options.parent && this.options.parent.nonInteractive;\n    if (nonInteractive) {\n      return;\n    }\n\n    const confirm = await confirmAsync({\n      message: `Do you have access to the Apple account that will be used for submitting this app to the App Store?`,\n    });\n    if (confirm) {\n      return await ctx.ensureAppleCtx();\n    } else {\n      Log.log(\n        chalk.green(\n          'No problem! ðŸ‘Œ \\nWe canâ€™t auto-generate credentials if you donâ€™t have access to the main Apple account. \\nBut we can still set it up if you upload your credentials.'\n        )\n      );\n    }\n  }\n\n  // All config validation should happen here before any build logic takes place.\n  // It's important that the errors are revealed in a thoughtful manner.\n  async checkProjectConfig(): Promise<void> {\n    // Run this first because the error messages are related\n    // to ExpoKit which is harder to change than the bundle ID.\n    await super.checkProjectConfig();\n\n    // Check the SDK version next as it's the second hardest thing to change.\n    const sdkVersion = this.manifest.sdkVersion;\n\n    await utils.checkIfSdkIsSupported(sdkVersion!, PLATFORMS.IOS);\n\n    // Validate the icon third since it's fairly easy to modify.\n    await this.validateIcon();\n\n    // Check the bundle ID and possibly prompt the user to add a new one.\n    await getOrPromptForBundleIdentifier(this.projectDir);\n    // Update with the latest bundle ID\n    this.updateProjectConfig();\n  }\n\n  private async getAccountNameAsync(): Promise<string> {\n    if (this.manifest.owner) return this.manifest.owner;\n    return (await this.getUserAsync())?.username;\n  }\n\n  private async prepareCredentials() {\n    const accountName = await this.getAccountNameAsync();\n    const projectName = this.manifest.slug;\n    const bundleIdentifier = this.manifest.ios?.bundleIdentifier;\n    if (!bundleIdentifier) throw missingBundleIdentifierError();\n    const appLookupParams = {\n      accountName,\n      projectName,\n      bundleIdentifier,\n    };\n    const context = new Context();\n    await context.init(this.projectDir, {\n      ...this.options,\n      nonInteractive: this.options.parent?.nonInteractive,\n    });\n\n    if (this.options.skipCredentialsCheck) {\n      Log.log('Skipping credentials check...');\n      return;\n    }\n    await this.bestEffortAppleCtx(context);\n    await this.clearAndRevokeCredentialsIfRequested(context, appLookupParams);\n\n    try {\n      await this.produceCredentials(context, appLookupParams);\n    } catch (e: any) {\n      if (e.code === ErrorCodes.NON_INTERACTIVE) {\n        Log.newLine();\n        const link = TerminalLink.fallbackToTextAndUrl(\n          'expo.fyi/credentials-non-interactive',\n          'https://expo.fyi/credentials-non-interactive'\n        );\n        Log.log(\n          chalk.bold.red(\n            `Additional information needed to setup credentials in non-interactive mode.`\n          )\n        );\n        Log.log(chalk.bold.red(`Learn more about how to resolve this: ${link}.`));\n        Log.newLine();\n\n        // We don't want to display project credentials when we bail out due to\n        // non-interactive mode error, because we are unable to recover without\n        // user input.\n        throw new CommandError(\n          ErrorCodes.NON_INTERACTIVE,\n          'Unable to proceed, see the above error message.'\n        );\n      }\n\n      Log.log(\n        chalk.bold.red(\n          'Failed to prepare all credentials. \\nThe next time you build, we will automatically use the following configuration:'\n        )\n      );\n      throw e;\n    } finally {\n      const appCredentials = await context.ios.getAppCredentials(appLookupParams);\n      const pushCredentials = await context.ios.getPushKey(appLookupParams);\n      const distCredentials = await context.ios.getDistCert(appLookupParams);\n      displayProjectCredentials(appLookupParams, appCredentials, pushCredentials, distCredentials);\n    }\n  }\n\n  async _setupDistCert(ctx: Context, appLookupParams: AppLookupParams): Promise<void> {\n    try {\n      const distCertFromParams = await getDistCertFromParams(this.options);\n      if (distCertFromParams) {\n        await useDistCertFromParams(ctx, appLookupParams, distCertFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosDist(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Distribution Certificate');\n      throw e;\n    }\n  }\n\n  async _setupPushCert(ctx: Context, appLookupParams: AppLookupParams): Promise<void> {\n    try {\n      const pushKeyFromParams = await getPushKeyFromParams(this.options);\n      if (pushKeyFromParams) {\n        await usePushKeyFromParams(ctx, appLookupParams, pushKeyFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosPush(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Push Key');\n      throw e;\n    }\n  }\n\n  async _setupProvisioningProfile(ctx: Context, appLookupParams: AppLookupParams) {\n    try {\n      const provisioningProfileFromParams = await getProvisioningProfileFromParams(\n        this.options.provisioningProfilePath\n      );\n      if (provisioningProfileFromParams) {\n        await useProvisioningProfileFromParams(ctx, appLookupParams, provisioningProfileFromParams);\n      } else {\n        await runCredentialsManager(ctx, new SetupIosProvisioningProfile(appLookupParams));\n      }\n    } catch (e: any) {\n      Log.error('Failed to set up Provisioning Profile');\n      throw e;\n    }\n  }\n\n  async produceCredentials(ctx: Context, appLookupParams: AppLookupParams) {\n    if (ctx.hasAppleCtx()) {\n      await apple.ensureBundleIdExistsAsync(ctx.appleCtx, appLookupParams, {\n        enablePushNotifications: true,\n      });\n    }\n    await this._setupDistCert(ctx, appLookupParams);\n    await this._setupPushCert(ctx, appLookupParams);\n    await this._setupProvisioningProfile(ctx, appLookupParams);\n  }\n\n  async clearAndRevokeCredentialsIfRequested(\n    ctx: Context,\n    appLookupParams: AppLookupParams\n  ): Promise<void> {\n    const {\n      clearCredentials,\n      clearDistCert,\n      clearPushKey,\n      clearPushCert,\n      clearProvisioningProfile,\n    } = this.options;\n    const shouldClearAnything =\n      clearCredentials ||\n      clearDistCert ||\n      clearPushKey ||\n      clearPushCert ||\n      clearProvisioningProfile;\n    if (shouldClearAnything) {\n      const credsToClear = this.determineCredentialsToClear();\n      await this.clearCredentials(ctx, appLookupParams, credsToClear);\n    }\n  }\n\n  async clearCredentials(\n    ctx: Context,\n    appLookupParams: AppLookupParams,\n    credsToClear: Record<string, boolean>\n  ): Promise<void> {\n    const shouldRevokeOnApple = this.options.revokeCredentials;\n\n    const provisioningProfile = await ctx.ios.getProvisioningProfile(appLookupParams);\n    if (credsToClear.provisioningProfile && provisioningProfile) {\n      const view = new RemoveProvisioningProfile(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, appLookupParams);\n    }\n\n    const distributionCert = await ctx.ios.getDistCert(appLookupParams);\n    if (credsToClear.distributionCert && distributionCert) {\n      const view = new RemoveIosDist(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, distributionCert);\n    }\n\n    const pushKey = await ctx.ios.getPushKey(appLookupParams);\n    if (credsToClear.pushKey && pushKey) {\n      const view = new RemoveIosPush(appLookupParams.accountName, shouldRevokeOnApple);\n      await view.removeSpecific(ctx, pushKey);\n    }\n\n    const pushCert = await ctx.ios.getPushCert(appLookupParams);\n    if (credsToClear.pushCert && pushCert) {\n      await ctx.ios.deletePushCert(appLookupParams);\n    }\n  }\n\n  determineCredentialsToClear(): Record<string, boolean> {\n    const {\n      clearCredentials,\n      clearDistCert,\n      clearPushKey,\n      clearPushCert,\n      clearProvisioningProfile,\n    } = this.options;\n    const credsToClearAll = {\n      distributionCert: Boolean(clearCredentials || clearDistCert),\n      pushKey: Boolean(clearCredentials || clearPushKey),\n      // TODO: backward compatibility, remove when all users migrate to push keys\n      pushCert: Boolean(clearCredentials || clearPushCert),\n      provisioningProfile: Boolean(clearCredentials || clearProvisioningProfile),\n    };\n    return pickBy(credsToClearAll);\n  }\n\n  async ensureProjectIsPublished() {\n    if (this.options.publicUrl) {\n      return undefined;\n    } else {\n      return await this.ensureReleaseExists();\n    }\n  }\n\n  platform() {\n    return PLATFORMS.IOS;\n  }\n\n  // validates whether the icon doesn't have transparency\n  async validateIcon() {\n    // TODO: maybe recommend the icon builder website.\n    try {\n      const icon = this.manifest.ios?.icon ?? this.manifest.icon;\n      if (!icon) {\n        // icon is optional\n        return;\n      }\n      await ensurePNGIsNotTransparent(icon);\n    } catch (err: any) {\n      if (err instanceof XDLError) {\n        throw err;\n      } else {\n        // something weird happened, let's assume the icon is correct\n      }\n    }\n  }\n\n  maybeExplainUploadStep() {\n    if (process.platform !== 'darwin' || this.options.type === 'simulator') {\n      return;\n    }\n\n    Log.newLine();\n    Log.log(\n      `You can now publish to the App Store with ${TerminalLink.transporterAppLink()} or ${chalk.bold(\n        'eas submit --platform ios'\n      )}. ${TerminalLink.learnMore('https://docs.expo.dev/distribution/uploading-apps/')}`\n    );\n  }\n\n  // warns for \"damaged\" builds when targeting simulator\n  // see: https://github.com/expo/expo-cli/issues/1197\n  maybeWarnDamagedSimulator() {\n    // see: https://en.wikipedia.org/wiki/Darwin_%28operating_system%29#Release_history\n    const isMacOsCatalinaOrLater =\n      os.platform() === 'darwin' && semver.satisfies(os.release(), '>=19.0.0');\n\n    if (isMacOsCatalinaOrLater && this.options.type === 'simulator') {\n      Log.newLine();\n      Log.log(\n        chalk.bold(\n          `ðŸš¨ If the build is not installable on your simulator because of \"${chalk.underline(\n            `... is damaged and can't be opened.`\n          )}\", please run:`\n        )\n      );\n      Log.log(chalk.grey.bold('xattr -rd com.apple.quarantine /path/to/your.app'));\n    }\n  }\n}\n\nexport default IOSBuilder;\n"],"mappings":"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"}