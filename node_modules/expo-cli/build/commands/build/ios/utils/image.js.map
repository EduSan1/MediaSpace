{"version":3,"file":"image.js","names":["getImageStreamAsync","imagePathOrURL","isUrl","UrlUtils","isURL","protocols","requireProtocol","response","axios","get","responseType","data","fs","createReadStream","ensurePNGIsNotTransparent","hasAlreadyResolved","stream","Promise","res","rej","pipe","PNG","filterType","on","alpha","close","validateAlphaChannelIsEmpty","width","height","err","y","x","idx","XDLError"],"sources":["../../../../../src/commands/build/ios/utils/image.ts"],"sourcesContent":["import axios from 'axios';\nimport fs from 'fs-extra';\nimport { PNG } from 'pngjs';\nimport { Readable } from 'stream';\nimport { UrlUtils, XDLError } from 'xdl';\n\nasync function getImageStreamAsync(imagePathOrURL: string) {\n  const isUrl = UrlUtils.isURL(imagePathOrURL, {\n    protocols: ['http', 'https'],\n    requireProtocol: true,\n  });\n\n  if (isUrl) {\n    const response = await axios.get<Readable>(imagePathOrURL, { responseType: 'stream' });\n    return response.data;\n  } else {\n    return fs.createReadStream(imagePathOrURL);\n  }\n}\n\nexport async function ensurePNGIsNotTransparent(imagePathOrURL: string): Promise<void> {\n  let hasAlreadyResolved = false;\n  const stream = await getImageStreamAsync(imagePathOrURL);\n\n  return new Promise((res, rej) => {\n    stream\n      .pipe(new PNG({ filterType: 4 }))\n      .on('metadata', ({ alpha }) => {\n        if (!alpha) {\n          hasAlreadyResolved = true;\n          if ('close' in stream) stream.close();\n          res();\n        }\n      })\n      .on('parsed', () => {\n        if (hasAlreadyResolved) {\n          return;\n        }\n        try {\n          // @ts-ignore: 'this' implicitly has type 'any' because it does not have a type annotation.\n          validateAlphaChannelIsEmpty(this.data, { width: this.width, height: this.height });\n          res();\n        } catch (err: any) {\n          rej(err);\n        }\n      })\n      .on('error', err => rej(err));\n  });\n}\n\nfunction validateAlphaChannelIsEmpty(\n  data: Buffer,\n  { width, height }: { width: number; height: number }\n): void {\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const idx = (width * y + x) * 4;\n      if (data[idx + 3] !== 255) {\n        throw new XDLError(\n          'INVALID_ASSETS',\n          `Your app icon can't have transparency if you wish to upload your app Apple's App Store. Read more here: https://expo.fyi/remove-alpha-channel`\n        );\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA,eAAeA,mBAAf,CAAmCC,cAAnC,EAA2D;EACzD,MAAMC,KAAK,GAAGC,eAAA,CAASC,KAAT,CAAeH,cAAf,EAA+B;IAC3CI,SAAS,EAAE,CAAC,MAAD,EAAS,OAAT,CADgC;IAE3CC,eAAe,EAAE;EAF0B,CAA/B,CAAd;;EAKA,IAAIJ,KAAJ,EAAW;IACT,MAAMK,QAAQ,GAAG,MAAMC,gBAAA,CAAMC,GAAN,CAAoBR,cAApB,EAAoC;MAAES,YAAY,EAAE;IAAhB,CAApC,CAAvB;IACA,OAAOH,QAAQ,CAACI,IAAhB;EACD,CAHD,MAGO;IACL,OAAOC,kBAAA,CAAGC,gBAAH,CAAoBZ,cAApB,CAAP;EACD;AACF;;AAEM,eAAea,yBAAf,CAAyCb,cAAzC,EAAgF;EACrF,IAAIc,kBAAkB,GAAG,KAAzB;EACA,MAAMC,MAAM,GAAG,MAAMhB,mBAAmB,CAACC,cAAD,CAAxC;EAEA,OAAO,IAAIgB,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;IAC/BH,MAAM,CACHI,IADH,CACQ,KAAIC,YAAJ,EAAQ;MAAEC,UAAU,EAAE;IAAd,CAAR,CADR,EAEGC,EAFH,CAEM,UAFN,EAEkB,CAAC;MAAEC;IAAF,CAAD,KAAe;MAC7B,IAAI,CAACA,KAAL,EAAY;QACVT,kBAAkB,GAAG,IAArB;QACA,IAAI,WAAWC,MAAf,EAAuBA,MAAM,CAACS,KAAP;QACvBP,GAAG;MACJ;IACF,CARH,EASGK,EATH,CASM,QATN,EASgB,MAAM;MAClB,IAAIR,kBAAJ,EAAwB;QACtB;MACD;;MACD,IAAI;QACF;QACAW,2BAA2B,CAAC,KAAKf,IAAN,EAAY;UAAEgB,KAAK,EAAE,KAAKA,KAAd;UAAqBC,MAAM,EAAE,KAAKA;QAAlC,CAAZ,CAA3B;QACAV,GAAG;MACJ,CAJD,CAIE,OAAOW,GAAP,EAAiB;QACjBV,GAAG,CAACU,GAAD,CAAH;MACD;IACF,CApBH,EAqBGN,EArBH,CAqBM,OArBN,EAqBeM,GAAG,IAAIV,GAAG,CAACU,GAAD,CArBzB;EAsBD,CAvBM,CAAP;AAwBD;;AAED,SAASH,2BAAT,CACEf,IADF,EAEE;EAAEgB,KAAF;EAASC;AAAT,CAFF,EAGQ;EACN,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAApB,EAA2BI,CAAC,EAA5B,EAAgC;MAC9B,MAAMC,GAAG,GAAG,CAACL,KAAK,GAAGG,CAAR,GAAYC,CAAb,IAAkB,CAA9B;;MACA,IAAIpB,IAAI,CAACqB,GAAG,GAAG,CAAP,CAAJ,KAAkB,GAAtB,EAA2B;QACzB,MAAM,KAAIC,eAAJ,EACJ,gBADI,EAEH,+IAFG,CAAN;MAID;IACF;EACF;AACF"}