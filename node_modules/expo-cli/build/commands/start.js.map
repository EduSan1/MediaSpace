{"version":3,"file":"start.js","names":["program","deprecatedHelp","value","chalk","yellow","command","alias","description","helpGroup","option","urlOpts","allowOffline","asyncActionProjectDir","projectRoot","options","normalizeOptionsAsync","normalizedOptions","actionAsync","webOnly"],"sources":["../../src/commands/start.ts"],"sourcesContent":["import chalk from 'chalk';\n\nimport type { RawStartOptions } from './start/parseStartOptions';\n\nexport default (program: any) => {\n  const deprecatedHelp = (value: string) => chalk.yellow`Deprecated: ` + value;\n  program\n    .command('start [path]')\n    .alias('r')\n    .description('Start a local dev server for the app')\n    .helpGroup('core')\n    .option('-s, --send-to [dest]', 'An email address to send a link to')\n    .option('-c, --clear', 'Clear the Metro bundler cache')\n    // TODO(anp) set a default for this dynamically based on whether we're inside a container?\n    .option('--max-workers <num>', 'Maximum number of tasks to allow Metro to spawn.')\n    .option('--no-dev', 'Turn development mode off')\n    .option('--minify', 'Minify code')\n    .option('--https', 'To start webpack with https protocol')\n    .option('--force-manifest-type <manifest-type>', 'Override auto detection of manifest type')\n    .option(\n      '-p, --port <port>',\n      'Port to start the native Metro bundler on (does not apply to web or tunnel). Default: 19000'\n    )\n    .urlOpts()\n    .allowOffline()\n    .option('--dev', deprecatedHelp('Dev mode is used by default'))\n    .option('--no-minify', deprecatedHelp('Minify is disabled by default'))\n    .option('--no-https', deprecatedHelp('https is disabled by default'))\n    .asyncActionProjectDir(\n      async (projectRoot: string, options: RawStartOptions): Promise<void> => {\n        const { normalizeOptionsAsync } = await import('./start/parseStartOptions');\n        const normalizedOptions = await normalizeOptionsAsync(projectRoot, options);\n        const { actionAsync } = await import('./start/startAsync');\n        return await actionAsync(projectRoot, normalizedOptions);\n      }\n    );\n\n  program\n    .command('start:web [path]')\n    .alias('web')\n    .description('Start a Webpack dev server for the web app')\n    .helpGroup('core')\n    .option('--no-dev', 'Turn development mode off')\n    .option('--minify', 'Minify code')\n    .option('--https', 'To start webpack with https protocol')\n    .option('--force-manifest-type <manifest-type>', 'Override auto detection of manifest type')\n    .option('-p, --port <port>', 'Port to start the Webpack bundler on. Default: 19006')\n    .option('-s, --send-to [dest]', 'An email address to send a link to')\n    .urlOpts()\n    .allowOffline()\n    .option('--dev', deprecatedHelp('Dev mode is used by default'))\n    .option('--no-minify', deprecatedHelp('Minify is disabled by default'))\n    .option('--no-https', deprecatedHelp('https is disabled by default'))\n    .asyncActionProjectDir(\n      async (projectRoot: string, options: RawStartOptions): Promise<void> => {\n        const { normalizeOptionsAsync } = await import('./start/parseStartOptions');\n        const normalizedOptions = await normalizeOptionsAsync(projectRoot, {\n          ...options,\n          webOnly: true,\n        });\n        const { actionAsync } = await import('./start/startAsync');\n        return await actionAsync(projectRoot, normalizedOptions);\n      }\n    );\n};\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;eAIgBA,OAAD,IAAkB;EAC/B,MAAMC,cAAc,GAAIC,KAAD,IAAmBC,gBAAA,CAAMC,MAAO,cAAb,GAA6BF,KAAvE;;EACAF,OAAO,CACJK,OADH,CACW,cADX,EAEGC,KAFH,CAES,GAFT,EAGGC,WAHH,CAGe,sCAHf,EAIGC,SAJH,CAIa,MAJb,EAKGC,MALH,CAKU,sBALV,EAKkC,oCALlC,EAMGA,MANH,CAMU,aANV,EAMyB,+BANzB,EAOE;EAPF,CAQGA,MARH,CAQU,qBARV,EAQiC,kDARjC,EASGA,MATH,CASU,UATV,EASsB,2BATtB,EAUGA,MAVH,CAUU,UAVV,EAUsB,aAVtB,EAWGA,MAXH,CAWU,SAXV,EAWqB,sCAXrB,EAYGA,MAZH,CAYU,uCAZV,EAYmD,0CAZnD,EAaGA,MAbH,CAcI,mBAdJ,EAeI,6FAfJ,EAiBGC,OAjBH,GAkBGC,YAlBH,GAmBGF,MAnBH,CAmBU,OAnBV,EAmBmBR,cAAc,CAAC,6BAAD,CAnBjC,EAoBGQ,MApBH,CAoBU,aApBV,EAoByBR,cAAc,CAAC,+BAAD,CApBvC,EAqBGQ,MArBH,CAqBU,YArBV,EAqBwBR,cAAc,CAAC,8BAAD,CArBtC,EAsBGW,qBAtBH,CAuBI,OAAOC,WAAP,EAA4BC,OAA5B,KAAwE;IACtE,MAAM;MAAEC;IAAF,IAA4B,mEAAa,2BAAb,GAAlC;IACA,MAAMC,iBAAiB,GAAG,MAAMD,qBAAqB,CAACF,WAAD,EAAcC,OAAd,CAArD;IACA,MAAM;MAAEG;IAAF,IAAkB,mEAAa,oBAAb,GAAxB;IACA,OAAO,MAAMA,WAAW,CAACJ,WAAD,EAAcG,iBAAd,CAAxB;EACD,CA5BL;EA+BAhB,OAAO,CACJK,OADH,CACW,kBADX,EAEGC,KAFH,CAES,KAFT,EAGGC,WAHH,CAGe,4CAHf,EAIGC,SAJH,CAIa,MAJb,EAKGC,MALH,CAKU,UALV,EAKsB,2BALtB,EAMGA,MANH,CAMU,UANV,EAMsB,aANtB,EAOGA,MAPH,CAOU,SAPV,EAOqB,sCAPrB,EAQGA,MARH,CAQU,uCARV,EAQmD,0CARnD,EASGA,MATH,CASU,mBATV,EAS+B,sDAT/B,EAUGA,MAVH,CAUU,sBAVV,EAUkC,oCAVlC,EAWGC,OAXH,GAYGC,YAZH,GAaGF,MAbH,CAaU,OAbV,EAamBR,cAAc,CAAC,6BAAD,CAbjC,EAcGQ,MAdH,CAcU,aAdV,EAcyBR,cAAc,CAAC,+BAAD,CAdvC,EAeGQ,MAfH,CAeU,YAfV,EAewBR,cAAc,CAAC,8BAAD,CAftC,EAgBGW,qBAhBH,CAiBI,OAAOC,WAAP,EAA4BC,OAA5B,KAAwE;IACtE,MAAM;MAAEC;IAAF,IAA4B,mEAAa,2BAAb,GAAlC;IACA,MAAMC,iBAAiB,GAAG,MAAMD,qBAAqB,CAACF,WAAD,EAAc,EACjE,GAAGC,OAD8D;MAEjEI,OAAO,EAAE;IAFwD,CAAd,CAArD;IAIA,MAAM;MAAED;IAAF,IAAkB,mEAAa,oBAAb,GAAxB;IACA,OAAO,MAAMA,WAAW,CAACJ,WAAD,EAAcG,iBAAd,CAAxB;EACD,CAzBL;AA2BD,C"}