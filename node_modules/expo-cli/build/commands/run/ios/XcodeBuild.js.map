{"version":3,"file":"XcodeBuild.js","names":["logPrettyItem","message","Log","log","chalk","whiteBright","getProjectBuildSettings","xcodeProject","configuration","sdkName","scheme","args","isWorkspace","name","debug","join","stdout","spawnAsync","stdio","JSON","parse","error","warn","match","dim","getAppBinaryPath","buildOutput","CONFIGURATION_BUILD_DIR","extractEnvVariableFromBuild","sort","a","b","length","UNLOCALIZED_RESOURCES_FOLDER_PATH","binaryPath","path","getEscapedPath","filePath","fs","existsSync","unescapedPath","split","Error","variableName","reg","RegExp","matched","matchAll","CommandError","map","value","filter","Boolean","getProcessOptions","packager","shouldSkipInitialBundling","terminal","port","SKIP_BUNDLING","undefined","env","process","RCT_TERMINAL","RCT_METRO_PORT","toString","RCT_NO_LAUNCH_PACKAGER","buildAsync","projectRoot","device","isSimulator","buildCache","udid","developmentTeamId","ensureDeviceIsCodeSignedForDeploymentAsync","push","bold","formatter","ExpoRunFormatter","create","isDebug","Promise","resolve","reject","buildProcess","spawn","errorOutput","currentBuffer","flushBuffer","data","lines","pipe","line","on","stringData","endsWith","os","EOL","stderr","Buffer","code","AbortCommandError","getBuildSummary","logFilePath","writeBuildLogs","wasErrorPresented","errors","errorTitle","underline","errorFilePath","getErrorLogFilePath","writeFileSync","folder","ensureDirSync"],"sources":["../../../../src/commands/run/ios/XcodeBuild.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { ExpoRunFormatter } from '@expo/xcpretty';\nimport chalk from 'chalk';\nimport { spawn, SpawnOptionsWithoutStdio } from 'child_process';\nimport * as fs from 'fs-extra';\nimport os from 'os';\nimport * as path from 'path';\nimport { SimControl } from 'xdl';\n\nimport CommandError, { AbortCommandError } from '../../../CommandError';\nimport Log from '../../../log';\nimport { ensureDeviceIsCodeSignedForDeploymentAsync } from './developmentCodeSigning';\nimport { ProjectInfo, XcodeConfiguration } from './resolveOptionsAsync';\n\nexport type BuildProps = {\n  projectRoot: string;\n  isSimulator: boolean;\n  xcodeProject: ProjectInfo;\n  device: Pick<SimControl.XCTraceDevice, 'name' | 'udid'>;\n  configuration: XcodeConfiguration;\n  shouldSkipInitialBundling: boolean;\n  shouldStartBundler: boolean;\n  /** Should use derived data for builds. */\n  buildCache: boolean;\n  terminal?: string;\n  port: number;\n  scheme: string;\n};\n\ntype XcodeSDKName = 'iphoneos' | 'iphonesimulator';\n\nexport function logPrettyItem(message: string) {\n  Log.log(`${chalk.whiteBright`\\u203A`} ${message}`);\n}\n\nexport async function getProjectBuildSettings(\n  xcodeProject: ProjectInfo,\n  configuration: XcodeConfiguration,\n  sdkName: XcodeSDKName,\n  scheme: string\n) {\n  const args = [\n    xcodeProject.isWorkspace ? '-workspace' : '-project',\n    xcodeProject.name,\n    '-scheme',\n    scheme,\n    '-sdk',\n    sdkName,\n    // getPlatformName(buildOutput),\n    '-configuration',\n    configuration,\n    '-showBuildSettings',\n    '-json',\n  ];\n  Log.debug(`  xcodebuild ${args.join(' ')}`);\n  const { stdout } = await spawnAsync('xcodebuild', args, { stdio: 'pipe' });\n  try {\n    return JSON.parse(stdout);\n  } catch (error: any) {\n    // This can fail if the xcodebuild command throws a simulator error:\n    // 2021-01-24 14:22:43.802 xcodebuild[73087:14664906]  DVTAssertions: Warning in /Library/Caches/com.apple.xbs/Sources/DVTiOSFrameworks/DVTiOSFrameworks-17705/DTDeviceKitBase/DTDKRemoteDeviceData.m:371\n    Log.warn(error.message);\n    if (error.message.match(/in JSON at position/)) {\n      Log.log(chalk.dim(stdout));\n    }\n    return {};\n  }\n}\n\n/**\n *\n * @returns '/Users/evanbacon/Library/Developer/Xcode/DerivedData/myapp-gpgjqjodrxtervaufttwnsgimhrx/Build/Products/Debug-iphonesimulator/myapp.app'\n */\nexport function getAppBinaryPath(buildOutput: string) {\n  // Matches what's used in \"Bundle React Native code and images\" script.\n  // Requires that `-hideShellScriptEnvironment` is not included in the build command (extra logs).\n\n  // Like `\\=/Users/evanbacon/Library/Developer/Xcode/DerivedData/Exponent-anpuosnglkxokahjhfszejloqfvo/Build/Products/Debug-iphonesimulator`\n  const CONFIGURATION_BUILD_DIR = extractEnvVariableFromBuild(\n    buildOutput,\n    'CONFIGURATION_BUILD_DIR'\n  ).sort(\n    // Longer name means more suffixes, we want the shortest possible one to be first.\n    // Massive projects (like Expo Go) can sometimes print multiple different sets of environment variables.\n    // This can become an issue with some\n    (a, b) => a.length - b.length\n  );\n  // Like `Exponent.app`\n  const UNLOCALIZED_RESOURCES_FOLDER_PATH = extractEnvVariableFromBuild(\n    buildOutput,\n    'UNLOCALIZED_RESOURCES_FOLDER_PATH'\n  );\n\n  const binaryPath = path.join(\n    // Use the shortest defined env variable (usually there's just one).\n    CONFIGURATION_BUILD_DIR[0],\n    // Use the last defined env variable.\n    UNLOCALIZED_RESOURCES_FOLDER_PATH[UNLOCALIZED_RESOURCES_FOLDER_PATH.length - 1]\n  );\n\n  // If the app has a space in the name it'll fail because it isn't escaped properly by Xcode.\n  return getEscapedPath(binaryPath);\n}\n\nexport function getEscapedPath(filePath: string): string {\n  if (fs.existsSync(filePath)) {\n    return filePath;\n  }\n  const unescapedPath = filePath.split(/\\\\ /).join(' ');\n  if (fs.existsSync(unescapedPath)) {\n    return unescapedPath;\n  }\n  throw new Error(\n    `Unexpected: Generated app at path \"${filePath}\" cannot be read, the app cannot be installed. Please report this and build onto a simulator.`\n  );\n}\n\nfunction extractEnvVariableFromBuild(buildOutput: string, variableName: string) {\n  // Xcode can sometimes escape `=` with a backslash or put the value in quotes\n  const reg = new RegExp(`export ${variableName}\\\\\\\\?=(.*)$`, 'mg');\n  const matched = [...buildOutput.matchAll(reg)];\n\n  if (!matched || !matched.length) {\n    throw new CommandError(\n      `Malformed xcodebuild results: \"${variableName}\" variable was not generated in build output. Please report this issue and run your project with Xcode instead.`\n    );\n  }\n  return matched.map(value => value[1]).filter(Boolean) as string[];\n}\n\nfunction getProcessOptions({\n  packager,\n  shouldSkipInitialBundling,\n  terminal,\n  port,\n}: {\n  packager: boolean;\n  shouldSkipInitialBundling?: boolean;\n  terminal: string | undefined;\n  port: number;\n}): SpawnOptionsWithoutStdio {\n  const SKIP_BUNDLING = shouldSkipInitialBundling ? '1' : undefined;\n  if (packager) {\n    return {\n      env: {\n        ...process.env,\n        RCT_TERMINAL: terminal,\n        SKIP_BUNDLING,\n        RCT_METRO_PORT: port.toString(),\n      },\n    };\n  }\n\n  return {\n    env: {\n      ...process.env,\n      RCT_TERMINAL: terminal,\n      SKIP_BUNDLING,\n      // Always skip launching the packager from a build script.\n      // The script is used for people building their project directly from Xcode.\n      // This essentially means \"â€º Running script 'Start Packager'\" does nothing.\n      RCT_NO_LAUNCH_PACKAGER: 'true',\n      // FORCE_BUNDLING: '0'\n    },\n  };\n}\n\nexport async function buildAsync({\n  projectRoot,\n  xcodeProject,\n  device,\n  configuration,\n  isSimulator,\n  scheme,\n  shouldSkipInitialBundling,\n  terminal,\n  port,\n  buildCache,\n}: BuildProps): Promise<string> {\n  const args = [\n    xcodeProject.isWorkspace ? '-workspace' : '-project',\n    xcodeProject.name,\n    '-configuration',\n    configuration,\n    '-scheme',\n    scheme,\n    '-destination',\n    `id=${device.udid}`,\n  ];\n\n  if (!isSimulator) {\n    const developmentTeamId = await ensureDeviceIsCodeSignedForDeploymentAsync(projectRoot);\n    if (developmentTeamId) {\n      args.push(\n        `DEVELOPMENT_TEAM=${developmentTeamId}`,\n        '-allowProvisioningUpdates',\n        '-allowProvisioningDeviceRegistration'\n      );\n    }\n  }\n\n  // Add last\n  if (buildCache === false) {\n    args.push(\n      // Will first clean the derived data folder.\n      'clean',\n      // Then build step must be added otherwise the process will simply clean and exit.\n      'build'\n    );\n  }\n\n  Log.debug(`  xcodebuild ${args.join(' ')}`);\n\n  logPrettyItem(chalk.bold`Planning build`);\n\n  const formatter = ExpoRunFormatter.create(projectRoot, {\n    xcodeProject,\n    isDebug: Log.isDebug,\n  });\n\n  return new Promise(async (resolve, reject) => {\n    const buildProcess = spawn(\n      'xcodebuild',\n      args,\n      getProcessOptions({ packager: false, shouldSkipInitialBundling, terminal, port })\n    );\n    let buildOutput = '';\n    let errorOutput = '';\n\n    let currentBuffer = '';\n\n    // Data can be sent in chunks that would have no relevance to our regex\n    // this can cause massive slowdowns, so we need to ensure the data is complete before attempting to parse it.\n    function flushBuffer() {\n      if (!currentBuffer) {\n        return;\n      }\n\n      const data = currentBuffer;\n      // Reset buffer.\n      currentBuffer = '';\n      // Process data.\n      const lines = formatter.pipe(data);\n      for (const line of lines) {\n        // Log parsed results.\n        Log.log(line);\n      }\n    }\n\n    buildProcess.stdout.on('data', (data: Buffer) => {\n      const stringData = data.toString();\n      buildOutput += stringData;\n      currentBuffer += stringData;\n      // Only flush the data if we have a full line.\n      if (currentBuffer.endsWith(os.EOL)) {\n        flushBuffer();\n      }\n    });\n\n    buildProcess.stderr.on('data', (data: Buffer) => {\n      const stringData = data instanceof Buffer ? data.toString() : data;\n      errorOutput += stringData;\n    });\n\n    buildProcess.on('close', (code: number) => {\n      // Flush log data at the end just in case we missed something.\n      flushBuffer();\n      Log.debug(`Exited with code: ${code}`);\n\n      if (\n        // User cancelled with ctrl-c\n        code === null ||\n        // Build interrupted\n        code === 75\n      ) {\n        reject(new AbortCommandError());\n        return;\n      }\n\n      Log.log(formatter.getBuildSummary());\n      const logFilePath = writeBuildLogs(projectRoot, buildOutput, errorOutput);\n\n      if (code !== 0) {\n        // Determine if the logger found any errors;\n        const wasErrorPresented = !!formatter.errors.length;\n\n        const errorTitle = `Failed to build iOS project. \"xcodebuild\" exited with error code ${code}.`;\n\n        if (wasErrorPresented) {\n          // This has a flaw, if the user is missing a file, and there is a script error, only the missing file error will be shown.\n          // They will only see the script error if they fix the missing file and rerun.\n          // The flaw can be fixed by catching script errors in the custom logger.\n          reject(new CommandError(errorTitle));\n          return;\n        }\n\n        // Show all the log info because often times the error is coming from a shell script,\n        // that invoked a node script, that started metro, which threw an error.\n        reject(\n          new CommandError(\n            `${errorTitle}\\nTo view more error logs, try building the app with Xcode directly, by opening ${xcodeProject.name}.\\n\\n` +\n              buildOutput +\n              '\\n\\n' +\n              errorOutput +\n              `Build logs written to ${chalk.underline(logFilePath)}`\n          )\n        );\n        return;\n      }\n      resolve(buildOutput);\n    });\n  });\n}\n\nfunction writeBuildLogs(projectRoot: string, buildOutput: string, errorOutput: string) {\n  const [logFilePath, errorFilePath] = getErrorLogFilePath(projectRoot);\n\n  fs.writeFileSync(logFilePath, buildOutput);\n  fs.writeFileSync(errorFilePath, errorOutput);\n  return logFilePath;\n}\n\nfunction getErrorLogFilePath(projectRoot: string): [string, string] {\n  const folder = path.join(projectRoot, '.expo');\n  fs.ensureDirSync(folder);\n  return [path.join(folder, 'xcodebuild.log'), path.join(folder, 'xcodebuild-error.log')];\n}\n"],"mappings":"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"}