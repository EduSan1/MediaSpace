{"version":3,"file":"resolveDeviceAsync.js","names":["getBuildDestinationsAsync","osType","devices","profileMethod","SimControl","listDevicesAsync","filter","device","deviceType","simulators","Simulator","sortDefaultDeviceToBeginningAsync","listSimulatorDevicesAsync","resolveDeviceAsync","ensureXcodeCommandLineToolsInstalledAsync","CommandError","simulator","ensureSimulatorOpenAsync","Log","debug","name","udid","spinner","AppleDevice","isEnabled","ora","chalk","cyan","start","catch","stop","value","prompt","type","limit","message","choices","map","item","isConnected","isActive","state","symbol","format","bold","text","title","osVersion","dim","suggest","input","regex","RegExp","choice","test","log","find","isSimulator","startsWith","searchValue","toLowerCase","resolved"],"sources":["../../../../src/commands/run/ios/resolveDeviceAsync.ts"],"sourcesContent":["import chalk from 'chalk';\nimport { AppleDevice, SimControl, Simulator } from 'xdl';\n\nimport CommandError from '../../../CommandError';\nimport Log from '../../../log';\nimport { ora } from '../../../utils/ora';\nimport prompt from '../../../utils/prompts';\nimport { profileMethod } from '../../utils/profileMethod';\n\nasync function getBuildDestinationsAsync({ osType }: { osType?: string } = {}) {\n  const devices = (\n    await profileMethod(SimControl.listDevicesAsync, 'SimControl.listDevicesAsync')()\n  ).filter(device => {\n    return device.deviceType === 'device';\n  });\n\n  const simulators = await Simulator.sortDefaultDeviceToBeginningAsync(\n    await profileMethod(SimControl.listSimulatorDevicesAsync)(),\n    osType\n  );\n\n  return [...devices, ...simulators];\n}\n\nexport async function resolveDeviceAsync(\n  device?: string | boolean,\n  { osType }: { osType?: string } = {}\n): Promise<SimControl.SimulatorDevice | SimControl.XCTraceDevice> {\n  if (!(await profileMethod(Simulator.ensureXcodeCommandLineToolsInstalledAsync)())) {\n    throw new CommandError('Unable to verify Xcode and Simulator installation.');\n  }\n\n  if (!device) {\n    const simulator = await profileMethod(\n      Simulator.ensureSimulatorOpenAsync,\n      'Simulator.ensureSimulatorOpenAsync'\n    )({ osType });\n    Log.debug(`Resolved default (${osType}) device:`, simulator.name, simulator.udid);\n    return simulator;\n  }\n\n  // Only use the spinner with xctrace since it's so slow (~2s), alternative\n  // method is very fast (~50ms) and the flicker makes it seem slower.\n  const spinner = AppleDevice.isEnabled()\n    ? null\n    : ora(`🔍 Finding ${device === true ? 'devices' : `device ${chalk.cyan(device)}`}`).start();\n  let devices: (SimControl.SimulatorDevice | SimControl.XCTraceDevice)[] = await profileMethod(\n    getBuildDestinationsAsync\n  )({ osType }).catch(() => []);\n\n  spinner?.stop();\n\n  if (device === true) {\n    // If osType is defined, then filter out ineligible simulators.\n    // Only do this inside of the device selection so users who pass the entire device udid can attempt to select any simulator (even if it's invalid).\n    if (osType) {\n      devices = devices.filter(device => {\n        // connected device\n        if (!('osType' in device)) {\n          return true;\n        }\n        return device.osType === osType;\n      });\n    }\n\n    // --device with no props after\n    const { value } = await prompt({\n      type: 'autocomplete',\n      name: 'value',\n      limit: 11,\n      message: 'Select a simulator',\n      choices: devices.map(item => {\n        const isConnected = 'deviceType' in item && item.deviceType === 'device';\n        const isActive = 'state' in item && item.state === 'Booted';\n        const symbol = isConnected ? '🔌 ' : '';\n        const format = isActive ? chalk.bold : (text: string) => text;\n        return {\n          title: `${symbol}${format(item.name)}${\n            item.osVersion ? chalk.dim(` (${item.osVersion})`) : ''\n          }`,\n          value: item.udid,\n        };\n      }),\n      suggest: (input: any, choices: any) => {\n        const regex = new RegExp(input, 'i');\n        return choices.filter((choice: any) => regex.test(choice.title));\n      },\n    });\n    Log.log(chalk.dim`\\u203A Using --device ${value}`);\n    const device = devices.find(device => device.udid === value)!;\n    const isSimulator =\n      !('deviceType' in device) ||\n      device.deviceType.startsWith('com.apple.CoreSimulator.SimDeviceType.');\n    if (isSimulator) {\n      return await Simulator.ensureSimulatorOpenAsync({ udid: device.udid });\n    }\n    return device;\n  }\n  const searchValue = device.toLowerCase();\n  const resolved = devices.find(device => {\n    return device.udid.toLowerCase() === searchValue || device.name.toLowerCase() === searchValue;\n  });\n\n  if (!resolved) {\n    throw new CommandError(`No device UDID or name matching \"${device}\"`);\n  }\n\n  const isSimulator =\n    !('deviceType' in resolved) ||\n    resolved.deviceType.startsWith('com.apple.CoreSimulator.SimDeviceType.');\n  if (isSimulator) {\n    return await Simulator.ensureSimulatorOpenAsync({ udid: resolved.udid });\n  }\n\n  return resolved;\n}\n"],"mappings":"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"}