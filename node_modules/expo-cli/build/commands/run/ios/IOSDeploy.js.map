{"version":3,"file":"IOSDeploy.js","names":["isInstalledAsync","spawnAsync","stdio","installOnDeviceAsync","props","bundle","appDeltaDirectory","udid","deviceName","args","push","Log","debug","join","indicator","copyingFileCount","currentPhase","output","spawnIOSDeployAsync","message","loadingMatch","match","progress","tryParsingNumericValue","text","chalk","bold","startsWith","phaseMatch","phase","trim","PhaseNameMap","copiedMessage","gray","succeed","ora","start","code","fail","error","includes","appName","path","basename","split","program","nonInteractive","Prompts","confirmAsync","initial","CommandError","Install","Debug","Uninstall","str","parseInt","onStdout","Promise","resolve","reject","fork","spawn","errorOutput","stdout","on","data","stringData","toString","os","EOL","line","stderr","Buffer","assertInstalledAsync","cyan","brewInstallAsync","warn","wrapAnsi","process","columns","SilentError"],"sources":["../../../../src/commands/run/ios/IOSDeploy.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport { spawn } from 'child_process';\nimport program from 'commander';\nimport { Ora } from 'ora';\nimport os from 'os';\nimport path from 'path';\nimport wrapAnsi from 'wrap-ansi';\nimport { Prompts } from 'xdl';\n\nimport CommandError, { SilentError } from '../../../CommandError';\nimport Log from '../../../log';\nimport { ora } from '../../../utils/ora';\n\nexport async function isInstalledAsync() {\n  try {\n    await spawnAsync('ios-deploy', ['--version'], { stdio: 'ignore' });\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function installOnDeviceAsync(props: {\n  bundle: string;\n  appDeltaDirectory?: string;\n  udid: string;\n  deviceName: string;\n}): Promise<void> {\n  const { bundle, appDeltaDirectory, udid, deviceName } = props;\n  const args = [\n    '--bundle',\n    bundle,\n    '--id',\n    udid,\n    '--justlaunch',\n    // Wifi devices tend to stall and never resolve\n    '--no-wifi',\n  ];\n  if (appDeltaDirectory) {\n    args.push('--app_deltas', appDeltaDirectory);\n  }\n  // TODO: Attach LLDB debugger for native logs\n  // '--debug'\n\n  Log.debug(`  ios-deploy ${args.join(' ')}`);\n\n  let indicator: Ora | undefined;\n  let copyingFileCount = 0;\n  let currentPhase: string | undefined;\n  const output = await spawnIOSDeployAsync(args, message => {\n    const loadingMatch = message.match(/\\[(.*?)\\] (.*)/m);\n    if (loadingMatch) {\n      const progress = tryParsingNumericValue(loadingMatch[1]);\n      const message = loadingMatch[2];\n      if (indicator) {\n        indicator.text = `${chalk.bold(currentPhase)} ${progress}%`;\n      }\n      if (message.startsWith('Copying ')) {\n        copyingFileCount++;\n      }\n      return;\n    }\n    // Install, Debug, Uninstall\n    const phaseMatch = message.match(/------\\s(\\w+) phase\\s------/m);\n    if (phaseMatch) {\n      let phase = phaseMatch[1]?.trim?.();\n      // Remap name\n      phase = PhaseNameMap[phase] ?? phase;\n\n      if (indicator) {\n        if (currentPhase === 'Installing') {\n          const copiedMessage = chalk.gray`Copied ${copyingFileCount} file(s)`;\n          // Emulate Xcode copy file count, this helps us know if app deltas are working.\n          indicator.succeed(`${chalk.bold('Installed')} ${copiedMessage}`);\n        } else {\n          indicator.succeed();\n        }\n      }\n      indicator = ora(phase).start();\n      currentPhase = phase;\n      return;\n    }\n    Log.debug(message);\n  });\n\n  if (output.code !== 0) {\n    if (indicator) {\n      indicator.fail();\n    }\n    // Allow users to unlock their phone and try the launch over again.\n    if (output.error.includes('The device is locked')) {\n      // Get the app name from the binary path.\n      const appName = path.basename(bundle).split('.')[0] ?? 'app';\n      if (\n        !program.nonInteractive &&\n        (await Prompts.confirmAsync({\n          message: `Cannot launch ${appName} because the device is locked. Unlock ${deviceName} to continue...`,\n          initial: true,\n        }))\n      ) {\n        return installOnDeviceAsync(props);\n      } else {\n        throw new CommandError(\n          `Cannot launch ${appName} on ${deviceName} because the device is locked.`\n        );\n      }\n    }\n    throw new CommandError(\n      `Failed to install the app on device. Error in \"ios-deploy\" command: ${output.error}`\n    );\n  } else {\n    if (indicator) {\n      if (currentPhase === 'Launching') {\n        indicator.succeed(`${chalk.bold`Launched`} ${chalk.gray(`on ${deviceName}`)}`);\n      } else {\n        indicator.succeed();\n      }\n    }\n  }\n}\n\nconst PhaseNameMap: Record<string, string> = {\n  Install: 'Installing',\n  Debug: 'Launching',\n  Uninstall: 'Uninstalling',\n};\n\nfunction tryParsingNumericValue(str?: string): number | null {\n  try {\n    return parseInt(str?.match(/\\d+/)?.[0] ?? '-1', 10);\n  } catch {\n    return -1;\n  }\n}\n\nfunction spawnIOSDeployAsync(args: string[], onStdout: (message: string) => void) {\n  return new Promise<{ output: string; error: string; code: number }>(async (resolve, reject) => {\n    const fork = spawn('ios-deploy', args);\n    let output = '';\n    let errorOutput = '';\n    fork.stdout.on('data', (data: Buffer) => {\n      const stringData = data.toString().split(os.EOL);\n      for (let line of stringData) {\n        line = line.trim();\n        if (!line) continue;\n        if (line.match(/Error: /)) {\n          errorOutput = line;\n        } else {\n          output += line;\n          onStdout(line);\n        }\n      }\n    });\n\n    fork.stderr.on('data', (data: Buffer) => {\n      const stringData = data instanceof Buffer ? data.toString() : data;\n      errorOutput += stringData;\n    });\n\n    fork.on('close', (code: number) => {\n      resolve({ output, error: errorOutput, code });\n    });\n  });\n}\n\nexport async function assertInstalledAsync() {\n  if (!(await isInstalledAsync())) {\n    if (\n      await Prompts.confirmAsync({\n        message: `Required package ${chalk.cyan`ios-deploy`} is not installed, would you like to try installing it with homebrew?`,\n        initial: true,\n      })\n    ) {\n      try {\n        await brewInstallAsync();\n        return;\n      } catch (error: any) {\n        Log.error(`Failed to install ${chalk.bold`ios-deploy`} with homebrew: ${error.message}`);\n      }\n    }\n    // Controlled error message.\n    const error = `Cannot install iOS apps on devices without ${chalk.bold`ios-deploy`} installed globally. Please install it with ${chalk.bold`brew install ios-deploy`} and try again, or build the app with a simulator.`;\n    Log.warn(wrapAnsi(error, process.stdout.columns || 80));\n    throw new SilentError(error);\n  }\n}\n\nasync function brewInstallAsync() {\n  await spawnAsync('brew', ['install', 'ios-deploy'], {\n    stdio: 'inherit',\n  });\n}\n"],"mappings":"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"}