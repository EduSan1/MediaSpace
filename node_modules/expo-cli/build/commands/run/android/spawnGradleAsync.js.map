{"version":3,"file":"spawnGradleAsync.js","names":["upperFirst","name","charAt","toUpperCase","slice","formatGradleArguments","cmd","appName","variant","tasks","map","task","resolveGradleWPath","androidProjectPath","path","join","process","platform","getPortArg","port","assembleAsync","args","push","Log","isProfiling","spawnGradleAsync","installAsync","projectRoot","gradlew","debug","spawnAsync","cwd","stdio","error","status","AbortCommandError"],"sources":["../../../../src/commands/run/android/spawnGradleAsync.ts"],"sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport path from 'path';\n\nimport { AbortCommandError } from '../../../CommandError';\nimport Log from '../../../log';\n\nfunction upperFirst(name: string) {\n  return name.charAt(0).toUpperCase() + name.slice(1);\n}\n\nfunction formatGradleArguments(\n  cmd: 'assemble' | 'install',\n  {\n    appName,\n    variant,\n    tasks = [cmd + upperFirst(variant)],\n  }: { tasks?: string[]; variant: string; appName: string }\n) {\n  return appName ? tasks.map(task => `${appName}:${task}`) : tasks;\n}\n\nfunction resolveGradleWPath(androidProjectPath: string): string {\n  return path.join(androidProjectPath, process.platform === 'win32' ? 'gradlew.bat' : 'gradlew');\n}\n\nfunction getPortArg(port: number) {\n  return `-PreactNativeDevServerPort=${port}`;\n}\n\nexport async function assembleAsync({\n  androidProjectPath,\n  variant,\n  port,\n  appName,\n}: {\n  androidProjectPath: string;\n  variant: string;\n  port?: number;\n  appName: string;\n}) {\n  const task = formatGradleArguments('assemble', { variant, appName });\n  const args = [\n    ...task,\n    // ignore linting errors\n    '-x',\n    'lint',\n    // ignore tests\n    '-x',\n    'test',\n    '--configure-on-demand',\n  ];\n  if (port) args.push(getPortArg(port));\n\n  // Generate a profile under `/android/app/build/reports/profile`\n  if (Log.isProfiling) args.push('--profile');\n\n  return await spawnGradleAsync(androidProjectPath, { port, args });\n}\n\nexport async function installAsync({\n  androidProjectPath,\n  variant,\n  appName,\n  port,\n}: {\n  androidProjectPath: string;\n  variant: string;\n  appName: string;\n  port?: number;\n}) {\n  const args = formatGradleArguments('install', { variant, appName });\n  return await spawnGradleAsync(androidProjectPath, { port, args });\n}\n\nexport async function spawnGradleAsync(\n  projectRoot: string,\n  { port, args }: { port?: number; args: string[] }\n) {\n  const gradlew = resolveGradleWPath(projectRoot);\n  if (port) args.push(getPortArg(port));\n  Log.debug(`  ${gradlew} ${args.join(' ')}`);\n  try {\n    return await spawnAsync(gradlew, args, {\n      cwd: projectRoot,\n      stdio: 'inherit',\n    });\n  } catch (error: any) {\n    // User aborted the command with ctrl-c\n    if (error.status === 130) {\n      // Fail silently\n      throw new AbortCommandError();\n    }\n    throw error;\n  }\n}\n"],"mappings":"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"}