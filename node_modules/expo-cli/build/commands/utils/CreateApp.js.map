{"version":3,"file":"CreateApp.js","names":["validateName","name","test","FORBIDDEN_NAMES","isFolderNameForbidden","folderName","includes","TOLERABLE_FILES","getConflictsForDirectory","projectRoot","tolerableFiles","fs","readdirSync","filter","file","assertFolderEmptyAsync","path","dirname","overwrite","conflicts","length","Log","addNewLineIfNone","nested","chalk","green","newLine","Promise","all","map","conflict","remove","join","resolvePackageManager","options","packageManager","yarn","npm","PackageManager","shouldUseYarn","install","log","dim","EXPO_DEBUG","getenv","boolish","installNodeDependenciesAsync","flags","silent","cwd","YarnPackageManager","version","versionAsync","nodeLinker","getConfigAsync","semver","satisfies","yarnRc","yamlString","readFileSync","error","code","config","yaml","safeLoad","warn","writeFileSync","safeDump","installAsync","NpmPackageManager","getChangeDirectoryPath","cdPath","relative","process","installCocoaPodsAsync","step","logNewSection","platform","succeed","CocoaPodsPackageManager","isCLIInstalledAsync","text","stopAndPersist","installCLIAsync","nonInteractive","spawnOptions","stdio","e","symbol","red","CocoaPodsError","message","spinner","hasPackageJsonDependencyListChangedAsync","catch"],"sources":["../../../src/commands/utils/CreateApp.ts"],"sourcesContent":["import * as PackageManager from '@expo/package-manager';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport yaml from 'js-yaml';\nimport * as path from 'path';\nimport semver from 'semver';\n\nimport Log from '../../log';\nimport { logNewSection } from '../../utils/ora';\nimport { hasPackageJsonDependencyListChangedAsync } from '../run/ios/Podfile';\n\nexport function validateName(name?: string): string | true {\n  if (typeof name !== 'string' || name === '') {\n    return 'The project name can not be empty.';\n  }\n  if (!/^[a-z0-9@.\\-_]+$/i.test(name)) {\n    return 'The project name can only contain URL-friendly characters (alphanumeric and @ . -  _)';\n  }\n  return true;\n}\n\nconst FORBIDDEN_NAMES = ['react-native', 'react', 'react-dom', 'react-native-web', 'expo'];\n\nexport function isFolderNameForbidden(folderName: string): boolean {\n  return FORBIDDEN_NAMES.includes(folderName);\n}\n\n// Any of these files are allowed to exist in the projectRoot\nconst TOLERABLE_FILES = [\n  // System\n  '.DS_Store',\n  'Thumbs.db',\n  // Git\n  '.git',\n  '.gitattributes',\n  '.gitignore',\n  // Project\n  '.npmignore',\n  '.travis.yml',\n  'LICENSE',\n  'docs',\n  '.idea',\n  // Package manager\n  'npm-debug.log',\n  'yarn-debug.log',\n  'yarn-error.log',\n];\n\nexport function getConflictsForDirectory(\n  projectRoot: string,\n  tolerableFiles: string[] = TOLERABLE_FILES\n): string[] {\n  return fs\n    .readdirSync(projectRoot)\n    .filter((file: string) => !(/\\.iml$/.test(file) || tolerableFiles.includes(file)));\n}\n\nexport async function assertFolderEmptyAsync({\n  projectRoot,\n  folderName = path.dirname(projectRoot),\n  overwrite,\n}: {\n  projectRoot: string;\n  folderName?: string;\n  overwrite: boolean;\n}): Promise<boolean> {\n  const conflicts = getConflictsForDirectory(projectRoot);\n  if (conflicts.length) {\n    Log.addNewLineIfNone();\n    Log.nested(`The directory ${chalk.green(folderName)} has files that might be overwritten:`);\n    Log.newLine();\n    for (const file of conflicts) {\n      Log.nested(`  ${file}`);\n    }\n\n    if (overwrite) {\n      Log.newLine();\n      Log.nested(`Removing existing files from ${chalk.green(folderName)}`);\n      await Promise.all(conflicts.map(conflict => fs.remove(path.join(projectRoot, conflict))));\n      return true;\n    }\n\n    return false;\n  }\n  return true;\n}\n\nexport type PackageManagerName = 'npm' | 'yarn';\n\nexport function resolvePackageManager(options: {\n  yarn?: boolean;\n  npm?: boolean;\n  install?: boolean;\n}): PackageManagerName {\n  let packageManager: PackageManagerName = 'npm';\n  if (options.yarn || (!options.npm && PackageManager.shouldUseYarn())) {\n    packageManager = 'yarn';\n  } else {\n    packageManager = 'npm';\n  }\n  if (options.install) {\n    Log.log(\n      packageManager === 'yarn'\n        ? `üß∂ Using Yarn to install packages. ${chalk.dim('Pass --npm to use npm instead.')}`\n        : 'üì¶ Using npm to install packages.'\n    );\n  }\n\n  return packageManager;\n}\n\nconst EXPO_DEBUG = getenv.boolish('EXPO_DEBUG', false);\n\nexport async function installNodeDependenciesAsync(\n  projectRoot: string,\n  packageManager: PackageManagerName,\n  flags: { silent: boolean } = {\n    // default to silent\n    silent: !EXPO_DEBUG,\n  }\n) {\n  const options = { cwd: projectRoot, silent: flags.silent };\n  if (packageManager === 'yarn') {\n    const yarn = new PackageManager.YarnPackageManager(options);\n    const version = await yarn.versionAsync();\n    const nodeLinker = await yarn.getConfigAsync('nodeLinker');\n    if (semver.satisfies(version, '>=2.0.0-rc.24') && nodeLinker !== 'node-modules') {\n      const yarnRc = path.join(projectRoot, '.yarnrc.yml');\n      let yamlString = '';\n      try {\n        yamlString = fs.readFileSync(yarnRc, 'utf8');\n      } catch (error: any) {\n        if (error.code !== 'ENOENT') {\n          throw error;\n        }\n      }\n      const config = yamlString ? yaml.safeLoad(yamlString) : {};\n      config.nodeLinker = 'node-modules';\n      !flags.silent &&\n        Log.warn(\n          `Yarn v${version} detected, enabling experimental Yarn v2 support using the node-modules plugin.`\n        );\n      !flags.silent && Log.log(`Writing ${yarnRc}...`);\n      fs.writeFileSync(yarnRc, yaml.safeDump(config));\n    }\n    await yarn.installAsync();\n  } else {\n    await new PackageManager.NpmPackageManager(options).installAsync();\n  }\n}\n\nexport function getChangeDirectoryPath(projectRoot: string): string {\n  const cdPath = path.relative(process.cwd(), projectRoot);\n  if (cdPath.length <= projectRoot.length) {\n    return cdPath;\n  }\n  return projectRoot;\n}\n\nexport async function installCocoaPodsAsync(projectRoot: string) {\n  let step = logNewSection('Installing CocoaPods...');\n  if (process.platform !== 'darwin') {\n    step.succeed('Skipped installing CocoaPods because operating system is not on macOS.');\n    return false;\n  }\n\n  const packageManager = new PackageManager.CocoaPodsPackageManager({\n    cwd: path.join(projectRoot, 'ios'),\n    silent: !EXPO_DEBUG,\n  });\n\n  if (!(await packageManager.isCLIInstalledAsync())) {\n    try {\n      // prompt user -- do you want to install cocoapods right now?\n      step.text = 'CocoaPods CLI not found in your PATH, installing it now.';\n      step.stopAndPersist();\n      await PackageManager.CocoaPodsPackageManager.installCLIAsync({\n        nonInteractive: true,\n        spawnOptions: {\n          ...packageManager.options,\n          // Don't silence this part\n          stdio: ['inherit', 'inherit', 'pipe'],\n        },\n      });\n      step.succeed('Installed CocoaPods CLI.');\n      step = logNewSection('Running `pod install` in the `ios` directory.');\n    } catch (e: any) {\n      step.stopAndPersist({\n        symbol: '‚ö†Ô∏è ',\n        text: chalk.red('Unable to install the CocoaPods CLI.'),\n      });\n      if (e instanceof PackageManager.CocoaPodsError) {\n        Log.log(e.message);\n      } else {\n        Log.log(`Unknown error: ${e.message}`);\n      }\n      return false;\n    }\n  }\n\n  try {\n    await packageManager.installAsync({ spinner: step });\n    // Create cached list for later\n    await hasPackageJsonDependencyListChangedAsync(projectRoot).catch(() => null);\n    step.succeed('Installed pods and initialized Xcode workspace.');\n    return true;\n  } catch (e: any) {\n    step.stopAndPersist({\n      symbol: '‚ö†Ô∏è ',\n      text: chalk.red('Something went wrong running `pod install` in the `ios` directory.'),\n    });\n    if (e instanceof PackageManager.CocoaPodsError) {\n      Log.log(e.message);\n    } else {\n      Log.log(`Unknown error: ${e.message}`);\n    }\n    return false;\n  }\n}\n"],"mappings":"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"}