{"version":3,"file":"Tar.js","names":["pipeline","promisify","stream","downloadAndDecompressAsync","url","destination","downloadStream","got","on","createProgressTracker","tar","extract","cwd"],"sources":["../../../src/commands/utils/Tar.ts"],"sourcesContent":["import got from 'got';\nimport stream from 'stream';\nimport tar from 'tar';\nimport { promisify } from 'util';\n\nimport { createProgressTracker } from './progress';\n\nconst pipeline = promisify(stream.pipeline);\n\n/**\n * Download a tar.gz file and extract it to a folder.\n *\n * @param url remote URL to download.\n * @param destination destination folder to extract the tar to.\n */\nexport async function downloadAndDecompressAsync(\n  url: string,\n  destination: string\n): Promise<string> {\n  const downloadStream = got.stream(url).on('downloadProgress', createProgressTracker());\n\n  await pipeline(downloadStream, tar.extract({ cwd: destination }));\n  return destination;\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA,MAAMA,QAAQ,GAAG,IAAAC,iBAAA,EAAUC,iBAAA,CAAOF,QAAjB,CAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACO,eAAeG,0BAAf,CACLC,GADK,EAELC,WAFK,EAGY;EACjB,MAAMC,cAAc,GAAGC,cAAA,CAAIL,MAAJ,CAAWE,GAAX,EAAgBI,EAAhB,CAAmB,kBAAnB,EAAuC,IAAAC,iCAAA,GAAvC,CAAvB;;EAEA,MAAMT,QAAQ,CAACM,cAAD,EAAiBI,cAAA,CAAIC,OAAJ,CAAY;IAAEC,GAAG,EAAEP;EAAP,CAAZ,CAAjB,CAAd;EACA,OAAOA,WAAP;AACD"}