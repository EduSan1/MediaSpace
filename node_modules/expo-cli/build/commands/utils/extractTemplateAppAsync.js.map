{"version":3,"file":"extractTemplateAppAsync.js","names":["extractAndPrepareTemplateAppAsync","npmPackageName","projectRoot","config","name","expo","downloadAndExtractNpmModuleAsync","cwd","appFile","JsonFile","path","join","appJson","merge","readAsync","writeAsync","preparePackageJsonAsync","appName","packageFile","packageJson","description","tags","repository","sanitizeNpmPackageName","version","private"],"sources":["../../../src/commands/utils/extractTemplateAppAsync.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport JsonFile from '@expo/json-file';\nimport merge from 'lodash/merge';\nimport path from 'path';\n\nimport { downloadAndExtractNpmModuleAsync, sanitizeNpmPackageName } from './npm';\n\n/**\n * Extract a template app to a given file path and clean up any properties left over from npm to\n * prepare it for usage.\n */\nexport async function extractAndPrepareTemplateAppAsync(\n  npmPackageName: string,\n  projectRoot: string,\n  config: { expo: Partial<ExpoConfig>; name?: string }\n) {\n  const name = config.name ?? config.expo.name ?? 'app';\n\n  await downloadAndExtractNpmModuleAsync(npmPackageName, {\n    cwd: projectRoot,\n    name,\n  });\n\n  const appFile = new JsonFile(path.join(projectRoot, 'app.json'));\n  const appJson = merge(await appFile.readAsync(), config);\n  await appFile.writeAsync(appJson);\n\n  await preparePackageJsonAsync(projectRoot, name);\n\n  return projectRoot;\n}\n\n/** Modify the template package.json, removing any extra fields and adding known properties. */\nasync function preparePackageJsonAsync(projectRoot: string, appName: string) {\n  const packageFile = new JsonFile(path.join(projectRoot, 'package.json'));\n  const packageJson = await packageFile.readAsync();\n\n  // Remove unused properties from package.json first.\n  delete packageJson.description;\n  delete packageJson.tags;\n  delete packageJson.repository;\n\n  // name and version are required for yarn workspaces (monorepos)\n  packageJson.name = sanitizeNpmPackageName(appName);\n  // These are metadata fields related to the template package, let's remove them from the package.json.\n  // A good place to start\n  packageJson.version = '1.0.0';\n  packageJson.private = true;\n\n  await packageFile.writeAsync(packageJson);\n}\n"],"mappings":";;;;;;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA;AACA;AACA;AACA;AACO,eAAeA,iCAAf,CACLC,cADK,EAELC,WAFK,EAGLC,MAHK,EAIL;EAAA;;EACA,MAAMC,IAAI,2BAAGD,MAAM,CAACC,IAAV,uDAAkBD,MAAM,CAACE,IAAP,CAAYD,IAA9B,uCAAsC,KAAhD;EAEA,MAAM,IAAAE,uCAAA,EAAiCL,cAAjC,EAAiD;IACrDM,GAAG,EAAEL,WADgD;IAErDE;EAFqD,CAAjD,CAAN;EAKA,MAAMI,OAAO,GAAG,KAAIC,mBAAJ,EAAaC,eAAA,CAAKC,IAAL,CAAUT,WAAV,EAAuB,UAAvB,CAAb,CAAhB;EACA,MAAMU,OAAO,GAAG,IAAAC,gBAAA,EAAM,MAAML,OAAO,CAACM,SAAR,EAAZ,EAAiCX,MAAjC,CAAhB;EACA,MAAMK,OAAO,CAACO,UAAR,CAAmBH,OAAnB,CAAN;EAEA,MAAMI,uBAAuB,CAACd,WAAD,EAAcE,IAAd,CAA7B;EAEA,OAAOF,WAAP;AACD;AAED;;;AACA,eAAec,uBAAf,CAAuCd,WAAvC,EAA4De,OAA5D,EAA6E;EAC3E,MAAMC,WAAW,GAAG,KAAIT,mBAAJ,EAAaC,eAAA,CAAKC,IAAL,CAAUT,WAAV,EAAuB,cAAvB,CAAb,CAApB;EACA,MAAMiB,WAAW,GAAG,MAAMD,WAAW,CAACJ,SAAZ,EAA1B,CAF2E,CAI3E;;EACA,OAAOK,WAAW,CAACC,WAAnB;EACA,OAAOD,WAAW,CAACE,IAAnB;EACA,OAAOF,WAAW,CAACG,UAAnB,CAP2E,CAS3E;;EACAH,WAAW,CAACf,IAAZ,GAAmB,IAAAmB,6BAAA,EAAuBN,OAAvB,CAAnB,CAV2E,CAW3E;EACA;;EACAE,WAAW,CAACK,OAAZ,GAAsB,OAAtB;EACAL,WAAW,CAACM,OAAZ,GAAsB,IAAtB;EAEA,MAAMP,WAAW,CAACH,UAAZ,CAAuBI,WAAvB,CAAN;AACD"}