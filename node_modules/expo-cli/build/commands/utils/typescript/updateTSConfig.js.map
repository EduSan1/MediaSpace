{"version":3,"file":"updateTSConfig.js","names":["TS_FEATURE_FLAG","isTypeScriptSetupDisabled","boolish","updateTSConfigAsync","projectRoot","tsConfigPath","isBootstrapping","JsonFile","writeAsync","projectTSConfig","read","json5","compilerOptions","modifications","hasTemplateTsconfig","resolveBaseTSConfig","extends","baseTSConfigName","push","jsx","target","lib","allowJs","skipLibCheck","noEmit","allowSyntheticDefaultImports","resolveJsonModule","esModuleInterop","moduleResolution","length","Log","addNewLineIfNone","log","chalk","bold","cyan","dim","logModifications","newLine","printTable","sort","a","b","items","tableFormat","name","msg","key","value"],"sources":["../../../../src/commands/utils/typescript/updateTSConfig.ts"],"sourcesContent":["import JsonFile from '@expo/json-file';\nimport chalk from 'chalk';\nimport { boolish } from 'getenv';\n\nimport Log from '../../../log';\nimport { baseTSConfigName, resolveBaseTSConfig } from './resolveModules';\n\nconst TS_FEATURE_FLAG = 'EXPO_NO_TYPESCRIPT_SETUP';\n\nexport const isTypeScriptSetupDisabled = boolish(TS_FEATURE_FLAG, false);\n\nexport async function updateTSConfigAsync({\n  projectRoot,\n  tsConfigPath,\n  isBootstrapping,\n}: {\n  projectRoot: string;\n  tsConfigPath: string;\n  isBootstrapping: boolean;\n}): Promise<void> {\n  if (isBootstrapping) {\n    await JsonFile.writeAsync(tsConfigPath, {});\n  }\n\n  const projectTSConfig = JsonFile.read(tsConfigPath, {\n    // Some tsconfig.json files have a generated comment in the file.\n    json5: true,\n  });\n  if (projectTSConfig.compilerOptions == null) {\n    projectTSConfig.compilerOptions = {};\n    isBootstrapping = true;\n  }\n\n  const modifications: [string, string][] = [];\n\n  // If the default TSConfig template exists (SDK +41), then use it in the project\n  const hasTemplateTsconfig = resolveBaseTSConfig(projectRoot);\n  if (hasTemplateTsconfig) {\n    // If the extends field isn't defined, set it to the expo default\n    if (!projectTSConfig.extends) {\n      // if (projectTSConfig.extends !== baseTSConfigName) {\n      projectTSConfig.extends = baseTSConfigName;\n      modifications.push(['extends', baseTSConfigName]);\n    }\n  } else if (isBootstrapping) {\n    // use an unversioned config when the versioned config cannot be resolved\n    projectTSConfig.compilerOptions = {\n      jsx: 'react-native',\n      target: 'esnext',\n      lib: ['esnext'],\n      allowJs: true,\n      skipLibCheck: true,\n      noEmit: true,\n      allowSyntheticDefaultImports: true,\n      resolveJsonModule: true,\n      esModuleInterop: true,\n      moduleResolution: 'node',\n    };\n    modifications.push(['compilerOptions', 'configured']);\n  }\n\n  // If no changes, then quietly bail out\n  if (!modifications.length) {\n    return;\n  }\n\n  // Write changes and log out a summary of what changed\n  await JsonFile.writeAsync(tsConfigPath, projectTSConfig);\n\n  Log.addNewLineIfNone();\n\n  if (isBootstrapping) {\n    Log.log(`${chalk.bold`TypeScript`}: A ${chalk.cyan('tsconfig.json')} has been auto-generated`);\n  } else {\n    Log.log(\n      `${chalk.bold`TypeScript`}: The ${chalk.cyan(\n        'tsconfig.json'\n      )} has been updated ${chalk.dim`(Use ${TS_FEATURE_FLAG} to skip)`}`\n    );\n    logModifications(modifications);\n  }\n  Log.newLine();\n}\n\nfunction logModifications(modifications: string[][]) {\n  Log.newLine();\n\n  Log.log(\n    `\\u203A ${chalk.bold('Required')} modifications made to the ${chalk.cyan('tsconfig.json')}:`\n  );\n\n  Log.newLine();\n\n  // Sort the items based on key name length\n  printTable(modifications.sort((a, b) => a[0].length - b[0].length));\n\n  Log.newLine();\n}\n\nfunction printTable(items: string[][]) {\n  const tableFormat = (name: string, msg: string) =>\n    `  ${chalk.bold`${name}`} is now ${chalk.cyan(msg)}`;\n  for (const [key, value] of items) {\n    Log.log(tableFormat(key, value));\n  }\n}\n"],"mappings":"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"}