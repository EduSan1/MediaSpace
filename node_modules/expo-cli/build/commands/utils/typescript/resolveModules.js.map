{"version":3,"file":"resolveModules.js","names":["fileExistsAsync","file","stat","catch","isFile","requiredPackages","pkg","baseTSConfigName","queryFirstProjectTypeScriptFileAsync","projectRoot","results","wrapGlobWithTimeout","everyMatchAsync","cwd","ignore","resolveBaseTSConfig","resolveFrom","silent","hasTSConfig","tsConfigPath","path","join","collectMissingPackages","resolutions","missingPackages","filter","p","missing"],"sources":["../../../../src/commands/utils/typescript/resolveModules.ts"],"sourcesContent":["import { stat } from 'fs-extra';\nimport * as path from 'path';\nimport resolveFrom from 'resolve-from';\n\nimport { everyMatchAsync, wrapGlobWithTimeout } from '../glob';\n\nasync function fileExistsAsync(file: string): Promise<boolean> {\n  return (await stat(file).catch(() => null))?.isFile() ?? false;\n}\n\nconst requiredPackages = [\n  // use typescript/package.json to skip node module cache issues when the user installs\n  // the package and attempts to resolve the module in the same process.\n  { file: 'typescript/package.json', pkg: 'typescript' },\n  { file: '@types/react/package.json', pkg: '@types/react' },\n  { file: '@types/react-native/package.json', pkg: '@types/react-native' },\n];\n\nexport const baseTSConfigName = 'expo/tsconfig.base';\n\nexport async function queryFirstProjectTypeScriptFileAsync(\n  projectRoot: string\n): Promise<null | string> {\n  const results = await wrapGlobWithTimeout(\n    () =>\n      everyMatchAsync('**/*.@(ts|tsx)', {\n        cwd: projectRoot,\n        ignore: [\n          '**/@(Carthage|Pods|node_modules)/**',\n          '**/*.d.ts',\n          '@(ios|android|web|web-build|dist)/**',\n        ],\n      }),\n    5000\n  );\n\n  if (results === false) {\n    return null;\n  }\n  return results[0] ?? null;\n}\n\nexport function resolveBaseTSConfig(projectRoot: string): string | null {\n  return resolveFrom.silent(projectRoot, 'expo/tsconfig.base.json') ?? null;\n}\n\nexport async function hasTSConfig(projectRoot: string): Promise<string | null> {\n  const tsConfigPath = path.join(projectRoot, 'tsconfig.json');\n  if (await fileExistsAsync(tsConfigPath)) {\n    return tsConfigPath;\n  }\n  return null;\n}\n\nexport function collectMissingPackages(\n  projectRoot: string\n): {\n  missing: {\n    file: string;\n    pkg: string;\n    version?: string;\n  }[];\n  resolutions: Record<string, string>;\n} {\n  const resolutions: Record<string, string> = {};\n\n  const missingPackages = requiredPackages.filter(p => {\n    try {\n      resolutions[p.pkg] = resolveFrom(projectRoot, p.file);\n      return false;\n    } catch {\n      return true;\n    }\n  });\n\n  return { missing: missingPackages, resolutions };\n}\n"],"mappings":";;;;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AAEA,eAAeA,eAAf,CAA+BC,IAA/B,EAA+D;EAAA;;EAC7D,qDAAQ,MAAM,IAAAC,eAAA,EAAKD,IAAL,EAAWE,KAAX,CAAiB,MAAM,IAAvB,CAAd,sDAAO,kBAAsCC,MAAtC,EAAP,yEAAyD,KAAzD;AACD;;AAED,MAAMC,gBAAgB,GAAG,CACvB;AACA;AACA;EAAEJ,IAAI,EAAE,yBAAR;EAAmCK,GAAG,EAAE;AAAxC,CAHuB,EAIvB;EAAEL,IAAI,EAAE,2BAAR;EAAqCK,GAAG,EAAE;AAA1C,CAJuB,EAKvB;EAAEL,IAAI,EAAE,kCAAR;EAA4CK,GAAG,EAAE;AAAjD,CALuB,CAAzB;AAQO,MAAMC,gBAAgB,GAAG,oBAAzB;;;AAEA,eAAeC,oCAAf,CACLC,WADK,EAEmB;EAAA;;EACxB,MAAMC,OAAO,GAAG,MAAM,IAAAC,2BAAA,EACpB,MACE,IAAAC,uBAAA,EAAgB,gBAAhB,EAAkC;IAChCC,GAAG,EAAEJ,WAD2B;IAEhCK,MAAM,EAAE,CACN,qCADM,EAEN,WAFM,EAGN,sCAHM;EAFwB,CAAlC,CAFkB,EAUpB,IAVoB,CAAtB;;EAaA,IAAIJ,OAAO,KAAK,KAAhB,EAAuB;IACrB,OAAO,IAAP;EACD;;EACD,oBAAOA,OAAO,CAAC,CAAD,CAAd,iDAAqB,IAArB;AACD;;AAEM,SAASK,mBAAT,CAA6BN,WAA7B,EAAiE;EAAA;;EACtE,8BAAOO,sBAAA,CAAYC,MAAZ,CAAmBR,WAAnB,EAAgC,yBAAhC,CAAP,qEAAqE,IAArE;AACD;;AAEM,eAAeS,WAAf,CAA2BT,WAA3B,EAAwE;EAC7E,MAAMU,YAAY,GAAGC,IAAI,GAACC,IAAL,CAAUZ,WAAV,EAAuB,eAAvB,CAArB;;EACA,IAAI,MAAMT,eAAe,CAACmB,YAAD,CAAzB,EAAyC;IACvC,OAAOA,YAAP;EACD;;EACD,OAAO,IAAP;AACD;;AAEM,SAASG,sBAAT,CACLb,WADK,EASL;EACA,MAAMc,WAAmC,GAAG,EAA5C;EAEA,MAAMC,eAAe,GAAGnB,gBAAgB,CAACoB,MAAjB,CAAwBC,CAAC,IAAI;IACnD,IAAI;MACFH,WAAW,CAACG,CAAC,CAACpB,GAAH,CAAX,GAAqB,IAAAU,sBAAA,EAAYP,WAAZ,EAAyBiB,CAAC,CAACzB,IAA3B,CAArB;MACA,OAAO,KAAP;IACD,CAHD,CAGE,MAAM;MACN,OAAO,IAAP;IACD;EACF,CAPuB,CAAxB;EASA,OAAO;IAAE0B,OAAO,EAAEH,eAAX;IAA4BD;EAA5B,CAAP;AACD"}