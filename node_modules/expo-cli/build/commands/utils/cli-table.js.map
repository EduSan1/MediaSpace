{"version":3,"file":"cli-table.js","names":["printTableJsonArray","headers","jsonArray","colWidths","table","CliTable","head","forEach","json","push","map","header","toString","VERTICAL_CELL_WIDTH","printTableJson","header1","header2","Object","entries","key","value","JSON","stringify","String","replace","RegExp"],"sources":["../../../src/commands/utils/cli-table.ts"],"sourcesContent":["import { JSONObject } from '@expo/json-file';\nimport CliTable, { CellValue } from 'cli-table3';\n\nexport function printTableJsonArray(\n  headers: string[],\n  jsonArray: { [key: string]: CellValue }[],\n  colWidths: number[]\n): string {\n  const table = new CliTable({\n    head: headers,\n    colWidths,\n  });\n\n  jsonArray.forEach(json => {\n    table.push(headers.map(header => (json[header] ? json[header] : '')));\n  });\n\n  return table.toString();\n}\n\nconst VERTICAL_CELL_WIDTH = 80;\nexport function printTableJson(json: JSONObject, header1?: string, header2?: string): string {\n  const table = new CliTable();\n  if (header1 || header2) {\n    header1 = header1 ? header1 : '';\n    header2 = header2 ? header2 : '';\n    table.push({ [header1]: header2 });\n  }\n  Object.entries(json).forEach(([key, value]) => {\n    // check if value is a JSON\n    if (typeof value === 'object') {\n      value = JSON.stringify(value);\n    } else {\n      value = String(value);\n    }\n    // Add newline every 80 chars\n    key = key.replace(new RegExp('(.{' + VERTICAL_CELL_WIDTH + '})', 'g'), '$1\\n');\n    value = value.replace(new RegExp('(.{' + VERTICAL_CELL_WIDTH + '})', 'g'), '$1\\n');\n    table.push({ [key]: value });\n  });\n\n  return table.toString();\n}\n"],"mappings":";;;;;;;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEO,SAASA,mBAAT,CACLC,OADK,EAELC,SAFK,EAGLC,SAHK,EAIG;EACR,MAAMC,KAAK,GAAG,KAAIC,mBAAJ,EAAa;IACzBC,IAAI,EAAEL,OADmB;IAEzBE;EAFyB,CAAb,CAAd;EAKAD,SAAS,CAACK,OAAV,CAAkBC,IAAI,IAAI;IACxBJ,KAAK,CAACK,IAAN,CAAWR,OAAO,CAACS,GAAR,CAAYC,MAAM,IAAKH,IAAI,CAACG,MAAD,CAAJ,GAAeH,IAAI,CAACG,MAAD,CAAnB,GAA8B,EAArD,CAAX;EACD,CAFD;EAIA,OAAOP,KAAK,CAACQ,QAAN,EAAP;AACD;;AAED,MAAMC,mBAAmB,GAAG,EAA5B;;AACO,SAASC,cAAT,CAAwBN,IAAxB,EAA0CO,OAA1C,EAA4DC,OAA5D,EAAsF;EAC3F,MAAMZ,KAAK,GAAG,KAAIC,mBAAJ,GAAd;;EACA,IAAIU,OAAO,IAAIC,OAAf,EAAwB;IACtBD,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,EAA9B;IACAC,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,EAA9B;IACAZ,KAAK,CAACK,IAAN,CAAW;MAAE,CAACM,OAAD,GAAWC;IAAb,CAAX;EACD;;EACDC,MAAM,CAACC,OAAP,CAAeV,IAAf,EAAqBD,OAArB,CAA6B,CAAC,CAACY,GAAD,EAAMC,KAAN,CAAD,KAAkB;IAC7C;IACA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7BA,KAAK,GAAGC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAR;IACD,CAFD,MAEO;MACLA,KAAK,GAAGG,MAAM,CAACH,KAAD,CAAd;IACD,CAN4C,CAO7C;;;IACAD,GAAG,GAAGA,GAAG,CAACK,OAAJ,CAAY,IAAIC,MAAJ,CAAW,QAAQZ,mBAAR,GAA8B,IAAzC,EAA+C,GAA/C,CAAZ,EAAiE,MAAjE,CAAN;IACAO,KAAK,GAAGA,KAAK,CAACI,OAAN,CAAc,IAAIC,MAAJ,CAAW,QAAQZ,mBAAR,GAA8B,IAAzC,EAA+C,GAA/C,CAAd,EAAmE,MAAnE,CAAR;IACAT,KAAK,CAACK,IAAN,CAAW;MAAE,CAACU,GAAD,GAAOC;IAAT,CAAX;EACD,CAXD;EAaA,OAAOhB,KAAK,CAACQ,QAAN,EAAP;AACD"}