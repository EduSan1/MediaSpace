{"version":3,"file":"getMissingPackages.js","names":["collectMissingPackages","projectRoot","requiredPackages","resolutions","missingPackages","filter","p","resolved","resolveFrom","file","pkg","missing","getMissingPackagesAsync","exp","getConfig","skipSDKVersionRequirement","results","length","mutatePackagesWithKnownVersionsAsync","getSDKVersionsAsync","sdkVersion","sdkVersions","Versions","releasedSdkVersionsAsync","packages","versions","relatedPackages","version"],"sources":["../../../../src/commands/utils/web/getMissingPackages.ts"],"sourcesContent":["import { getConfig } from '@expo/config';\nimport { ExpoConfig } from '@expo/config-types';\nimport resolveFrom from 'resolve-from';\nimport { Versions } from 'xdl';\n\nexport type ResolvedPackage = {\n  file: string;\n  pkg: string;\n  version?: string;\n};\n\nexport function collectMissingPackages(\n  projectRoot: string,\n  requiredPackages: ResolvedPackage[]\n): {\n  missing: ResolvedPackage[];\n  resolutions: Record<string, string>;\n} {\n  const resolutions: Record<string, string> = {};\n\n  const missingPackages = requiredPackages.filter(p => {\n    try {\n      const resolved = resolveFrom(projectRoot, p.file);\n      if (resolved) {\n        resolutions[p.pkg] = resolved;\n      }\n      return !resolved;\n    } catch {\n      return true;\n    }\n  });\n\n  return { missing: missingPackages, resolutions };\n}\n\n/**\n * Collect missing packages given a list of required packages.\n * Any missing packages will be versioned to the known versions for the current SDK.\n *\n * @param projectRoot\n * @param props.requiredPackages list of required packages to check for\n * @returns list of missing packages and resolutions to existing packages.\n */\nexport async function getMissingPackagesAsync(\n  projectRoot: string,\n  {\n    exp = getConfig(projectRoot, { skipSDKVersionRequirement: true }).exp,\n    requiredPackages,\n  }: {\n    exp?: ExpoConfig;\n    requiredPackages: ResolvedPackage[];\n  }\n): Promise<{\n  missing: ResolvedPackage[];\n  resolutions: Record<string, string>;\n}> {\n  const results = collectMissingPackages(projectRoot, requiredPackages);\n  if (!results.missing.length) {\n    return results;\n  }\n\n  // Ensure the versions are right for the SDK that the project is currently using.\n  await mutatePackagesWithKnownVersionsAsync(exp, results.missing);\n\n  return results;\n}\n\nasync function getSDKVersionsAsync(exp: ExpoConfig): Promise<Versions.SDKVersion | null> {\n  try {\n    if (exp.sdkVersion) {\n      const sdkVersions = await Versions.releasedSdkVersionsAsync();\n      return sdkVersions[exp.sdkVersion] ?? null;\n    }\n  } catch {\n    // This is a convenience method and we should avoid making this halt the process.\n  }\n  return null;\n}\n\nexport async function mutatePackagesWithKnownVersionsAsync(\n  exp: ExpoConfig,\n  packages: ResolvedPackage[]\n) {\n  // Ensure the versions are right for the SDK that the project is currently using.\n  const versions = await getSDKVersionsAsync(exp);\n  if (versions?.relatedPackages) {\n    for (const pkg of packages) {\n      if (pkg.pkg in versions.relatedPackages) {\n        pkg.version = versions.relatedPackages[pkg.pkg];\n      }\n    }\n  }\n  return packages;\n}\n"],"mappings":";;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAQO,SAASA,sBAAT,CACLC,WADK,EAELC,gBAFK,EAML;EACA,MAAMC,WAAmC,GAAG,EAA5C;EAEA,MAAMC,eAAe,GAAGF,gBAAgB,CAACG,MAAjB,CAAwBC,CAAC,IAAI;IACnD,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAAC,sBAAA,EAAYP,WAAZ,EAAyBK,CAAC,CAACG,IAA3B,CAAjB;;MACA,IAAIF,QAAJ,EAAc;QACZJ,WAAW,CAACG,CAAC,CAACI,GAAH,CAAX,GAAqBH,QAArB;MACD;;MACD,OAAO,CAACA,QAAR;IACD,CAND,CAME,MAAM;MACN,OAAO,IAAP;IACD;EACF,CAVuB,CAAxB;EAYA,OAAO;IAAEI,OAAO,EAAEP,eAAX;IAA4BD;EAA5B,CAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,eAAeS,uBAAf,CACLX,WADK,EAEL;EACEY,GAAG,GAAG,IAAAC,mBAAA,EAAUb,WAAV,EAAuB;IAAEc,yBAAyB,EAAE;EAA7B,CAAvB,EAA4DF,GADpE;EAEEX;AAFF,CAFK,EAYJ;EACD,MAAMc,OAAO,GAAGhB,sBAAsB,CAACC,WAAD,EAAcC,gBAAd,CAAtC;;EACA,IAAI,CAACc,OAAO,CAACL,OAAR,CAAgBM,MAArB,EAA6B;IAC3B,OAAOD,OAAP;EACD,CAJA,CAMD;;;EACA,MAAME,oCAAoC,CAACL,GAAD,EAAMG,OAAO,CAACL,OAAd,CAA1C;EAEA,OAAOK,OAAP;AACD;;AAED,eAAeG,mBAAf,CAAmCN,GAAnC,EAAyF;EACvF,IAAI;IACF,IAAIA,GAAG,CAACO,UAAR,EAAoB;MAAA;;MAClB,MAAMC,WAAW,GAAG,MAAMC,eAAA,CAASC,wBAAT,EAA1B;MACA,gCAAOF,WAAW,CAACR,GAAG,CAACO,UAAL,CAAlB,yEAAsC,IAAtC;IACD;EACF,CALD,CAKE,MAAM,CACN;EACD;;EACD,OAAO,IAAP;AACD;;AAEM,eAAeF,oCAAf,CACLL,GADK,EAELW,QAFK,EAGL;EACA;EACA,MAAMC,QAAQ,GAAG,MAAMN,mBAAmB,CAACN,GAAD,CAA1C;;EACA,IAAIY,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEC,eAAd,EAA+B;IAC7B,KAAK,MAAMhB,GAAX,IAAkBc,QAAlB,EAA4B;MAC1B,IAAId,GAAG,CAACA,GAAJ,IAAWe,QAAQ,CAACC,eAAxB,EAAyC;QACvChB,GAAG,CAACiB,OAAJ,GAAcF,QAAQ,CAACC,eAAT,CAAyBhB,GAAG,CAACA,GAA7B,CAAd;MACD;IACF;EACF;;EACD,OAAOc,QAAP;AACD"}