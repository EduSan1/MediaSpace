{"version":3,"file":"createFileTransform.js","names":["escapeXMLCharacters","original","noAmps","replace","noLt","noGt","noApos","Transformer","Minipass","constructor","settings","write","data","getNormalizedName","includes","extension","name","end","replaced","IOSConfig","XcodeUtils","sanitizedName","toLowerCase","createEntryResolver","entry","path","type","test","basename","createFileTransform","extname","undefined"],"sources":["../../../src/commands/utils/createFileTransform.ts"],"sourcesContent":["import { IOSConfig } from '@expo/config-plugins';\nimport Minipass from 'minipass';\nimport * as path from 'path';\nimport { ReadEntry } from 'tar';\n\nfunction escapeXMLCharacters(original: string): string {\n  const noAmps = original.replace('&', '&amp;');\n  const noLt = noAmps.replace('<', '&lt;');\n  const noGt = noLt.replace('>', '&gt;');\n  const noApos = noGt.replace('\"', '\\\\\"');\n  return noApos.replace(\"'\", \"\\\\'\");\n}\n\nclass Transformer extends Minipass {\n  data = '';\n\n  constructor(private settings: { name: string; extension: string }) {\n    super();\n  }\n\n  write(data: string) {\n    this.data += data;\n    return true;\n  }\n\n  getNormalizedName(): string {\n    if (['.xml', '.plist'].includes(this.settings.extension)) {\n      return escapeXMLCharacters(this.settings.name);\n    }\n    return this.settings.name;\n  }\n\n  end() {\n    const name = this.getNormalizedName();\n    const replaced = this.data\n      .replace(/Hello App Display Name/g, name)\n      .replace(/HelloWorld/g, IOSConfig.XcodeUtils.sanitizedName(name))\n      .replace(/helloworld/g, IOSConfig.XcodeUtils.sanitizedName(name.toLowerCase()));\n    super.write(replaced);\n    return super.end();\n  }\n}\n\nexport function createEntryResolver(name: string) {\n  return (entry: ReadEntry) => {\n    if (name) {\n      // Rewrite paths for bare workflow\n      entry.path = entry.path\n        .replace(\n          /HelloWorld/g,\n          entry.path.includes('android')\n            ? IOSConfig.XcodeUtils.sanitizedName(name.toLowerCase())\n            : IOSConfig.XcodeUtils.sanitizedName(name)\n        )\n        .replace(/helloworld/g, IOSConfig.XcodeUtils.sanitizedName(name).toLowerCase());\n    }\n    if (entry.type && /^file$/i.test(entry.type) && path.basename(entry.path) === 'gitignore') {\n      // Rename `gitignore` because npm ignores files named `.gitignore` when publishing.\n      // See: https://github.com/npm/npm/issues/1862\n      entry.path = entry.path.replace(/gitignore$/, '.gitignore');\n    }\n  };\n}\n\nexport function createFileTransform(name: string) {\n  return (entry: ReadEntry) => {\n    const extension = path.extname(entry.path);\n\n    // Binary files, don't process these (avoid decoding as utf8)\n    if (\n      ![\n        '.png',\n        '.jpg',\n        '.jpeg',\n        '.gif',\n        '.webp',\n        '.psd',\n        '.tiff',\n        '.svg',\n        '.jar',\n        '.keystore',\n\n        // Font files\n        '.otf',\n        '.ttf',\n      ].includes(extension) &&\n      name\n    ) {\n      return new Transformer({ name, extension });\n    }\n    return undefined;\n  };\n}\n"],"mappings":"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"}