{"version":3,"file":"webhooksAddAsync.js","names":["actionAsync","projectRoot","url","event","options","assert","test","secret","validateSecret","generateSecret","experienceName","project","client","setupAsync","spinner","ora","start","postAsync","id","succeed"],"sources":["../../../src/commands/webhooks/webhooksAddAsync.ts"],"sourcesContent":["import assert from 'assert';\n\nimport { ora } from '../../utils/ora';\nimport { generateSecret, setupAsync, validateSecret, WebhookEvent } from './utils';\n\ntype Options = {\n  url?: string;\n  event?: WebhookEvent;\n  secret?: string;\n};\n\nexport async function actionAsync(projectRoot: string, { url, event, ...options }: Options) {\n  assert(typeof url === 'string' && /^https?/.test(url), '--url: a HTTP URL is required');\n  assert(typeof event === 'string', '--event: string is required');\n  const secret = validateSecret(options) || generateSecret();\n\n  const { experienceName, project, client } = await setupAsync(projectRoot);\n\n  const spinner = ora(`Adding webhook to ${experienceName}`).start();\n  await client.postAsync(`projects/${project.id}/webhooks`, { url, event, secret });\n  spinner.succeed();\n}\n"],"mappings":";;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAQO,eAAeA,WAAf,CAA2BC,WAA3B,EAAgD;EAAEC,GAAF;EAAOC,KAAP;EAAc,GAAGC;AAAjB,CAAhD,EAAqF;EAC1F,IAAAC,iBAAA,EAAO,OAAOH,GAAP,KAAe,QAAf,IAA2B,UAAUI,IAAV,CAAeJ,GAAf,CAAlC,EAAuD,+BAAvD;EACA,IAAAG,iBAAA,EAAO,OAAOF,KAAP,KAAiB,QAAxB,EAAkC,6BAAlC;EACA,MAAMI,MAAM,GAAG,IAAAC,uBAAA,EAAeJ,OAAf,KAA2B,IAAAK,uBAAA,GAA1C;EAEA,MAAM;IAAEC,cAAF;IAAkBC,OAAlB;IAA2BC;EAA3B,IAAsC,MAAM,IAAAC,mBAAA,EAAWZ,WAAX,CAAlD;EAEA,MAAMa,OAAO,GAAG,IAAAC,UAAA,EAAK,qBAAoBL,cAAe,EAAxC,EAA2CM,KAA3C,EAAhB;EACA,MAAMJ,MAAM,CAACK,SAAP,CAAkB,YAAWN,OAAO,CAACO,EAAG,WAAxC,EAAoD;IAAEhB,GAAF;IAAOC,KAAP;IAAcI;EAAd,CAApD,CAAN;EACAO,OAAO,CAACK,OAAR;AACD"}