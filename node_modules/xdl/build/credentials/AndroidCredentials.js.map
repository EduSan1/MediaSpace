{"version":3,"file":"AndroidCredentials.js","names":["log","logger","global","exportCertBinary","keystorePath","keystorePassword","keyAlias","certFile","spawnAsync","err","code","warn","info","stdout","stderr","error","exportCertBase64","logKeystoreHashes","keystoreInfo","linePrefix","data","fs","readFile","googleHash","crypto","createHash","update","digest","toUpperCase","googleHash256","fbHash","replace","unlink","createKeystore","keyPassword","androidPackage","generateUploadKeystore","uploadKeystorePath","experienceName","keystoreData","uuidv4","Buffer","from","toString"],"sources":["../../src/credentials/AndroidCredentials.ts"],"sourcesContent":["import spawnAsync, { SpawnResult } from '@expo/spawn-async';\nimport crypto from 'crypto';\nimport fs from 'fs-extra';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Logger as logger } from '../internal';\n\nconst log = logger.global;\n\nexport type Keystore = {\n  keystore: string;\n  keystorePassword: string;\n  keyPassword: string;\n  keyAlias: string;\n};\n\nexport type KeystoreInfo = {\n  keystorePath: string;\n  keystorePassword: string;\n  keyPassword: string;\n  keyAlias: string;\n};\n\nasync function exportCertBinary(\n  {\n    keystorePath,\n    keystorePassword,\n    keyAlias,\n  }: Pick<KeystoreInfo, 'keystorePath' | 'keystorePassword' | 'keyAlias'>,\n  certFile: string\n): Promise<SpawnResult> {\n  try {\n    return spawnAsync('keytool', [\n      '-exportcert',\n      '-keystore',\n      keystorePath,\n      '-storepass',\n      keystorePassword,\n      '-alias',\n      keyAlias,\n      '-file',\n      certFile,\n      '-noprompt',\n      '-storetype',\n      'JKS',\n    ]);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  }\n}\n\nexport async function exportCertBase64(\n  {\n    keystorePath,\n    keystorePassword,\n    keyAlias,\n  }: Pick<KeystoreInfo, 'keystorePath' | 'keystorePassword' | 'keyAlias'>,\n  certFile: string\n): Promise<SpawnResult> {\n  try {\n    return spawnAsync('keytool', [\n      '-export',\n      '-rfc',\n      '-keystore',\n      keystorePath,\n      '-storepass',\n      keystorePassword,\n      '-alias',\n      keyAlias,\n      '-file',\n      certFile,\n      '-noprompt',\n      '-storetype',\n      'JKS',\n    ]);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  }\n}\n\nexport async function logKeystoreHashes(keystoreInfo: KeystoreInfo, linePrefix: string = '') {\n  const { keystorePath } = keystoreInfo;\n  const certFile = `${keystorePath}.cer`;\n  try {\n    await exportCertBinary(keystoreInfo, certFile);\n    const data = await fs.readFile(certFile);\n    const googleHash = crypto.createHash('sha1').update(data).digest('hex').toUpperCase();\n    const googleHash256 = crypto.createHash('sha256').update(data).digest('hex').toUpperCase();\n    const fbHash = crypto.createHash('sha1').update(data).digest('base64');\n    log.info(\n      `${linePrefix}Google Certificate Fingerprint:     ${googleHash.replace(\n        /(.{2}(?!$))/g,\n        '$1:'\n      )}`\n    );\n    log.info(`${linePrefix}Google Certificate Hash (SHA-1):    ${googleHash}`);\n    log.info(`${linePrefix}Google Certificate Hash (SHA-256):  ${googleHash256}`);\n    log.info(`${linePrefix}Facebook Key Hash:                  ${fbHash}`);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  } finally {\n    try {\n      await fs.unlink(certFile);\n    } catch (err: any) {\n      if (err.code !== 'ENOENT') {\n        log.error(err);\n      }\n    }\n  }\n}\n\nasync function createKeystore(\n  { keystorePath, keystorePassword, keyAlias, keyPassword }: KeystoreInfo,\n  androidPackage: string\n): Promise<SpawnResult> {\n  try {\n    return await spawnAsync('keytool', [\n      '-genkey',\n      '-v',\n      '-storetype',\n      'JKS',\n      '-storepass',\n      keystorePassword,\n      '-keypass',\n      keyPassword,\n      '-keystore',\n      keystorePath,\n      '-alias',\n      keyAlias,\n      '-keyalg',\n      'RSA',\n      '-keysize',\n      '2048',\n      '-validity',\n      '10000',\n      '-dname',\n      `CN=${androidPackage},OU=,O=,L=,S=,C=US`,\n    ]);\n  } catch (err: any) {\n    if (err.code === 'ENOENT') {\n      log.warn('Are you sure you have keytool installed?');\n      log.info('keytool is a part of OpenJDK: https://openjdk.java.net/');\n      log.info('Also make sure that keytool is in your PATH after installation.');\n    }\n    if (err.stdout) {\n      log.info(err.stdout);\n    }\n    if (err.stderr) {\n      log.error(err.stderr);\n    }\n    throw err;\n  }\n}\n\nexport async function generateUploadKeystore(\n  uploadKeystorePath: string,\n  androidPackage: string,\n  experienceName: string\n): Promise<KeystoreInfo> {\n  const keystoreData = {\n    keystorePassword: uuidv4().replace(/-/g, ''),\n    keyPassword: uuidv4().replace(/-/g, ''),\n    keyAlias: Buffer.from(experienceName).toString('base64'),\n    keystorePath: uploadKeystorePath,\n  };\n  await createKeystore(keystoreData, androidPackage);\n  return keystoreData;\n}\n"],"mappings":"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"}