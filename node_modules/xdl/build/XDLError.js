"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const ERROR_PREFIX = 'Error: ';

class XDLError extends Error {
  constructor(code, message) {
    super(''); // If e.toString() was called to get `message` we don't want it to look
    // like "Error: Error:".

    _defineProperty(this, "name", 'XDLError');

    _defineProperty(this, "code", void 0);

    _defineProperty(this, "isXDLError", void 0);

    if (message.startsWith(ERROR_PREFIX)) {
      message = message.substring(ERROR_PREFIX.length);
    }

    this.message = message;
    this.code = code;
    this.isXDLError = true;
  }

}

exports.default = XDLError;
//# sourceMappingURL=XDLError.js.map