"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Analytics", {
  enumerable: true,
  get: function () {
    return _internal().Analytics;
  }
});
Object.defineProperty(exports, "Android", {
  enumerable: true,
  get: function () {
    return _internal().Android;
  }
});
Object.defineProperty(exports, "AndroidCredentials", {
  enumerable: true,
  get: function () {
    return _internal().AndroidCredentials;
  }
});
Object.defineProperty(exports, "ApiV2", {
  enumerable: true,
  get: function () {
    return _internal().ApiV2;
  }
});
Object.defineProperty(exports, "AppleDevice", {
  enumerable: true,
  get: function () {
    return _internal().AppleDevice;
  }
});
Object.defineProperty(exports, "Binaries", {
  enumerable: true,
  get: function () {
    return _internal().Binaries;
  }
});
Object.defineProperty(exports, "Config", {
  enumerable: true,
  get: function () {
    return _internal().Config;
  }
});
Object.defineProperty(exports, "ConnectionStatus", {
  enumerable: true,
  get: function () {
    return _internal().ConnectionStatus;
  }
});
Object.defineProperty(exports, "CoreSimulator", {
  enumerable: true,
  get: function () {
    return _internal().CoreSimulator;
  }
});
Object.defineProperty(exports, "Detach", {
  enumerable: true,
  get: function () {
    return _internal().Detach;
  }
});
Object.defineProperty(exports, "Doctor", {
  enumerable: true,
  get: function () {
    return _internal().Doctor;
  }
});
Object.defineProperty(exports, "EmbeddedAssets", {
  enumerable: true,
  get: function () {
    return _internal().EmbeddedAssets;
  }
});
Object.defineProperty(exports, "Env", {
  enumerable: true,
  get: function () {
    return _internal().Env;
  }
});
Object.defineProperty(exports, "ErrorCode", {
  enumerable: true,
  get: function () {
    return _internal().ErrorCode;
  }
});
Object.defineProperty(exports, "Exp", {
  enumerable: true,
  get: function () {
    return _internal().Exp;
  }
});
Object.defineProperty(exports, "IosCodeSigning", {
  enumerable: true,
  get: function () {
    return _internal().IosCodeSigning;
  }
});
Object.defineProperty(exports, "LoadingEvent", {
  enumerable: true,
  get: function () {
    return _internal().LoadingEvent;
  }
});
Object.defineProperty(exports, "LoadingPageHandler", {
  enumerable: true,
  get: function () {
    return _internal().LoadingPageHandler;
  }
});
Object.defineProperty(exports, "LogRecord", {
  enumerable: true,
  get: function () {
    return _internal().LogRecord;
  }
});
Object.defineProperty(exports, "LogUpdater", {
  enumerable: true,
  get: function () {
    return _internal().LogUpdater;
  }
});
Object.defineProperty(exports, "Logger", {
  enumerable: true,
  get: function () {
    return _internal().Logger;
  }
});
Object.defineProperty(exports, "ModuleVersion", {
  enumerable: true,
  get: function () {
    return _internal().ModuleVersion;
  }
});
Object.defineProperty(exports, "PKCS12Utils", {
  enumerable: true,
  get: function () {
    return _internal().PKCS12Utils;
  }
});
Object.defineProperty(exports, "PackagerLogsStream", {
  enumerable: true,
  get: function () {
    return _internal().PackagerLogsStream;
  }
});
Object.defineProperty(exports, "Project", {
  enumerable: true,
  get: function () {
    return _internal().Project;
  }
});
Object.defineProperty(exports, "ProjectAssets", {
  enumerable: true,
  get: function () {
    return _internal().ProjectAssets;
  }
});
Object.defineProperty(exports, "ProjectSettings", {
  enumerable: true,
  get: function () {
    return _internal().ProjectSettings;
  }
});
Object.defineProperty(exports, "ProjectUtils", {
  enumerable: true,
  get: function () {
    return _internal().ProjectUtils;
  }
});
Object.defineProperty(exports, "Prompts", {
  enumerable: true,
  get: function () {
    return _internal().Prompts;
  }
});
Object.defineProperty(exports, "RobotUser", {
  enumerable: true,
  get: function () {
    return _internal().RobotUser;
  }
});
Object.defineProperty(exports, "SimControl", {
  enumerable: true,
  get: function () {
    return _internal().SimControl;
  }
});
Object.defineProperty(exports, "Simulator", {
  enumerable: true,
  get: function () {
    return _internal().Simulator;
  }
});
Object.defineProperty(exports, "ThirdParty", {
  enumerable: true,
  get: function () {
    return _internal().ThirdParty;
  }
});
Object.defineProperty(exports, "UnifiedAnalytics", {
  enumerable: true,
  get: function () {
    return _internal().UnifiedAnalytics;
  }
});
Object.defineProperty(exports, "UrlUtils", {
  enumerable: true,
  get: function () {
    return _internal().UrlUtils;
  }
});
Object.defineProperty(exports, "User", {
  enumerable: true,
  get: function () {
    return _internal().User;
  }
});
Object.defineProperty(exports, "UserManager", {
  enumerable: true,
  get: function () {
    return _internal().UserManager;
  }
});
Object.defineProperty(exports, "UserSettings", {
  enumerable: true,
  get: function () {
    return _internal().UserSettings;
  }
});
Object.defineProperty(exports, "Versions", {
  enumerable: true,
  get: function () {
    return _internal().Versions;
  }
});
Object.defineProperty(exports, "Webpack", {
  enumerable: true,
  get: function () {
    return _internal().Webpack;
  }
});
Object.defineProperty(exports, "XDLError", {
  enumerable: true,
  get: function () {
    return _internal().XDLError;
  }
});
Object.defineProperty(exports, "isDevClientPackageInstalled", {
  enumerable: true,
  get: function () {
    return _internal().isDevClientPackageInstalled;
  }
});
Object.defineProperty(exports, "printBundleSizes", {
  enumerable: true,
  get: function () {
    return _internal().printBundleSizes;
  }
});

function _sourceMapSupport() {
  const data = require("source-map-support");

  _sourceMapSupport = function () {
    return data;
  };

  return data;
}

function _internal() {
  const data = require("./internal");

  _internal = function () {
    return data;
  };

  return data;
}

if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {
  (0, _sourceMapSupport().install)();
}
//# sourceMappingURL=index.js.map