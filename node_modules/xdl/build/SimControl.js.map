{"version":3,"file":"SimControl.js","names":["getDefaultSimulatorDeviceUDIDAsync","stdout","defaultDeviceUDID","spawnAsync","trim","getContainerPathAsync","udid","bundleIdentifier","CoreSimulator","isEnabled","xcrunAsync","deviceUDIDOrBooted","error","stderr","match","waitForDeviceToBootAsync","waitForActionAsync","action","bootAsync","openURLAsync","options","url","runBootAsync","openBundleIdAsync","device","getDeviceInfoAsync","catch","state","profileMethod","isSimulatorBootedAsync","getBootedSimulatorsAsync","simulatorDeviceInfo","listAsync","Object","values","devices","reduce","prev","runtime","concat","filter","find","bootedDevice","installAsync","simctlAsync","dir","uninstallAsync","parseSimControlJSONResults","input","JSON","parse","message","Logger","global","type","query","result","info","keys","runtimeSuffix","split","pop","osType","osVersionComponents","osVersion","join","sims","windowName","name","listSimulatorDevicesAsync","listDevicesAsync","AppleDevice","results","getConnectedDevices","map","DeviceName","ProductType","model","ProductVersion","deviceType","UniqueDeviceID","output","text","includes","lines","line","metadata","push","shutdownAsync","e","updatePermissionsAsync","permission","setAppearanceAsync","theme","eraseAsync","eraseAllAsync","addMediaAsync","mediaPath","captureScreenAsync","captureType","outputFilePath","path","extname","deleteUnavailableAsync","command","args","xcrunWithLogging","Boolean","isLicenseOutOfDate","lower","toLowerCase","isXcrunInstalledAsync","execSync","stdio","debug","parseXcrunError","XDLError","chalk","bold","Array","isArray"],"sources":["../src/SimControl.ts"],"sourcesContent":["import spawnAsync, { SpawnOptions, SpawnResult } from '@expo/spawn-async';\nimport chalk from 'chalk';\nimport { execSync } from 'child_process';\nimport path from 'path';\n\nimport { waitForActionAsync } from './apple/utils/waitForActionAsync';\nimport { AppleDevice, CoreSimulator, Logger, XDLError } from './internal';\nimport { profileMethod } from './utils/profileMethod';\n\ntype DeviceState = 'Shutdown' | 'Booted';\n\nexport type SimulatorDevice = {\n  availabilityError: 'runtime profile not found';\n  /**\n   * '/Users/name/Library/Developer/CoreSimulator/Devices/00E55DC0-0364-49DF-9EC6-77BE587137D4/data'\n   */\n  dataPath: string;\n  /**\n   * '/Users/name/Library/Logs/CoreSimulator/00E55DC0-0364-49DF-9EC6-77BE587137D4'\n   */\n  logPath: string;\n  /**\n   * '00E55DC0-0364-49DF-9EC6-77BE587137D4'\n   */\n  udid: string;\n  /**\n   * com.apple.CoreSimulator.SimRuntime.tvOS-13-4\n   */\n  runtime: string;\n  isAvailable: boolean;\n  /**\n   * 'com.apple.CoreSimulator.SimDeviceType.Apple-TV-1080p'\n   */\n  deviceTypeIdentifier: string;\n  state: DeviceState;\n  /**\n   * 'Apple TV'\n   */\n  name: string;\n\n  osType: OSType;\n  /**\n   * '13.4'\n   */\n  osVersion: string;\n  /**\n   * 'iPhone 11 (13.6)'\n   */\n  windowName: string;\n};\n\nexport type XCTraceDevice = {\n  /**\n   * '00E55DC0-0364-49DF-9EC6-77BE587137D4'\n   */\n  udid: string;\n  /**\n   * 'Apple TV'\n   */\n  name: string;\n\n  deviceType: 'device' | 'catalyst';\n  /**\n   * '13.4'\n   */\n  osVersion: string;\n};\n\ntype OSType = 'iOS' | 'tvOS' | 'watchOS' | 'macOS';\n\ntype PermissionName =\n  | 'all'\n  | 'calendar'\n  | 'contacts-limited'\n  | 'contacts'\n  | 'location'\n  | 'location-always'\n  | 'photos-add'\n  | 'photos'\n  | 'media-library'\n  | 'microphone'\n  | 'motion'\n  | 'reminders'\n  | 'siri';\n\ntype SimulatorDeviceList = {\n  devices: {\n    [runtime: string]: SimulatorDevice[];\n  };\n};\n\nexport async function getDefaultSimulatorDeviceUDIDAsync() {\n  try {\n    const { stdout: defaultDeviceUDID } = await spawnAsync('defaults', [\n      'read',\n      'com.apple.iphonesimulator',\n      'CurrentDeviceUDID',\n    ]);\n    return defaultDeviceUDID.trim();\n  } catch {\n    return null;\n  }\n}\n\n/**\n * Returns the local path for the installed tar.app. Returns null when the app isn't installed.\n *\n * @param props.udid device udid.\n * @param props.bundleIdentifier bundle identifier for app\n * @returns local file path to installed app binary, e.g. '/Users/evanbacon/Library/Developer/CoreSimulator/Devices/EFEEA6EF-E3F5-4EDE-9B72-29EAFA7514AE/data/Containers/Bundle/Application/FA43A0C6-C2AD-442D-B8B1-EAF3E88CF3BF/Exponent-2.21.3.tar.app'\n */\nexport async function getContainerPathAsync({\n  udid,\n  bundleIdentifier,\n}: {\n  udid: string;\n  bundleIdentifier: string;\n}): Promise<string | null> {\n  if (CoreSimulator.isEnabled()) {\n    return CoreSimulator.getContainerPathAsync({ udid, bundleIdentifier });\n  }\n  try {\n    const { stdout } = await xcrunAsync([\n      'simctl',\n      'get_app_container',\n      deviceUDIDOrBooted(udid),\n      bundleIdentifier,\n    ]);\n    return stdout.trim();\n  } catch (error: any) {\n    if (error.stderr?.match(/No such file or directory/)) {\n      return null;\n    }\n    throw error;\n  }\n}\n\nexport async function waitForDeviceToBootAsync({\n  udid,\n}: Pick<SimulatorDevice, 'udid'>): Promise<SimulatorDevice | null> {\n  return waitForActionAsync<SimulatorDevice | null>({\n    action: () => bootAsync({ udid }),\n  });\n}\n\nexport async function openURLAsync(options: { udid?: string; url: string }): Promise<void> {\n  try {\n    // Skip logging since this is likely to fail.\n    await xcrunAsync(['simctl', 'openurl', deviceUDIDOrBooted(options.udid), options.url]);\n  } catch (error: any) {\n    if (!error.stderr?.match(/Unable to lookup in current state: Shut/)) {\n      throw error;\n    }\n    // If the device was in a weird in-between state (\"Shutting Down\" or \"Shutdown\"), then attempt to reboot it and try again.\n    // This can happen when quitting the Simulator app, and immediately pressing `i` to reopen the project.\n\n    // First boot the simulator\n    await runBootAsync({ udid: deviceUDIDOrBooted(options.udid) });\n\n    // Finally, try again...\n    return await openURLAsync(options);\n  }\n}\n\nexport async function openBundleIdAsync(options: {\n  udid?: string;\n  bundleIdentifier: string;\n}): Promise<SpawnResult> {\n  return xcrunAsync([\n    'simctl',\n    'launch',\n    deviceUDIDOrBooted(options.udid),\n    options.bundleIdentifier,\n  ]);\n}\n\n// This will only boot in headless mode if the Simulator app is not running.\nexport async function bootAsync({ udid }: { udid: string }): Promise<SimulatorDevice | null> {\n  if (CoreSimulator.isEnabled()) {\n    const device = await CoreSimulator.getDeviceInfoAsync({ udid }).catch(() => null);\n    if (device?.state === 'Booted') {\n      return device;\n    }\n    await runBootAsync({ udid });\n    return await profileMethod(CoreSimulator.getDeviceInfoAsync)({ udid });\n  }\n\n  // TODO: Deprecate\n  await runBootAsync({ udid });\n  return await isSimulatorBootedAsync({ udid });\n}\n\nasync function getBootedSimulatorsAsync(): Promise<SimulatorDevice[]> {\n  const simulatorDeviceInfo = await listAsync('devices');\n  return Object.values(simulatorDeviceInfo.devices).reduce((prev, runtime) => {\n    return prev.concat(runtime.filter(device => device.state === 'Booted'));\n  }, []);\n}\n\nasync function isSimulatorBootedAsync({\n  udid,\n}: {\n  udid?: string;\n}): Promise<SimulatorDevice | null> {\n  // Simulators can be booted even if the app isn't running :(\n  const devices = await getBootedSimulatorsAsync();\n  if (udid) {\n    return devices.find(bootedDevice => bootedDevice.udid === udid) ?? null;\n  } else {\n    return devices[0] ?? null;\n  }\n}\n\nexport async function runBootAsync({ udid }: { udid: string }) {\n  try {\n    // Skip logging since this is likely to fail.\n    await xcrunAsync(['simctl', 'boot', udid]);\n  } catch (error: any) {\n    if (!error.stderr?.match(/Unable to boot device in current state: Booted/)) {\n      throw error;\n    }\n  }\n}\n\nexport async function installAsync(options: { udid: string; dir: string }): Promise<any> {\n  return simctlAsync(['install', deviceUDIDOrBooted(options.udid), options.dir]);\n}\n\nexport async function uninstallAsync(options: {\n  udid?: string;\n  bundleIdentifier: string;\n}): Promise<any> {\n  return simctlAsync(['uninstall', deviceUDIDOrBooted(options.udid), options.bundleIdentifier]);\n}\n\nfunction parseSimControlJSONResults(input: string): any {\n  try {\n    return JSON.parse(input);\n  } catch (error: any) {\n    // Nov 15, 2020: Observed this can happen when opening the simulator and the simulator prompts the user to update the XC command line tools.\n    // Unexpected token I in JSON at position 0\n    if (error.message.match('Unexpected token')) {\n      Logger.global.error(`Apple's simctl returned malformed JSON:\\n${input}`);\n    }\n    throw error;\n  }\n}\n\n// TODO: Compare with\n// const results = await SimControl.xcrunAsync(['instruments', '-s']);\nexport async function listAsync(\n  type: 'devices' | 'devicetypes' | 'runtimes' | 'pairs',\n  query?: string | 'available'\n): Promise<SimulatorDeviceList> {\n  const result = await simctlAsync(['list', type, '--json', query]);\n  const info = parseSimControlJSONResults(result.stdout) as SimulatorDeviceList;\n\n  for (const runtime of Object.keys(info.devices)) {\n    // Given a string like 'com.apple.CoreSimulator.SimRuntime.tvOS-13-4'\n    const runtimeSuffix = runtime.split('com.apple.CoreSimulator.SimRuntime.').pop()!;\n    // Create an array [tvOS, 13, 4]\n    const [osType, ...osVersionComponents] = runtimeSuffix.split('-');\n    // Join the end components [13, 4] -> '13.4'\n    const osVersion = osVersionComponents.join('.');\n    const sims = info.devices[runtime];\n    for (const device of sims) {\n      device.runtime = runtime;\n      device.osVersion = osVersion;\n      device.windowName = `${device.name} (${osVersion})`;\n      device.osType = osType as OSType;\n    }\n  }\n  return info;\n}\n\nexport async function listSimulatorDevicesAsync() {\n  if (CoreSimulator.isEnabled()) {\n    return CoreSimulator.listDevicesAsync();\n  }\n  const simulatorDeviceInfo = await listAsync('devices');\n  return Object.values(simulatorDeviceInfo.devices).reduce((prev, runtime) => {\n    return prev.concat(runtime);\n  }, []);\n}\n\n/**\n * Get a list of all connected devices.\n */\nexport async function listDevicesAsync(): Promise<XCTraceDevice[]> {\n  if (AppleDevice.isEnabled()) {\n    const results = await AppleDevice.getConnectedDevices();\n    // TODO: Add support for osType (ipad, watchos, etc)\n    return results.map(device => ({\n      // TODO: Better name\n      name: device.DeviceName ?? device.ProductType ?? 'unknown ios device',\n      model: device.ProductType,\n      osVersion: device.ProductVersion,\n      deviceType: 'device',\n      udid: device.UniqueDeviceID,\n    }));\n  }\n\n  const { output } = await xcrunAsync(['xctrace', 'list', 'devices']);\n\n  const text = output.join('');\n  const devices: XCTraceDevice[] = [];\n  if (!text.includes('== Simulators ==')) {\n    return [];\n  }\n\n  const lines = text.split('\\n');\n  for (const line of lines) {\n    if (line === '== Simulators ==') {\n      break;\n    }\n    const device = line.match(/(.*?) (\\(([0-9.]+)\\) )?\\(([0-9A-F-]+)\\)/i);\n    if (device) {\n      const [, name, , osVersion, udid] = device;\n      const metadata: XCTraceDevice = {\n        name,\n        udid,\n        osVersion: osVersion ?? '??',\n        deviceType: osVersion ? 'device' : 'catalyst',\n      };\n\n      devices.push(metadata);\n    }\n  }\n\n  return devices;\n}\n\nexport async function shutdownAsync(udid?: string) {\n  try {\n    return simctlAsync(['shutdown', deviceUDIDOrBooted(udid)]);\n  } catch (e: any) {\n    if (!e.message?.includes('No devices are booted.')) {\n      throw e;\n    }\n  }\n  return null;\n}\n\n// Some permission changes will terminate the application if running\nexport async function updatePermissionsAsync(\n  udid: string,\n  action: 'grant' | 'revoke' | 'reset',\n  permission: PermissionName,\n  bundleIdentifier?: string\n) {\n  return simctlAsync(['privacy', deviceUDIDOrBooted(udid), action, permission, bundleIdentifier]);\n}\n\nexport async function setAppearanceAsync(udid: string, theme: 'light' | 'dark') {\n  return simctlAsync(['ui', deviceUDIDOrBooted(udid), theme]);\n}\n\n// Cannot be invoked unless the simulator is `shutdown`\nexport async function eraseAsync(udid: string) {\n  return simctlAsync(['erase', deviceUDIDOrBooted(udid)]);\n}\n\nexport async function eraseAllAsync() {\n  return simctlAsync(['erase', 'all']);\n}\n\n// Add photos and videos to the simulator's gallery\nexport async function addMediaAsync(udid: string, mediaPath: string) {\n  return simctlAsync(['addmedia', deviceUDIDOrBooted(udid), mediaPath]);\n}\n\nexport async function captureScreenAsync(\n  udid: string,\n  captureType: 'screenshot' | 'recordVideo',\n  outputFilePath: string\n) {\n  return simctlAsync([\n    'io',\n    deviceUDIDOrBooted(udid),\n    captureType,\n    `—type=${path.extname(outputFilePath)}`,\n    outputFilePath,\n  ]);\n}\n\n// Clear all unused simulators\nexport async function deleteUnavailableAsync() {\n  return simctlAsync(['delete', 'unavailable']);\n}\n\nexport async function simctlAsync(\n  [command, ...args]: (string | undefined)[],\n  options?: SpawnOptions\n): Promise<SpawnResult> {\n  return xcrunWithLogging(\n    // @ts-ignore\n    ['simctl', command, ...args.filter(Boolean)],\n    options\n  );\n}\n\nfunction deviceUDIDOrBooted(udid?: string): string {\n  return udid ? udid : 'booted';\n}\n\nexport function isLicenseOutOfDate(text: string) {\n  if (!text) {\n    return false;\n  }\n\n  const lower = text.toLowerCase();\n  return lower.includes('xcode') && lower.includes('license');\n}\n\nexport async function isXcrunInstalledAsync() {\n  try {\n    execSync('xcrun --version', { stdio: 'ignore' });\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nexport async function xcrunAsync(args: string[], options?: SpawnOptions) {\n  Logger.global.debug('Running: xcrun ' + args.join(' '));\n  try {\n    return await spawnAsync('xcrun', args, options);\n  } catch (e: any) {\n    throw parseXcrunError(e);\n  }\n}\n\nexport function parseXcrunError(e: any): Error {\n  if (isLicenseOutOfDate(e.stdout) || isLicenseOutOfDate(e.stderr)) {\n    return new XDLError(\n      'XCODE_LICENSE_NOT_ACCEPTED',\n      'Xcode license is not accepted. Please run `sudo xcodebuild -license`.'\n    );\n  } else if (e.stderr?.includes('not a developer tool or in PATH')) {\n    return new XDLError(\n      'SIMCTL_NOT_AVAILABLE',\n      `You may need to run ${chalk.bold(\n        'sudo xcode-select -s /Applications/Xcode.app'\n      )} and try again.`\n    );\n  }\n  // Attempt to craft a better error message...\n  if (Array.isArray(e.output)) {\n    e.message += '\\n' + e.output.join('\\n').trim();\n  } else if (e.stderr) {\n    e.message += '\\n' + e.stderr;\n  }\n  return e;\n}\n\nexport async function xcrunWithLogging(\n  args: string[],\n  options?: SpawnOptions\n): Promise<SpawnResult> {\n  try {\n    return await xcrunAsync(args, options);\n  } catch (e: any) {\n    Logger.global.error(`Error running \\`xcrun ${args.join(' ')}\\`: ${e.stderr || e.message}`);\n    throw e;\n  }\n}\n"],"mappings":"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"}