{"version":3,"file":"manager.js","names":["ClientManager","constructor","pairRecord","device","lockdowndClient","connections","socket","create","udid","usbmuxClient","UsbmuxdClient","connectUsbmuxdSocket","getDevice","readPairRecord","Properties","SerialNumber","lockdownSocket","connect","lockdownClient","LockdowndClient","doHandshake","getUsbmuxdClient","push","getLockdowndClient","getLockdowndClientWithHandshake","getAFCClient","getServiceClient","AFCClient","getInstallationProxyClient","InstallationProxyClient","getMobileImageMounterClient","MobileImageMounterClient","getDebugserverClient","DebugserverClient","name","ServiceType","disableSSL","port","servicePort","enableServiceSSL","startService","usbmuxdSocket","tlsOptions","rejectUnauthorized","secureContext","tls","createSecureContext","secureProtocol","cert","RootCertificate","key","RootPrivateKey","proxy","UsbmuxdProxy","Promise","resolve","reject","timeoutId","setTimeout","Error","clearTimeout","destroy","client","end","Duplex","usbmuxdSock","on","data","_write","chunk","encoding","callback","write","_read","size","_destroy","removeAllListeners"],"sources":["../../../../../src/apple/native-run/ios/lib/manager.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport type * as net from 'net';\nimport { Duplex } from 'stream';\nimport * as tls from 'tls';\n\nimport type { ServiceClient } from './client';\nimport { AFCClient } from './client/afc';\nimport { DebugserverClient } from './client/debugserver';\nimport { InstallationProxyClient } from './client/installation_proxy';\nimport { LockdowndClient } from './client/lockdownd';\nimport { MobileImageMounterClient } from './client/mobile_image_mounter';\nimport type { UsbmuxdDevice, UsbmuxdPairRecord } from './client/usbmuxd';\nimport { UsbmuxdClient } from './client/usbmuxd';\n\nexport class ClientManager {\n  private connections: net.Socket[];\n  constructor(\n    public pairRecord: UsbmuxdPairRecord,\n    public device: UsbmuxdDevice,\n    private lockdowndClient: LockdowndClient\n  ) {\n    this.connections = [lockdowndClient.socket];\n  }\n\n  static async create(udid?: string) {\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    const device = await usbmuxClient.getDevice(udid);\n    const pairRecord = await usbmuxClient.readPairRecord(device.Properties.SerialNumber);\n    const lockdownSocket = await usbmuxClient.connect(device, 62078);\n    const lockdownClient = new LockdowndClient(lockdownSocket);\n    await lockdownClient.doHandshake(pairRecord);\n    return new ClientManager(pairRecord, device, lockdownClient);\n  }\n\n  async getUsbmuxdClient() {\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    this.connections.push(usbmuxClient.socket);\n    return usbmuxClient;\n  }\n\n  async getLockdowndClient() {\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    const lockdownSocket = await usbmuxClient.connect(this.device, 62078);\n    const lockdownClient = new LockdowndClient(lockdownSocket);\n    this.connections.push(lockdownClient.socket);\n    return lockdownClient;\n  }\n\n  async getLockdowndClientWithHandshake() {\n    const lockdownClient = await this.getLockdowndClient();\n    await lockdownClient.doHandshake(this.pairRecord);\n    return lockdownClient;\n  }\n\n  async getAFCClient() {\n    return this.getServiceClient('com.apple.afc', AFCClient);\n  }\n\n  async getInstallationProxyClient() {\n    return this.getServiceClient('com.apple.mobile.installation_proxy', InstallationProxyClient);\n  }\n\n  async getMobileImageMounterClient() {\n    return this.getServiceClient('com.apple.mobile.mobile_image_mounter', MobileImageMounterClient);\n  }\n\n  async getDebugserverClient() {\n    try {\n      // iOS 14 added support for a secure debug service so try to connect to that first\n      return await this.getServiceClient(\n        'com.apple.debugserver.DVTSecureSocketProxy',\n        DebugserverClient\n      );\n    } catch {\n      // otherwise, fall back to the previous implementation\n      return this.getServiceClient('com.apple.debugserver', DebugserverClient, true);\n    }\n  }\n\n  private async getServiceClient<T extends ServiceClient<any>>(\n    name: string,\n    ServiceType: new (...args: any[]) => T,\n    disableSSL = false\n  ) {\n    const { port: servicePort, enableServiceSSL } = await this.lockdowndClient.startService(name);\n    const usbmuxClient = new UsbmuxdClient(UsbmuxdClient.connectUsbmuxdSocket());\n    let usbmuxdSocket = await usbmuxClient.connect(this.device, servicePort);\n\n    if (enableServiceSSL) {\n      const tlsOptions: tls.ConnectionOptions = {\n        rejectUnauthorized: false,\n        secureContext: tls.createSecureContext({\n          secureProtocol: 'TLSv1_method',\n          cert: this.pairRecord.RootCertificate,\n          key: this.pairRecord.RootPrivateKey,\n        }),\n      };\n\n      // Some services seem to not support TLS/SSL after the initial handshake\n      // More info: https://github.com/libimobiledevice/libimobiledevice/issues/793\n      if (disableSSL) {\n        // According to https://nodejs.org/api/tls.html#tls_tls_connect_options_callback we can\n        // pass any Duplex in to tls.connect instead of a Socket. So we'll use our proxy to keep\n        // the TLS wrapper and underlying usbmuxd socket separate.\n        const proxy: any = new UsbmuxdProxy(usbmuxdSocket);\n        tlsOptions.socket = proxy;\n\n        await new Promise<void>((resolve, reject) => {\n          const timeoutId = setTimeout(() => {\n            reject(new Error('The TLS handshake failed to complete after 5s.'));\n          }, 5000);\n          tls.connect(tlsOptions, function (this: tls.TLSSocket) {\n            clearTimeout(timeoutId);\n            // After the handshake, we don't need TLS or the proxy anymore,\n            // since we'll just pass in the naked usbmuxd socket to the service client\n            this.destroy();\n            resolve();\n          });\n        });\n      } else {\n        tlsOptions.socket = usbmuxdSocket;\n        usbmuxdSocket = tls.connect(tlsOptions);\n      }\n    }\n    const client = new ServiceType(usbmuxdSocket);\n    this.connections.push(client.socket);\n    return client;\n  }\n\n  end() {\n    for (const socket of this.connections) {\n      // may already be closed\n      try {\n        socket.end();\n      } catch {\n        // ignore\n      }\n    }\n  }\n}\n\nclass UsbmuxdProxy extends Duplex {\n  constructor(private usbmuxdSock: net.Socket) {\n    super();\n\n    this.usbmuxdSock.on('data', data => {\n      this.push(data);\n    });\n  }\n\n  _write(chunk: any, encoding: string, callback: (err?: Error) => void) {\n    this.usbmuxdSock.write(chunk);\n    callback();\n  }\n\n  _read(size: number) {\n    // Stub so we don't error, since we push everything we get from usbmuxd as it comes in.\n    // TODO: better way to do this?\n  }\n\n  _destroy() {\n    this.usbmuxdSock.removeAllListeners();\n  }\n}\n"],"mappings":"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"}