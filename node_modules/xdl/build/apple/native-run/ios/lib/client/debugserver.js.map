{"version":3,"file":"debugserver.js","names":["debug","Debug","DebugserverClient","ServiceClient","constructor","socket","GDBProtocolClient","setMaxPacketSize","size","sendCommand","toString","setWorkingDir","workingDir","checkLaunchSuccess","attachByName","name","hexName","Buffer","from","continue","halt","protocolClient","write","kill","msg","cmd","args","sendMessage","resp","resolve","reject","parts","split","part","includes","launchApp","appPath","executableName","fullPath","path","join","hexAppPath","appCommand","length"],"sources":["../../../../../../src/apple/native-run/ios/lib/client/debugserver.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport type * as net from 'net';\nimport * as path from 'path';\n\nimport { GDBProtocolClient } from '../protocol/gdb';\nimport { ServiceClient } from './client';\n\nconst debug = Debug('expo:xdl:ios:lib:client:debugserver');\n\nexport class DebugserverClient extends ServiceClient<GDBProtocolClient> {\n  constructor(public socket: net.Socket) {\n    super(socket, new GDBProtocolClient(socket));\n  }\n\n  async setMaxPacketSize(size: number) {\n    return this.sendCommand('QSetMaxPacketSize:', [size.toString()]);\n  }\n\n  async setWorkingDir(workingDir: string) {\n    return this.sendCommand('QSetWorkingDir:', [workingDir]);\n  }\n\n  async checkLaunchSuccess() {\n    return this.sendCommand('qLaunchSuccess', []);\n  }\n\n  async attachByName(name: string) {\n    const hexName = Buffer.from(name).toString('hex');\n    return this.sendCommand(`vAttachName;${hexName}`, []);\n  }\n\n  async continue() {\n    return this.sendCommand('c', []);\n  }\n\n  halt() {\n    // ^C\n    debug('Sending ^C to debugserver');\n    return this.protocolClient.socket.write('\\u0003');\n  }\n\n  async kill() {\n    const msg: any = { cmd: 'k', args: [] };\n    return this.protocolClient.sendMessage(msg, (resp: string, resolve: any, reject: any) => {\n      this.protocolClient.socket.write('+');\n      const parts = resp.split(';');\n      for (const part of parts) {\n        if (part.includes('description')) {\n          // description:{hex encoded message like: \"Terminated with signal 9\"}\n          resolve(Buffer.from(part.split(':')[1], 'hex').toString('ascii'));\n        }\n      }\n    });\n  }\n\n  // TODO support app args\n  // https://sourceware.org/gdb/onlinedocs/gdb/Packets.html#Packets\n  // A arglen,argnum,arg,\n  async launchApp(appPath: string, executableName: string) {\n    const fullPath = path.join(appPath, executableName);\n    const hexAppPath = Buffer.from(fullPath).toString('hex');\n    const appCommand = `A${hexAppPath.length},0,${hexAppPath}`;\n    return this.sendCommand(appCommand, []);\n  }\n\n  async sendCommand(cmd: string, args: string[]) {\n    const msg = { cmd, args };\n    debug(`Sending command: ${cmd}, args: ${args}`);\n    const resp = await this.protocolClient.sendMessage(msg);\n    // we need to ACK as well\n    this.protocolClient.socket.write('+');\n    return resp;\n  }\n}\n"],"mappings":"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"}