{"version":3,"file":"usbmux.js","names":["debug","Debug","USBMUXD_HEADER_SIZE","UsbmuxProtocolClient","ProtocolClient","constructor","socket","ProtocolReaderFactory","UsbmuxProtocolReader","UsbmuxProtocolWriter","PlistProtocolReader","callback","parseHeader","data","readUInt32LE","parseBody","resp","JSON","stringify","write","msg","messageType","extraFields","plistMessage","plist","build","BundleID","ClientVersionString","MessageType","ProgName","kLibUSBMuxVersion","dataSize","length","protocolVersion","messageCode","header","Buffer","alloc","writeUInt32LE","useTag"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/usbmux.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport type * as net from 'net';\n\nimport type { ProtocolWriter } from './protocol';\nimport { PlistProtocolReader, ProtocolClient, ProtocolReaderFactory } from './protocol';\n\nconst debug = Debug('expo:xdl:ios:lib:protocol:usbmux');\n\nexport const USBMUXD_HEADER_SIZE = 16;\n\nexport interface UsbmuxMessage {\n  messageType: string;\n  extraFields?: { [key: string]: any };\n}\n\nexport class UsbmuxProtocolClient extends ProtocolClient<UsbmuxMessage> {\n  constructor(socket: net.Socket) {\n    super(socket, new ProtocolReaderFactory(UsbmuxProtocolReader), new UsbmuxProtocolWriter());\n  }\n}\n\nexport class UsbmuxProtocolReader extends PlistProtocolReader {\n  constructor(callback: (data: any) => any) {\n    super(USBMUXD_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    return data.readUInt32LE(0) - USBMUXD_HEADER_SIZE;\n  }\n\n  parseBody(data: Buffer) {\n    const resp = super.parseBody(data);\n    debug(`Response: ${JSON.stringify(resp)}`);\n    return resp;\n  }\n}\n\nexport class UsbmuxProtocolWriter implements ProtocolWriter {\n  private useTag = 0;\n\n  write(socket: net.Socket, msg: UsbmuxMessage) {\n    // TODO Usbmux message type\n    debug(`socket write: ${JSON.stringify(msg)}`);\n    const { messageType, extraFields } = msg;\n    const plistMessage = plist.build({\n      BundleID: 'dev.expo.native-run', // TODO\n      ClientVersionString: 'usbmux.js', // TODO\n      MessageType: messageType,\n      ProgName: 'native-run', // TODO\n      kLibUSBMuxVersion: 3,\n      ...extraFields,\n    });\n\n    const dataSize = plistMessage ? plistMessage.length : 0;\n    const protocolVersion = 1;\n    const messageCode = 8;\n\n    const header = Buffer.alloc(USBMUXD_HEADER_SIZE);\n    header.writeUInt32LE(USBMUXD_HEADER_SIZE + dataSize, 0);\n    header.writeUInt32LE(protocolVersion, 4);\n    header.writeUInt32LE(messageCode, 8);\n    header.writeUInt32LE(this.useTag++, 12); // TODO\n    socket.write(header);\n    socket.write(plistMessage);\n  }\n}\n"],"mappings":";;;;;;;AAQA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAIA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;AAEA,MAAMA,KAAK,GAAG,IAAAC,gBAAA,EAAM,kCAAN,CAAd;AAEO,MAAMC,mBAAmB,GAAG,EAA5B;;;AAOA,MAAMC,oBAAN,SAAmCC,0BAAnC,CAAiE;EACtEC,WAAW,CAACC,MAAD,EAAqB;IAC9B,MAAMA,MAAN,EAAc,KAAIC,iCAAJ,EAA0BC,oBAA1B,CAAd,EAA+D,IAAIC,oBAAJ,EAA/D;EACD;;AAHqE;;;;AAMjE,MAAMD,oBAAN,SAAmCE,+BAAnC,CAAuD;EAC5DL,WAAW,CAACM,QAAD,EAA+B;IACxC,MAAMT,mBAAN,EAA2BS,QAA3B;EACD;;EAEDC,WAAW,CAACC,IAAD,EAAe;IACxB,OAAOA,IAAI,CAACC,YAAL,CAAkB,CAAlB,IAAuBZ,mBAA9B;EACD;;EAEDa,SAAS,CAACF,IAAD,EAAe;IACtB,MAAMG,IAAI,GAAG,MAAMD,SAAN,CAAgBF,IAAhB,CAAb;IACAb,KAAK,CAAE,aAAYiB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAqB,EAAnC,CAAL;IACA,OAAOA,IAAP;EACD;;AAb2D;;;;AAgBvD,MAAMP,oBAAN,CAAqD;EAAA;IAAA,gCACzC,CADyC;EAAA;;EAG1DU,KAAK,CAACb,MAAD,EAAqBc,GAArB,EAAyC;IAC5C;IACApB,KAAK,CAAE,iBAAgBiB,IAAI,CAACC,SAAL,CAAeE,GAAf,CAAoB,EAAtC,CAAL;IACA,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAA+BF,GAArC;;IACA,MAAMG,YAAY,GAAGC,gBAAA,CAAMC,KAAN,CAAY;MAC/BC,QAAQ,EAAE,qBADqB;MACE;MACjCC,mBAAmB,EAAE,WAFU;MAEG;MAClCC,WAAW,EAAEP,WAHkB;MAI/BQ,QAAQ,EAAE,YAJqB;MAIP;MACxBC,iBAAiB,EAAE,CALY;MAM/B,GAAGR;IAN4B,CAAZ,CAArB;;IASA,MAAMS,QAAQ,GAAGR,YAAY,GAAGA,YAAY,CAACS,MAAhB,GAAyB,CAAtD;IACA,MAAMC,eAAe,GAAG,CAAxB;IACA,MAAMC,WAAW,GAAG,CAApB;IAEA,MAAMC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAanC,mBAAb,CAAf;IACAiC,MAAM,CAACG,aAAP,CAAqBpC,mBAAmB,GAAG6B,QAA3C,EAAqD,CAArD;IACAI,MAAM,CAACG,aAAP,CAAqBL,eAArB,EAAsC,CAAtC;IACAE,MAAM,CAACG,aAAP,CAAqBJ,WAArB,EAAkC,CAAlC;IACAC,MAAM,CAACG,aAAP,CAAqB,KAAKC,MAAL,EAArB,EAAoC,EAApC,EArB4C,CAqBH;;IACzCjC,MAAM,CAACa,KAAP,CAAagB,MAAb;IACA7B,MAAM,CAACa,KAAP,CAAaI,YAAb;EACD;;AA3ByD"}