{"version":3,"file":"gdb.js","names":["debug","Debug","ACK_SUCCESS","charCodeAt","GDBProtocolClient","ProtocolClient","constructor","socket","ProtocolReaderFactory","GDBProtocolReader","GDBProtocolWriter","ProtocolReader","callback","onData","data","buffer","Buffer","concat","length","headerSize","parseHeader","packetData","toString","match","body","from","slice","parseBody","err","Error","checksum","msg","validateChecksum","write","cmd","args","encodedArgs","map","arg","join","toUpperCase","checksumStr","calculateChecksum","formattedCmd","cmdStr","i","result","checksumVal","computedChecksum"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/gdb.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport type * as net from 'net';\n\nimport type { ProtocolReaderCallback, ProtocolWriter } from './protocol';\nimport { ProtocolClient, ProtocolReader, ProtocolReaderFactory } from './protocol';\n\nconst debug = Debug('expo:xdl:ios:lib:protocol:gdb');\nconst ACK_SUCCESS = '+'.charCodeAt(0);\n\nexport interface GDBMessage {\n  cmd: string;\n  args: string[];\n}\n\nexport class GDBProtocolClient extends ProtocolClient<GDBMessage> {\n  constructor(socket: net.Socket) {\n    super(socket, new ProtocolReaderFactory(GDBProtocolReader), new GDBProtocolWriter());\n  }\n}\n\nexport class GDBProtocolReader extends ProtocolReader {\n  constructor(callback: ProtocolReaderCallback) {\n    super(1 /* \"Header\" is '+' or '-' */, callback);\n  }\n\n  onData(data?: Buffer) {\n    // the GDB protocol does not support body length in its header so we cannot rely on\n    // the parent implementation to determine when a payload is complete\n    try {\n      // if there's data, add it to the existing buffer\n      this.buffer = data ? Buffer.concat([this.buffer, data]) : this.buffer;\n\n      // do we have enough bytes to proceed\n      if (this.buffer.length < this.headerSize) {\n        return; // incomplete header, wait for more\n      }\n\n      // first, check the header\n      if (this.parseHeader(this.buffer) === -1) {\n        // we have a valid header so check the body. GDB packets will always be a leading '$', data bytes,\n        // a trailing '#', and a two digit checksum. minimum valid body is the empty response '$#00'\n        // https://developer.apple.com/library/archive/documentation/DeveloperTools/gdb/gdb/gdb_33.html\n        const packetData = this.buffer.toString().match('\\\\$.*#[0-9a-f]{2}');\n        if (packetData == null) {\n          return; // incomplete body, wait for more\n        }\n        // extract the body and update the buffer\n        const body = Buffer.from(packetData[0]);\n        this.buffer = this.buffer.slice(this.headerSize + body.length);\n        // parse the payload and recurse if there is more data to process\n        this.callback(this.parseBody(body));\n        if (this.buffer.length) {\n          this.onData();\n        }\n      }\n    } catch (err: any) {\n      this.callback(null, err);\n    }\n  }\n\n  parseHeader(data: Buffer) {\n    if (data[0] !== ACK_SUCCESS) {\n      throw new Error('Unsuccessful debugserver response');\n    } // TODO: retry?\n    return -1;\n  }\n\n  parseBody(buffer: Buffer) {\n    debug(`Response body: ${buffer.toString()}`);\n    // check for checksum\n    const checksum = buffer.slice(-3).toString();\n    if (checksum.match(/#[0-9a-f]{2}/)) {\n      // remove '$' prefix and checksum\n      const msg = buffer.slice(1, -3).toString();\n      if (validateChecksum(checksum, msg)) {\n        return msg;\n      } else {\n        throw new Error('Invalid checksum received from debugserver');\n      }\n    } else {\n      throw new Error(\"Didn't receive checksum\");\n    }\n  }\n}\n\nexport class GDBProtocolWriter implements ProtocolWriter {\n  write(socket: net.Socket, msg: GDBMessage) {\n    const { cmd, args } = msg;\n    debug(`Socket write: ${cmd}, args: ${args}`);\n    // hex encode and concat all args\n    const encodedArgs = args\n      .map(arg => Buffer.from(arg).toString('hex'))\n      .join()\n      .toUpperCase();\n    const checksumStr = calculateChecksum(cmd + encodedArgs);\n    const formattedCmd = `$${cmd}${encodedArgs}#${checksumStr}`;\n    socket.write(formattedCmd);\n  }\n}\n\n// hex value of (sum of cmd chars mod 256)\nfunction calculateChecksum(cmdStr: string) {\n  let checksum = 0;\n  for (let i = 0; i < cmdStr.length; i++) {\n    checksum += cmdStr.charCodeAt(i);\n  }\n  let result = (checksum % 256).toString(16);\n  // pad if necessary\n  if (result.length === 1) {\n    result = `0${result}`;\n  }\n  return result;\n}\n\nfunction validateChecksum(checksum: string, msg: string) {\n  // remove '#' from checksum\n  const checksumVal = checksum.slice(1);\n  // remove '$' from msg and calculate its checksum\n  const computedChecksum = calculateChecksum(msg);\n  debug(`Checksum: ${checksumVal}, computed checksum: ${computedChecksum}`);\n  return checksumVal === computedChecksum;\n}\n"],"mappings":"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"}