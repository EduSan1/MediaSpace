{"version":3,"file":"lockdown.js","names":["debug","Debug","LOCKDOWN_HEADER_SIZE","isDefined","val","isLockdownResponse","resp","Status","isLockdownErrorResponse","Error","LockdownProtocolClient","ProtocolClient","constructor","socket","ProtocolReaderFactory","LockdownProtocolReader","LockdownProtocolWriter","PlistProtocolReader","callback","parseHeader","data","readUInt32BE","parseBody","JSON","stringify","IOSLibError","errorMessage","Service","Request","write","plistData","plistMessage","plist","build","header","Buffer","alloc","writeUInt32BE","length"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/lockdown.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport plist from '@expo/plist';\nimport Debug from 'debug';\nimport type * as net from 'net';\n\nimport { IOSLibError } from '../lib-errors';\nimport type { ProtocolWriter } from './protocol';\nimport { PlistProtocolReader, ProtocolClient, ProtocolReaderFactory } from './protocol';\n\nconst debug = Debug('expo:xdl:ios:lib:protocol:lockdown');\nexport const LOCKDOWN_HEADER_SIZE = 4;\n\nexport interface LockdownCommand {\n  Command: string;\n  [key: string]: any;\n}\n\nexport interface LockdownResponse {\n  Status: string;\n  [key: string]: any;\n}\n\nexport interface LockdownErrorResponse {\n  Error: string;\n  Request?: string;\n  Service?: string;\n}\n\nexport interface LockdownRequest {\n  Request: string;\n  [key: string]: any;\n}\n\nfunction isDefined(val: any) {\n  return typeof val !== 'undefined';\n}\n\nexport function isLockdownResponse(resp: any): resp is LockdownResponse {\n  return isDefined(resp.Status);\n}\n\nexport function isLockdownErrorResponse(resp: any): resp is LockdownErrorResponse {\n  return isDefined(resp.Error);\n}\n\nexport class LockdownProtocolClient<\n  MessageType extends LockdownRequest | LockdownCommand = LockdownRequest\n> extends ProtocolClient<MessageType> {\n  constructor(socket: net.Socket) {\n    super(socket, new ProtocolReaderFactory(LockdownProtocolReader), new LockdownProtocolWriter());\n  }\n}\n\nexport class LockdownProtocolReader extends PlistProtocolReader {\n  constructor(callback: (data: any) => any) {\n    super(LOCKDOWN_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    return data.readUInt32BE(0);\n  }\n\n  parseBody(data: Buffer) {\n    const resp = super.parseBody(data);\n    debug(`Response: ${JSON.stringify(resp)}`);\n    if (isLockdownErrorResponse(resp)) {\n      if (resp.Error === 'DeviceLocked') {\n        throw new IOSLibError('Device is currently locked.', 'DeviceLocked');\n      }\n\n      if (resp.Error === 'InvalidService') {\n        let errorMessage = `${resp.Error}: ${resp.Service} (request: ${resp.Request})`;\n        if (resp.Service === 'com.apple.debugserver') {\n          errorMessage +=\n            '\\nTry reconnecting your device. You can also debug service logs with `export DEBUG=expo:xdl:ios:*`';\n        }\n        throw new Error(errorMessage);\n      }\n\n      throw new Error(resp.Error);\n    }\n    return resp;\n  }\n}\n\nexport class LockdownProtocolWriter implements ProtocolWriter {\n  write(socket: net.Socket, plistData: any) {\n    debug(`socket write: ${JSON.stringify(plistData)}`);\n    const plistMessage = plist.build(plistData);\n    const header = Buffer.alloc(LOCKDOWN_HEADER_SIZE);\n    header.writeUInt32BE(plistMessage.length, 0);\n    socket.write(header);\n    socket.write(plistMessage);\n  }\n}\n"],"mappings":";;;;;;;;;AAQA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAGA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA,MAAMA,KAAK,GAAG,IAAAC,gBAAA,EAAM,oCAAN,CAAd;AACO,MAAMC,oBAAoB,GAAG,CAA7B;;;AAuBP,SAASC,SAAT,CAAmBC,GAAnB,EAA6B;EAC3B,OAAO,OAAOA,GAAP,KAAe,WAAtB;AACD;;AAEM,SAASC,kBAAT,CAA4BC,IAA5B,EAAiE;EACtE,OAAOH,SAAS,CAACG,IAAI,CAACC,MAAN,CAAhB;AACD;;AAEM,SAASC,uBAAT,CAAiCF,IAAjC,EAA2E;EAChF,OAAOH,SAAS,CAACG,IAAI,CAACG,KAAN,CAAhB;AACD;;AAEM,MAAMC,sBAAN,SAEGC,0BAFH,CAE+B;EACpCC,WAAW,CAACC,MAAD,EAAqB;IAC9B,MAAMA,MAAN,EAAc,KAAIC,iCAAJ,EAA0BC,sBAA1B,CAAd,EAAiE,IAAIC,sBAAJ,EAAjE;EACD;;AAHmC;;;;AAM/B,MAAMD,sBAAN,SAAqCE,+BAArC,CAAyD;EAC9DL,WAAW,CAACM,QAAD,EAA+B;IACxC,MAAMhB,oBAAN,EAA4BgB,QAA5B;EACD;;EAEDC,WAAW,CAACC,IAAD,EAAe;IACxB,OAAOA,IAAI,CAACC,YAAL,CAAkB,CAAlB,CAAP;EACD;;EAEDC,SAAS,CAACF,IAAD,EAAe;IACtB,MAAMd,IAAI,GAAG,MAAMgB,SAAN,CAAgBF,IAAhB,CAAb;IACApB,KAAK,CAAE,aAAYuB,IAAI,CAACC,SAAL,CAAelB,IAAf,CAAqB,EAAnC,CAAL;;IACA,IAAIE,uBAAuB,CAACF,IAAD,CAA3B,EAAmC;MACjC,IAAIA,IAAI,CAACG,KAAL,KAAe,cAAnB,EAAmC;QACjC,MAAM,KAAIgB,wBAAJ,EAAgB,6BAAhB,EAA+C,cAA/C,CAAN;MACD;;MAED,IAAInB,IAAI,CAACG,KAAL,KAAe,gBAAnB,EAAqC;QACnC,IAAIiB,YAAY,GAAI,GAAEpB,IAAI,CAACG,KAAM,KAAIH,IAAI,CAACqB,OAAQ,cAAarB,IAAI,CAACsB,OAAQ,GAA5E;;QACA,IAAItB,IAAI,CAACqB,OAAL,KAAiB,uBAArB,EAA8C;UAC5CD,YAAY,IACV,oGADF;QAED;;QACD,MAAM,IAAIjB,KAAJ,CAAUiB,YAAV,CAAN;MACD;;MAED,MAAM,IAAIjB,KAAJ,CAAUH,IAAI,CAACG,KAAf,CAAN;IACD;;IACD,OAAOH,IAAP;EACD;;AA7B6D;;;;AAgCzD,MAAMU,sBAAN,CAAuD;EAC5Da,KAAK,CAAChB,MAAD,EAAqBiB,SAArB,EAAqC;IACxC9B,KAAK,CAAE,iBAAgBuB,IAAI,CAACC,SAAL,CAAeM,SAAf,CAA0B,EAA5C,CAAL;;IACA,MAAMC,YAAY,GAAGC,gBAAA,CAAMC,KAAN,CAAYH,SAAZ,CAArB;;IACA,MAAMI,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAalC,oBAAb,CAAf;IACAgC,MAAM,CAACG,aAAP,CAAqBN,YAAY,CAACO,MAAlC,EAA0C,CAA1C;IACAzB,MAAM,CAACgB,KAAP,CAAaK,MAAb;IACArB,MAAM,CAACgB,KAAP,CAAaE,YAAb;EACD;;AAR2D"}