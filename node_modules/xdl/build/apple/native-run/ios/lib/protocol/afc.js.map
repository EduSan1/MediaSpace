{"version":3,"file":"afc.js","names":["debug","Debug","AFC_MAGIC","AFC_HEADER_SIZE","AFC_OPS","AFC_STATUS","AFC_FILE_OPEN_FLAGS","isAFCResponse","resp","operation","undefined","id","data","isStatusResponse","STATUS","isErrorStatusResponse","SUCCESS","AFCInternalError","Error","constructor","msg","requestId","AFCError","status","AFCProtocolClient","ProtocolClient","socket","ProtocolReaderFactory","AFCProtocolReader","AFCProtocolWriter","reader","readerFactory","create","err","requestCallbacks","on","onData","sendMessage","Promise","resolve","reject","writer","write","ProtocolReader","callback","parseHeader","magic","slice","toString","readUInt32LE","header","totalLength","headerLength","JSON","stringify","parseBody","body","length","Array","prototype","call","payload","dataLength","payloadLength","Buffer","alloc","from","copy","writeUInt32LE"],"sources":["../../../../../../src/apple/native-run/ios/lib/protocol/afc.ts"],"sourcesContent":["/**\n * Copyright (c) 2021 Expo, Inc.\n * Copyright (c) 2018 Drifty Co.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Debug from 'debug';\nimport type * as net from 'net';\n\nimport type { ProtocolReaderCallback, ProtocolWriter } from './protocol';\nimport { ProtocolClient, ProtocolReader, ProtocolReaderFactory } from './protocol';\n\nconst debug = Debug('expo:xdl:ios:lib:protocol:afc');\n\nexport const AFC_MAGIC = 'CFA6LPAA';\nexport const AFC_HEADER_SIZE = 40;\n\nexport interface AFCHeader {\n  magic: typeof AFC_MAGIC;\n  totalLength: number;\n  headerLength: number;\n  requestId: number;\n  operation: AFC_OPS;\n}\n\nexport interface AFCMessage {\n  operation: AFC_OPS;\n  data?: any;\n  payload?: any;\n}\n\nexport interface AFCResponse {\n  operation: AFC_OPS;\n  id: number;\n  data: Buffer;\n}\n\nexport interface AFCStatusResponse {\n  operation: AFC_OPS.STATUS;\n  id: number;\n  data: number;\n}\n\n/**\n * AFC Operations\n */\nexport enum AFC_OPS {\n  /**\n   * Invalid\n   */\n  INVALID = 0x00000000,\n\n  /**\n   * Status\n   */\n  STATUS = 0x00000001,\n\n  /**\n   * Data\n   */\n  DATA = 0x00000002,\n\n  /**\n   * ReadDir\n   */\n  READ_DIR = 0x00000003,\n\n  /**\n   * ReadFile\n   */\n  READ_FILE = 0x00000004,\n\n  /**\n   * WriteFile\n   */\n  WRITE_FILE = 0x00000005,\n\n  /**\n   * WritePart\n   */\n  WRITE_PART = 0x00000006,\n\n  /**\n   * TruncateFile\n   */\n  TRUNCATE = 0x00000007,\n\n  /**\n   * RemovePath\n   */\n  REMOVE_PATH = 0x00000008,\n\n  /**\n   * MakeDir\n   */\n  MAKE_DIR = 0x00000009,\n\n  /**\n   * GetFileInfo\n   */\n  GET_FILE_INFO = 0x0000000a,\n\n  /**\n   * GetDeviceInfo\n   */\n  GET_DEVINFO = 0x0000000b,\n\n  /**\n   * WriteFileAtomic (tmp file+rename)\n   */\n  WRITE_FILE_ATOM = 0x0000000c,\n\n  /**\n   * FileRefOpen\n   */\n  FILE_OPEN = 0x0000000d,\n\n  /**\n   * FileRefOpenResult\n   */\n  FILE_OPEN_RES = 0x0000000e,\n\n  /**\n   * FileRefRead\n   */\n  FILE_READ = 0x0000000f,\n\n  /**\n   * FileRefWrite\n   */\n  FILE_WRITE = 0x00000010,\n\n  /**\n   * FileRefSeek\n   */\n  FILE_SEEK = 0x00000011,\n\n  /**\n   * FileRefTell\n   */\n  FILE_TELL = 0x00000012,\n\n  /**\n   * FileRefTellResult\n   */\n  FILE_TELL_RES = 0x00000013,\n\n  /**\n   * FileRefClose\n   */\n  FILE_CLOSE = 0x00000014,\n\n  /**\n   * FileRefSetFileSize (ftruncate)\n   */\n  FILE_SET_SIZE = 0x00000015,\n\n  /**\n   * GetConnectionInfo\n   */\n  GET_CON_INFO = 0x00000016,\n\n  /**\n   * SetConnectionOptions\n   */\n  SET_CON_OPTIONS = 0x00000017,\n\n  /**\n   * RenamePath\n   */\n  RENAME_PATH = 0x00000018,\n\n  /**\n   * SetFSBlockSize (0x800000)\n   */\n  SET_FS_BS = 0x00000019,\n\n  /**\n   * SetSocketBlockSize (0x800000)\n   */\n  SET_SOCKET_BS = 0x0000001a,\n\n  /**\n   * FileRefLock\n   */\n  FILE_LOCK = 0x0000001b,\n\n  /**\n   * MakeLink\n   */\n  MAKE_LINK = 0x0000001c,\n\n  /**\n   * GetFileHash\n   */\n  GET_FILE_HASH = 0x0000001d,\n\n  /**\n   * SetModTime\n   */\n  SET_FILE_MOD_TIME = 0x0000001e,\n\n  /**\n   * GetFileHashWithRange\n   */\n  GET_FILE_HASH_RANGE = 0x0000001f,\n\n  // iOS 6+\n\n  /**\n   * FileRefSetImmutableHint\n   */\n  FILE_SET_IMMUTABLE_HINT = 0x00000020,\n\n  /**\n   * GetSizeOfPathContents\n   */\n  GET_SIZE_OF_PATH_CONTENTS = 0x00000021,\n\n  /**\n   * RemovePathAndContents\n   */\n  REMOVE_PATH_AND_CONTENTS = 0x00000022,\n\n  /**\n   * DirectoryEnumeratorRefOpen\n   */\n  DIR_OPEN = 0x00000023,\n\n  /**\n   * DirectoryEnumeratorRefOpenResult\n   */\n  DIR_OPEN_RESULT = 0x00000024,\n\n  /**\n   * DirectoryEnumeratorRefRead\n   */\n  DIR_READ = 0x00000025,\n\n  /**\n   * DirectoryEnumeratorRefClose\n   */\n  DIR_CLOSE = 0x00000026,\n\n  // iOS 7+\n\n  /**\n   * FileRefReadWithOffset\n   */\n  FILE_READ_OFFSET = 0x00000027,\n\n  /**\n   * FileRefWriteWithOffset\n   */\n  FILE_WRITE_OFFSET = 0x00000028,\n}\n\n/**\n * Error Codes\n */\nexport enum AFC_STATUS {\n  SUCCESS = 0,\n  UNKNOWN_ERROR = 1,\n  OP_HEADER_INVALID = 2,\n  NO_RESOURCES = 3,\n  READ_ERROR = 4,\n  WRITE_ERROR = 5,\n  UNKNOWN_PACKET_TYPE = 6,\n  INVALID_ARG = 7,\n  OBJECT_NOT_FOUND = 8,\n  OBJECT_IS_DIR = 9,\n  PERM_DENIED = 10,\n  SERVICE_NOT_CONNECTED = 11,\n  OP_TIMEOUT = 12,\n  TOO_MUCH_DATA = 13,\n  END_OF_DATA = 14,\n  OP_NOT_SUPPORTED = 15,\n  OBJECT_EXISTS = 16,\n  OBJECT_BUSY = 17,\n  NO_SPACE_LEFT = 18,\n  OP_WOULD_BLOCK = 19,\n  IO_ERROR = 20,\n  OP_INTERRUPTED = 21,\n  OP_IN_PROGRESS = 22,\n  INTERNAL_ERROR = 23,\n  MUX_ERROR = 30,\n  NO_MEM = 31,\n  NOT_ENOUGH_DATA = 32,\n  DIR_NOT_EMPTY = 33,\n  FORCE_SIGNED_TYPE = -1,\n}\n\nexport enum AFC_FILE_OPEN_FLAGS {\n  /**\n   * r (O_RDONLY)\n   */\n  RDONLY = 0x00000001,\n\n  /**\n   * r+ (O_RDWR | O_CREAT)\n   */\n  RW = 0x00000002,\n\n  /**\n   * w (O_WRONLY | O_CREAT | O_TRUNC)\n   */\n  WRONLY = 0x00000003,\n\n  /**\n   * w+ (O_RDWR | O_CREAT  | O_TRUNC)\n   */\n  WR = 0x00000004,\n\n  /**\n   * a (O_WRONLY | O_APPEND | O_CREAT)\n   */\n  APPEND = 0x00000005,\n\n  /**\n   * a+ (O_RDWR | O_APPEND | O_CREAT)\n   */\n  RDAPPEND = 0x00000006,\n}\n\nfunction isAFCResponse(resp: any): resp is AFCResponse {\n  return AFC_OPS[resp.operation] !== undefined && resp.id !== undefined && resp.data !== undefined;\n}\n\nfunction isStatusResponse(resp: any): resp is AFCStatusResponse {\n  return isAFCResponse(resp) && resp.operation === AFC_OPS.STATUS;\n}\n\nfunction isErrorStatusResponse(resp: AFCResponse): boolean {\n  return isStatusResponse(resp) && resp.data !== AFC_STATUS.SUCCESS;\n}\n\nclass AFCInternalError extends Error {\n  constructor(msg: string, public requestId: number) {\n    super(msg);\n  }\n}\n\nexport class AFCError extends Error {\n  constructor(msg: string, public status: AFC_STATUS) {\n    super(msg);\n  }\n}\n\nexport class AFCProtocolClient extends ProtocolClient {\n  private requestId = 0;\n  private requestCallbacks: { [key: number]: ProtocolReaderCallback } = {};\n\n  constructor(socket: net.Socket) {\n    super(socket, new ProtocolReaderFactory(AFCProtocolReader), new AFCProtocolWriter());\n\n    const reader = this.readerFactory.create((resp, err) => {\n      if (err && err instanceof AFCInternalError) {\n        this.requestCallbacks[err.requestId](resp, err);\n      } else if (isErrorStatusResponse(resp)) {\n        this.requestCallbacks[resp.id](resp, new AFCError(AFC_STATUS[resp.data], resp.data));\n      } else {\n        this.requestCallbacks[resp.id](resp);\n      }\n    });\n    socket.on('data', reader.onData);\n  }\n\n  sendMessage(msg: AFCMessage): Promise<AFCResponse> {\n    return new Promise<AFCResponse>((resolve, reject) => {\n      const requestId = this.requestId++;\n      this.requestCallbacks[requestId] = async (resp: any, err?: Error) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        if (isAFCResponse(resp)) {\n          resolve(resp);\n        } else {\n          reject(new Error('Malformed AFC response'));\n        }\n      };\n      this.writer.write(this.socket, { ...msg, requestId });\n    });\n  }\n}\n\nexport class AFCProtocolReader extends ProtocolReader {\n  private header!: AFCHeader; // TODO: ! -> ?\n\n  constructor(callback: ProtocolReaderCallback) {\n    super(AFC_HEADER_SIZE, callback);\n  }\n\n  parseHeader(data: Buffer) {\n    const magic = data.slice(0, 8).toString('ascii');\n    if (magic !== AFC_MAGIC) {\n      throw new AFCInternalError(\n        `Invalid AFC packet received (magic != ${AFC_MAGIC})`,\n        data.readUInt32LE(24)\n      );\n    }\n    // technically these are uint64\n    this.header = {\n      magic,\n      totalLength: data.readUInt32LE(8),\n      headerLength: data.readUInt32LE(16),\n      requestId: data.readUInt32LE(24),\n      operation: data.readUInt32LE(32),\n    };\n\n    debug(`parse header: ${JSON.stringify(this.header)}`);\n    if (this.header.headerLength < AFC_HEADER_SIZE) {\n      throw new AFCInternalError('Invalid AFC header', this.header.requestId);\n    }\n    return this.header.totalLength - AFC_HEADER_SIZE;\n  }\n\n  parseBody(data: Buffer): AFCResponse | AFCStatusResponse {\n    const body: any = {\n      operation: this.header.operation,\n      id: this.header.requestId,\n      data,\n    };\n    if (isStatusResponse(body)) {\n      const status = data.readUInt32LE(0);\n      debug(`${AFC_OPS[this.header.operation]} response: ${AFC_STATUS[status]}`);\n      body.data = status;\n    } else if (data.length <= 8) {\n      debug(`${AFC_OPS[this.header.operation]} response: ${Array.prototype.toString.call(body)}`);\n    } else {\n      debug(`${AFC_OPS[this.header.operation]} response length: ${data.length} bytes`);\n    }\n    return body;\n  }\n}\n\nexport class AFCProtocolWriter implements ProtocolWriter {\n  write(socket: net.Socket, msg: AFCMessage & { requestId: number }) {\n    const { data, payload, operation, requestId } = msg;\n\n    const dataLength = data ? data.length : 0;\n    const payloadLength = payload ? payload.length : 0;\n\n    const header = Buffer.alloc(AFC_HEADER_SIZE);\n    const magic = Buffer.from(AFC_MAGIC);\n    magic.copy(header);\n    header.writeUInt32LE(AFC_HEADER_SIZE + dataLength + payloadLength, 8);\n    header.writeUInt32LE(AFC_HEADER_SIZE + dataLength, 16);\n    header.writeUInt32LE(requestId, 24);\n    header.writeUInt32LE(operation, 32);\n    socket.write(header);\n    socket.write(data);\n    if (data.length <= 8) {\n      debug(\n        `socket write, header: { requestId: ${requestId}, operation: ${\n          AFC_OPS[operation]\n        }}, body: ${Array.prototype.toString.call(data)}`\n      );\n    } else {\n      debug(\n        `socket write, header: { requestId: ${requestId}, operation: ${AFC_OPS[operation]}}, body: ${data.length} bytes`\n      );\n    }\n\n    debug(`socket write, bytes written ${header.length} (header), ${data.length} (body)`);\n    if (payload) {\n      socket.write(payload);\n    }\n  }\n}\n"],"mappings":"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"}