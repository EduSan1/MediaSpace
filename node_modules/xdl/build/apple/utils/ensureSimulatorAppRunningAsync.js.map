{"version":3,"file":"ensureSimulatorAppRunningAsync.js","names":["execAsync","promisify","exec","waitForSimulatorAppToStart","waitForActionAsync","interval","action","isSimulatorAppRunningAsync","zeroMeansNo","osascript","trim","error","message","includes","ensureSimulatorAppRunningAsync","udid","Logger","global","info","openSimulatorAppAsync","TimeoutError","args","push","join","killAllAsync","spawnAsync"],"sources":["../../../src/apple/utils/ensureSimulatorAppRunningAsync.ts"],"sourcesContent":["import * as osascript from '@expo/osascript';\nimport spawnAsync from '@expo/spawn-async';\nimport { exec } from 'child_process';\nimport { promisify } from 'util';\n\nimport { Logger } from '../../internal';\nimport { TimeoutError, waitForActionAsync } from './waitForActionAsync';\n\nconst execAsync = promisify(exec);\n\nexport async function waitForSimulatorAppToStart(): Promise<boolean> {\n  return waitForActionAsync<boolean>({\n    interval: 50,\n    action: isSimulatorAppRunningAsync,\n  });\n}\n\n/**\n * I think the app can be open while no simulators are booted.\n */\nexport async function isSimulatorAppRunningAsync(): Promise<boolean> {\n  try {\n    const zeroMeansNo = (\n      await osascript.execAsync(\n        'tell app \"System Events\" to count processes whose name is \"Simulator\"'\n      )\n    ).trim();\n    if (zeroMeansNo === '0') {\n      return false;\n    }\n  } catch (error: any) {\n    if (error.message.includes('Application isnâ€™t running')) {\n      return false;\n    }\n    throw error;\n  }\n\n  return true;\n}\n\nexport async function ensureSimulatorAppRunningAsync({ udid }: { udid?: string }) {\n  // Yes, simulators can be booted even if the app isn't running, obviously we'd never want this.\n  if (!(await isSimulatorAppRunningAsync())) {\n    Logger.global.info(`\\u203A Opening the iOS simulator, this might take a moment.`);\n\n    // In theory this would ensure the correct simulator is booted as well.\n    // This isn't theory though, this is Xcode.\n    await openSimulatorAppAsync({ udid });\n    if (!(await waitForSimulatorAppToStart())) {\n      throw new TimeoutError(\n        `Simulator app did not open fast enough. Try opening Simulator first, then running your app.`\n      );\n    }\n  }\n}\n\nexport async function openSimulatorAppAsync({ udid }: { udid?: string }) {\n  const args = ['open', '-a', 'Simulator'];\n  if (udid) {\n    // This has no effect if the app is already running.\n    args.push('--args', '-CurrentDeviceUDID', udid);\n  }\n  await execAsync(args.join(' '));\n}\n\nexport async function killAllAsync() {\n  return await spawnAsync('killAll', ['Simulator']);\n}\n"],"mappings":";;;;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AAEA,MAAMA,SAAS,GAAG,IAAAC,iBAAA,EAAUC,qBAAV,CAAlB;;AAEO,eAAeC,0BAAf,GAA8D;EACnE,OAAO,IAAAC,wCAAA,EAA4B;IACjCC,QAAQ,EAAE,EADuB;IAEjCC,MAAM,EAAEC;EAFyB,CAA5B,CAAP;AAID;AAED;AACA;AACA;;;AACO,eAAeA,0BAAf,GAA8D;EACnE,IAAI;IACF,MAAMC,WAAW,GAAG,CAClB,MAAMC,SAAS,GAACT,SAAV,CACJ,uEADI,CADY,EAIlBU,IAJkB,EAApB;;IAKA,IAAIF,WAAW,KAAK,GAApB,EAAyB;MACvB,OAAO,KAAP;IACD;EACF,CATD,CASE,OAAOG,KAAP,EAAmB;IACnB,IAAIA,KAAK,CAACC,OAAN,CAAcC,QAAd,CAAuB,2BAAvB,CAAJ,EAAyD;MACvD,OAAO,KAAP;IACD;;IACD,MAAMF,KAAN;EACD;;EAED,OAAO,IAAP;AACD;;AAEM,eAAeG,8BAAf,CAA8C;EAAEC;AAAF,CAA9C,EAA2E;EAChF;EACA,IAAI,EAAE,MAAMR,0BAA0B,EAAlC,CAAJ,EAA2C;IACzCS,kBAAA,CAAOC,MAAP,CAAcC,IAAd,CAAoB,6DAApB,EADyC,CAGzC;IACA;;;IACA,MAAMC,qBAAqB,CAAC;MAAEJ;IAAF,CAAD,CAA3B;;IACA,IAAI,EAAE,MAAMZ,0BAA0B,EAAlC,CAAJ,EAA2C;MACzC,MAAM,KAAIiB,kCAAJ,EACH,6FADG,CAAN;IAGD;EACF;AACF;;AAEM,eAAeD,qBAAf,CAAqC;EAAEJ;AAAF,CAArC,EAAkE;EACvE,MAAMM,IAAI,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,WAAf,CAAb;;EACA,IAAIN,IAAJ,EAAU;IACR;IACAM,IAAI,CAACC,IAAL,CAAU,QAAV,EAAoB,oBAApB,EAA0CP,IAA1C;EACD;;EACD,MAAMf,SAAS,CAACqB,IAAI,CAACE,IAAL,CAAU,GAAV,CAAD,CAAf;AACD;;AAEM,eAAeC,YAAf,GAA8B;EACnC,OAAO,MAAM,IAAAC,qBAAA,EAAW,SAAX,EAAsB,CAAC,WAAD,CAAtB,CAAb;AACD"}