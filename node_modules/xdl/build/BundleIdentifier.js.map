{"version":3,"file":"BundleIdentifier.js","names":["logInfo","logWarning","ProjectUtils","BundleIdentiferSource","configureBundleIdentifierAsync","projectRoot","exp","configDescription","getProjectConfigDescription","bundleIdentifierFromPbxproj","IOSConfig","BundleIdentifier","getBundleIdentifierFromPbxproj","bundleIdentifierFromConfig","getBundleIdentifier","hasBundleIdentifierInStaticConfig","hasBundleIdentifierInStaticConfigAsync","bundleIdentifierSource","prompt","type","name","message","choices","title","chalk","bold","value","XcodeProject","AppJson","setBundleIdentifierForPbxproj","updateAppJsonConfigAsync","Error","missingBundleIdentifierMessage","getConfigFilePaths","staticConfigPath","newBundleIdentifier","paths","assert","rawStaticConfig","JsonFile","readAsync","expo","ios","bundleIdentifier","writeAsync","read"],"sources":["../src/BundleIdentifier.ts"],"sourcesContent":["/**\n * BundleIdentifier.ts\n *\n * NOTE:\n * The code in this module originates from eas-cli and the canonical version of\n * it is in\n * https://github.com/expo/eas-cli/blob/6a0a9bbaaad03b053b5930f7d14bde35b4d0a9f0/packages/eas-cli/src/build/ios/bundleIdentifer.ts#L36\n * Any changes to this code should be applied to eas-cli as well!\n *\n * TODO: move the code for configuring and validating the bundle identifier\n * to a shared package that can be used for both eas-cli and expo-cli.\n */\nimport { ExpoConfig, getConfigFilePaths, getProjectConfigDescription } from '@expo/config';\nimport { IOSConfig } from '@expo/config-plugins';\nimport JsonFile from '@expo/json-file';\nimport assert from 'assert';\nimport chalk from 'chalk';\nimport { prompt } from 'prompts';\n\nimport { ProjectUtils } from './internal';\n\nconst { logInfo, logWarning } = ProjectUtils;\n\nenum BundleIdentiferSource {\n  XcodeProject,\n  AppJson,\n}\n\nexport async function configureBundleIdentifierAsync(\n  projectRoot: string,\n  exp: ExpoConfig\n): Promise<string> {\n  const configDescription = getProjectConfigDescription(projectRoot);\n  const bundleIdentifierFromPbxproj = IOSConfig.BundleIdentifier.getBundleIdentifierFromPbxproj(\n    projectRoot\n  );\n  const bundleIdentifierFromConfig = IOSConfig.BundleIdentifier.getBundleIdentifier(exp);\n  if (bundleIdentifierFromPbxproj && bundleIdentifierFromConfig) {\n    if (bundleIdentifierFromPbxproj === bundleIdentifierFromConfig) {\n      return bundleIdentifierFromConfig;\n    } else {\n      logWarning(\n        projectRoot,\n        'expo',\n        `We detected that your Xcode project is configured with a different bundle identifier than the one defined in ${configDescription}.`\n      );\n      const hasBundleIdentifierInStaticConfig = await hasBundleIdentifierInStaticConfigAsync(\n        projectRoot,\n        exp\n      );\n      if (!hasBundleIdentifierInStaticConfig) {\n        logInfo(\n          projectRoot,\n          'expo',\n          `If you choose the one defined in ${configDescription} we'll automatically configure your Xcode project with it.\nHowever, if you choose the one defined in the Xcode project you'll have to update ${configDescription} on your own.`\n        );\n      }\n      const { bundleIdentifierSource } = await prompt({\n        type: 'select',\n        name: 'bundleIdentifierSource',\n        message: 'Which bundle identifier should we use?',\n        choices: [\n          {\n            title: `${chalk.bold(bundleIdentifierFromPbxproj)} - In Xcode project`,\n            value: BundleIdentiferSource.XcodeProject,\n          },\n          {\n            title: `${chalk.bold(bundleIdentifierFromConfig)} - In your ${configDescription}`,\n            value: BundleIdentiferSource.AppJson,\n          },\n        ],\n      });\n      if (bundleIdentifierSource === BundleIdentiferSource.AppJson) {\n        IOSConfig.BundleIdentifier.setBundleIdentifierForPbxproj(\n          projectRoot,\n          bundleIdentifierFromConfig\n        );\n        return bundleIdentifierFromConfig;\n      } else {\n        if (hasBundleIdentifierInStaticConfig) {\n          await updateAppJsonConfigAsync(projectRoot, exp, bundleIdentifierFromPbxproj);\n        } else {\n          throw new Error(missingBundleIdentifierMessage(configDescription));\n        }\n        return bundleIdentifierFromPbxproj;\n      }\n    }\n  } else if (bundleIdentifierFromPbxproj && !bundleIdentifierFromConfig) {\n    if (getConfigFilePaths(projectRoot).staticConfigPath) {\n      await updateAppJsonConfigAsync(projectRoot, exp, bundleIdentifierFromPbxproj);\n    }\n    return bundleIdentifierFromPbxproj;\n  } else if (!bundleIdentifierFromPbxproj && bundleIdentifierFromConfig) {\n    IOSConfig.BundleIdentifier.setBundleIdentifierForPbxproj(\n      projectRoot,\n      bundleIdentifierFromConfig\n    );\n    return bundleIdentifierFromConfig;\n  } else {\n    throw new Error(missingBundleIdentifierMessage(configDescription));\n  }\n}\n\nfunction missingBundleIdentifierMessage(configDescription: string): string {\n  return `Please define \"ios.bundleIdentifier\" in ${configDescription}.`;\n}\n\nasync function updateAppJsonConfigAsync(\n  projectRoot: string,\n  exp: ExpoConfig,\n  newBundleIdentifier: string\n): Promise<void> {\n  const paths = getConfigFilePaths(projectRoot);\n  assert(paths.staticConfigPath, \"Can't update dynamic configs\");\n\n  const rawStaticConfig = (await JsonFile.readAsync(paths.staticConfigPath)) as any;\n  rawStaticConfig.expo = {\n    ...rawStaticConfig.expo,\n    ios: { ...rawStaticConfig.expo?.ios, bundleIdentifier: newBundleIdentifier },\n  };\n  await JsonFile.writeAsync(paths.staticConfigPath, rawStaticConfig);\n\n  exp.ios = { ...exp.ios, bundleIdentifier: newBundleIdentifier };\n}\n\n/**\n * Check if static config exists and if ios.bundleIdentifier is defined there.\n * It will return false if the value in static config is different than \"ios.bundleIdentifier\" in ExpoConfig\n */\nasync function hasBundleIdentifierInStaticConfigAsync(\n  projectRoot: string,\n  exp: ExpoConfig\n): Promise<boolean> {\n  if (!exp.ios?.bundleIdentifier) {\n    return false;\n  }\n  const paths = getConfigFilePaths(projectRoot);\n  if (!paths.staticConfigPath) {\n    return false;\n  }\n  const rawStaticConfig = JsonFile.read(paths.staticConfigPath) as any;\n  return rawStaticConfig?.expo?.ios?.bundleIdentifier === exp.ios.bundleIdentifier;\n}\n"],"mappings":";;;;;;;AAYA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA,MAAM;EAAEA,OAAF;EAAWC;AAAX,IAA0BC,wBAAhC;;IAEKC,qB;;WAAAA,qB;EAAAA,qB,CAAAA,qB;EAAAA,qB,CAAAA,qB;GAAAA,qB,KAAAA,qB;;AAKE,eAAeC,8BAAf,CACLC,WADK,EAELC,GAFK,EAGY;EACjB,MAAMC,iBAAiB,GAAG,IAAAC,qCAAA,EAA4BH,WAA5B,CAA1B;;EACA,MAAMI,2BAA2B,GAAGC,0BAAA,CAAUC,gBAAV,CAA2BC,8BAA3B,CAClCP,WADkC,CAApC;;EAGA,MAAMQ,0BAA0B,GAAGH,0BAAA,CAAUC,gBAAV,CAA2BG,mBAA3B,CAA+CR,GAA/C,CAAnC;;EACA,IAAIG,2BAA2B,IAAII,0BAAnC,EAA+D;IAC7D,IAAIJ,2BAA2B,KAAKI,0BAApC,EAAgE;MAC9D,OAAOA,0BAAP;IACD,CAFD,MAEO;MACLZ,UAAU,CACRI,WADQ,EAER,MAFQ,EAGP,gHAA+GE,iBAAkB,GAH1H,CAAV;MAKA,MAAMQ,iCAAiC,GAAG,MAAMC,sCAAsC,CACpFX,WADoF,EAEpFC,GAFoF,CAAtF;;MAIA,IAAI,CAACS,iCAAL,EAAwC;QACtCf,OAAO,CACLK,WADK,EAEL,MAFK,EAGJ,oCAAmCE,iBAAkB;AAChE,oFAAoFA,iBAAkB,eAJvF,CAAP;MAMD;;MACD,MAAM;QAAEU;MAAF,IAA6B,MAAM,IAAAC,iBAAA,EAAO;QAC9CC,IAAI,EAAE,QADwC;QAE9CC,IAAI,EAAE,wBAFwC;QAG9CC,OAAO,EAAE,wCAHqC;QAI9CC,OAAO,EAAE,CACP;UACEC,KAAK,EAAG,GAAEC,gBAAA,CAAMC,IAAN,CAAWhB,2BAAX,CAAwC,qBADpD;UAEEiB,KAAK,EAAEvB,qBAAqB,CAACwB;QAF/B,CADO,EAKP;UACEJ,KAAK,EAAG,GAAEC,gBAAA,CAAMC,IAAN,CAAWZ,0BAAX,CAAuC,cAAaN,iBAAkB,EADlF;UAEEmB,KAAK,EAAEvB,qBAAqB,CAACyB;QAF/B,CALO;MAJqC,CAAP,CAAzC;;MAeA,IAAIX,sBAAsB,KAAKd,qBAAqB,CAACyB,OAArD,EAA8D;QAC5DlB,0BAAA,CAAUC,gBAAV,CAA2BkB,6BAA3B,CACExB,WADF,EAEEQ,0BAFF;;QAIA,OAAOA,0BAAP;MACD,CAND,MAMO;QACL,IAAIE,iCAAJ,EAAuC;UACrC,MAAMe,wBAAwB,CAACzB,WAAD,EAAcC,GAAd,EAAmBG,2BAAnB,CAA9B;QACD,CAFD,MAEO;UACL,MAAM,IAAIsB,KAAJ,CAAUC,8BAA8B,CAACzB,iBAAD,CAAxC,CAAN;QACD;;QACD,OAAOE,2BAAP;MACD;IACF;EACF,CAnDD,MAmDO,IAAIA,2BAA2B,IAAI,CAACI,0BAApC,EAAgE;IACrE,IAAI,IAAAoB,4BAAA,EAAmB5B,WAAnB,EAAgC6B,gBAApC,EAAsD;MACpD,MAAMJ,wBAAwB,CAACzB,WAAD,EAAcC,GAAd,EAAmBG,2BAAnB,CAA9B;IACD;;IACD,OAAOA,2BAAP;EACD,CALM,MAKA,IAAI,CAACA,2BAAD,IAAgCI,0BAApC,EAAgE;IACrEH,0BAAA,CAAUC,gBAAV,CAA2BkB,6BAA3B,CACExB,WADF,EAEEQ,0BAFF;;IAIA,OAAOA,0BAAP;EACD,CANM,MAMA;IACL,MAAM,IAAIkB,KAAJ,CAAUC,8BAA8B,CAACzB,iBAAD,CAAxC,CAAN;EACD;AACF;;AAED,SAASyB,8BAAT,CAAwCzB,iBAAxC,EAA2E;EACzE,OAAQ,2CAA0CA,iBAAkB,GAApE;AACD;;AAED,eAAeuB,wBAAf,CACEzB,WADF,EAEEC,GAFF,EAGE6B,mBAHF,EAIiB;EAAA;;EACf,MAAMC,KAAK,GAAG,IAAAH,4BAAA,EAAmB5B,WAAnB,CAAd;EACA,IAAAgC,iBAAA,EAAOD,KAAK,CAACF,gBAAb,EAA+B,8BAA/B;EAEA,MAAMI,eAAe,GAAI,MAAMC,mBAAA,CAASC,SAAT,CAAmBJ,KAAK,CAACF,gBAAzB,CAA/B;EACAI,eAAe,CAACG,IAAhB,GAAuB,EACrB,GAAGH,eAAe,CAACG,IADE;IAErBC,GAAG,EAAE,EAAE,6BAAGJ,eAAe,CAACG,IAAnB,0DAAG,sBAAsBC,GAAzB,CAAF;MAAgCC,gBAAgB,EAAER;IAAlD;EAFgB,CAAvB;EAIA,MAAMI,mBAAA,CAASK,UAAT,CAAoBR,KAAK,CAACF,gBAA1B,EAA4CI,eAA5C,CAAN;EAEAhC,GAAG,CAACoC,GAAJ,GAAU,EAAE,GAAGpC,GAAG,CAACoC,GAAT;IAAcC,gBAAgB,EAAER;EAAhC,CAAV;AACD;AAED;AACA;AACA;AACA;;;AACA,eAAenB,sCAAf,CACEX,WADF,EAEEC,GAFF,EAGoB;EAAA;;EAClB,IAAI,cAACA,GAAG,CAACoC,GAAL,qCAAC,SAASC,gBAAV,CAAJ,EAAgC;IAC9B,OAAO,KAAP;EACD;;EACD,MAAMP,KAAK,GAAG,IAAAH,4BAAA,EAAmB5B,WAAnB,CAAd;;EACA,IAAI,CAAC+B,KAAK,CAACF,gBAAX,EAA6B;IAC3B,OAAO,KAAP;EACD;;EACD,MAAMI,eAAe,GAAGC,mBAAA,CAASM,IAAT,CAAcT,KAAK,CAACF,gBAApB,CAAxB;;EACA,OAAO,CAAAI,eAAe,SAAf,IAAAA,eAAe,WAAf,sCAAAA,eAAe,CAAEG,IAAjB,4GAAuBC,GAAvB,kFAA4BC,gBAA5B,MAAiDrC,GAAG,CAACoC,GAAJ,CAAQC,gBAAhE;AACD"}