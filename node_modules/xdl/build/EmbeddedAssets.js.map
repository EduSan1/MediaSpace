{"version":3,"file":"EmbeddedAssets.js","names":["PLACEHOLDER_URL","FYI_URL","configureAsync","config","_maybeWriteArtifactsToDiskAsync","_maybeConfigureExpoKitEmbeddedAssetsAsync","_maybeRunModifiedExpoUpdatesPluginAsync","getEmbeddedManifestPath","platform","projectRoot","exp","ios","publishManifestPath","_getDefaultEmbeddedManifestPath","android","path","join","_getDefaultEmbeddedAssetDir","_getDefaultEmbeddedBundlePath","iosSupportingDirectory","getIOSPaths","Error","shouldEmbedAssetsForExpoUpdates","pkg","target","dependencies","expoUpdatesVersion","semver","coerce","satisfies","fs","existsSync","iosManifest","iosBundle","androidManifest","androidBundle","androidBundlePath","androidManifestPath","iosBundlePath","iosManifestPath","defaultAndroidDir","defaultIosDir","ensureDir","logger","global","warn","publishBundlePath","writeArtifactSafelyAsync","JSON","stringify","releaseChannel","androidManifestUrl","context","StandaloneContext","createUserContext","supportingDirectory","IosWorkspace","getPaths","IosPlist","modifyAsync","shellPlist","constantsPath","ExponentTools","deleteLinesInFileAsync","regexFileAsync","bundleUrl","iosManifestUrl","isLikelyFirstIOSPublish","expoPlistPath","expoPlistForProject","plist","parse","readFileSync","currentlyConfiguredExpoPlist","IOSConfig","Updates","setUpdatesConfig","Config","UPDATE_URL","RELEASE_CHANNEL","configuredIOSUpdatesURL","writeFileSync","build","SDK_VERSION","RUNTIME_VERSION","key","currentlyConfiguredValue","inferredValue","message","WarningAggregator","addWarningIOS","isLikelyFirstAndroidPublish","androidManifestXmlPath","AndroidManifestKeyForUpdateURL","AndroidConfig","currentlyConfiguredAndroidManifest","Manifest","readAndroidManifestAsync","currentConfiguredManifestApplication","getMainApplicationOrThrow","currentlyConfiguredMetaDataAttributes","map","md","inferredAndroidManifest","inferredMainApplication","addMetaDataItemToMainApplication","currentlyConfiguredAndroidUpdateURL","find","x","writeAndroidManifestAsync","inferredMetaDataAttributes","addWarningAndroid","platformSpecificMessage","getConfig","skipSDKVersionRequirement","projectName","name","iosProjectDirectory","XcodeUtils","sanitizedName","iconPath"],"sources":["../src/EmbeddedAssets.ts"],"sourcesContent":["import { ExpoAppManifest, getConfig, PackageJSONConfig, ProjectTarget } from '@expo/config';\nimport { AndroidConfig, IOSConfig, WarningAggregator } from '@expo/config-plugins';\nimport plist from '@expo/plist';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport semver from 'semver';\n\nimport {\n  ExponentTools,\n  IosPlist,\n  IosWorkspace,\n  Logger as logger,\n  StandaloneContext,\n  writeArtifactSafelyAsync,\n} from './internal';\n\nconst PLACEHOLDER_URL = 'YOUR-APP-URL-HERE';\nconst FYI_URL = 'https://expo.fyi/expo-updates-config';\n\nexport type EmbeddedAssetsConfiguration = {\n  projectRoot: string;\n  pkg: PackageJSONConfig;\n  exp: ExpoAppManifest;\n  releaseChannel?: string;\n  iosManifestUrl: string;\n  iosManifest: any;\n  iosBundle: string | Uint8Array;\n  androidManifestUrl: string;\n  androidManifest: any;\n  androidBundle: string | Uint8Array;\n  target: ProjectTarget;\n};\n\nexport async function configureAsync(config: EmbeddedAssetsConfiguration) {\n  await _maybeWriteArtifactsToDiskAsync(config);\n  await _maybeConfigureExpoKitEmbeddedAssetsAsync(config);\n  await _maybeRunModifiedExpoUpdatesPluginAsync(config);\n}\n\nexport function getEmbeddedManifestPath(\n  platform: 'ios' | 'android',\n  projectRoot: string,\n  exp: ExpoAppManifest\n): string {\n  if (platform === 'ios') {\n    return exp.ios && exp.ios.publishManifestPath\n      ? exp.ios.publishManifestPath\n      : _getDefaultEmbeddedManifestPath(platform, projectRoot, exp);\n  } else if (platform === 'android') {\n    return exp.android && exp.android.publishManifestPath\n      ? exp.android.publishManifestPath\n      : _getDefaultEmbeddedManifestPath(platform, projectRoot, exp);\n  }\n  return _getDefaultEmbeddedManifestPath(platform, projectRoot, exp);\n}\n\nfunction _getDefaultEmbeddedManifestPath(\n  platform: 'ios' | 'android',\n  projectRoot: string,\n  exp: ExpoAppManifest\n): string {\n  return path.join(_getDefaultEmbeddedAssetDir(platform, projectRoot, exp), 'app.manifest');\n}\n\nfunction _getDefaultEmbeddedBundlePath(\n  platform: 'ios' | 'android',\n  projectRoot: string,\n  exp: ExpoAppManifest\n): string {\n  return path.join(_getDefaultEmbeddedAssetDir(platform, projectRoot, exp), 'app.bundle');\n}\n\nfunction _getDefaultEmbeddedAssetDir(\n  platform: 'ios' | 'android',\n  projectRoot: string,\n  exp: ExpoAppManifest\n): string {\n  if (platform === 'ios') {\n    const { iosSupportingDirectory } = getIOSPaths(projectRoot);\n    return iosSupportingDirectory;\n  } else if (platform === 'android') {\n    return path.join(projectRoot, 'android', 'app', 'src', 'main', 'assets');\n  } else {\n    throw new Error('Embedding assets is not supported for platform ' + platform);\n  }\n}\n\nexport function shouldEmbedAssetsForExpoUpdates(\n  projectRoot: string,\n  exp: ExpoAppManifest,\n  pkg: PackageJSONConfig,\n  target: ProjectTarget\n): boolean {\n  if (!pkg.dependencies?.['expo-updates'] || target !== 'bare') {\n    return false;\n  }\n\n  // semver.coerce can return null\n  const expoUpdatesVersion = semver.coerce(pkg.dependencies['expo-updates']);\n\n  // expo-updates 0.1.x relies on expo-cli automatically embedding the manifest and bundle\n  if (expoUpdatesVersion && semver.satisfies(expoUpdatesVersion, '~0.1.0')) {\n    return true;\n  }\n\n  // We also want to support developers who had expo-updates 0.1.x and upgraded but still rely on\n  // expo-cli's automatic embedding. If the files already exist we can assume we need to update them\n  if (\n    fs.existsSync(_getDefaultEmbeddedBundlePath('android', projectRoot, exp)) ||\n    fs.existsSync(_getDefaultEmbeddedManifestPath('android', projectRoot, exp)) ||\n    fs.existsSync(_getDefaultEmbeddedBundlePath('ios', projectRoot, exp)) ||\n    fs.existsSync(_getDefaultEmbeddedManifestPath('ios', projectRoot, exp))\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nasync function _maybeWriteArtifactsToDiskAsync(config: EmbeddedAssetsConfiguration) {\n  const {\n    projectRoot,\n    pkg,\n    exp,\n    iosManifest,\n    iosBundle,\n    androidManifest,\n    androidBundle,\n    target,\n  } = config;\n\n  let androidBundlePath;\n  let androidManifestPath;\n  let iosBundlePath;\n  let iosManifestPath;\n\n  if (shouldEmbedAssetsForExpoUpdates(projectRoot, exp, pkg, target)) {\n    const defaultAndroidDir = _getDefaultEmbeddedAssetDir('android', projectRoot, exp);\n    const defaultIosDir = _getDefaultEmbeddedAssetDir('ios', projectRoot, exp);\n\n    await fs.ensureDir(defaultIosDir);\n    await fs.ensureDir(defaultAndroidDir);\n\n    androidBundlePath = _getDefaultEmbeddedBundlePath('android', projectRoot, exp);\n    androidManifestPath = _getDefaultEmbeddedManifestPath('android', projectRoot, exp);\n    iosBundlePath = _getDefaultEmbeddedBundlePath('ios', projectRoot, exp);\n    iosManifestPath = _getDefaultEmbeddedManifestPath('ios', projectRoot, exp);\n\n    if (!fs.existsSync(iosBundlePath) || !fs.existsSync(iosManifestPath)) {\n      logger.global.warn(\n        'Creating app.manifest and app.bundle inside of your ios/<project>/Supporting directory.\\nBe sure to add these files to your Xcode project. More info at https://expo.fyi/embedded-assets'\n      );\n    }\n  }\n\n  // allow custom overrides\n  if (exp.android?.publishBundlePath) {\n    androidBundlePath = exp.android.publishBundlePath;\n  }\n  if (exp.android?.publishManifestPath) {\n    androidManifestPath = exp.android.publishManifestPath;\n  }\n  if (exp.ios?.publishBundlePath) {\n    iosBundlePath = exp.ios.publishBundlePath;\n  }\n  if (exp.ios?.publishManifestPath) {\n    iosManifestPath = exp.ios.publishManifestPath;\n  }\n\n  if (androidBundlePath) {\n    await writeArtifactSafelyAsync(\n      projectRoot,\n      'android.publishBundlePath',\n      androidBundlePath,\n      androidBundle\n    );\n  }\n\n  if (androidManifestPath) {\n    await writeArtifactSafelyAsync(\n      projectRoot,\n      'android.publishManifestPath',\n      androidManifestPath,\n      JSON.stringify(androidManifest)\n    );\n  }\n\n  if (iosBundlePath) {\n    await writeArtifactSafelyAsync(projectRoot, 'ios.publishBundlePath', iosBundlePath, iosBundle);\n  }\n\n  if (iosManifestPath) {\n    await writeArtifactSafelyAsync(\n      projectRoot,\n      'ios.publishManifestPath',\n      iosManifestPath,\n      JSON.stringify(iosManifest)\n    );\n  }\n}\n\nasync function _maybeConfigureExpoKitEmbeddedAssetsAsync(config: EmbeddedAssetsConfiguration) {\n  const { projectRoot, exp, releaseChannel, androidManifestUrl, androidManifest } = config;\n\n  const context = StandaloneContext.createUserContext(projectRoot, exp);\n  const { supportingDirectory } = IosWorkspace.getPaths(context);\n\n  // iOS ExpoKit\n  if (releaseChannel && fs.existsSync(path.join(supportingDirectory, 'EXShell.plist'))) {\n    // This is an ExpoKit app, set properties in EXShell.plist\n    await IosPlist.modifyAsync(supportingDirectory, 'EXShell', (shellPlist: any) => {\n      shellPlist.releaseChannel = releaseChannel;\n      return shellPlist;\n    });\n  }\n\n  // Android ExpoKit\n  const constantsPath = path.join(\n    projectRoot,\n    'android',\n    'app',\n    'src',\n    'main',\n    'java',\n    'host',\n    'exp',\n    'exponent',\n    'generated',\n    'AppConstants.java'\n  );\n  if (fs.existsSync(constantsPath)) {\n    // This is an ExpoKit app\n    // We need to add EmbeddedResponse instances on Android to tell the runtime\n    // that the shell app manifest and bundle is packaged.\n    await ExponentTools.deleteLinesInFileAsync(\n      `START EMBEDDED RESPONSES`,\n      `END EMBEDDED RESPONSES`,\n      constantsPath\n    );\n    await ExponentTools.regexFileAsync(\n      '// ADD EMBEDDED RESPONSES HERE',\n      `\n      // ADD EMBEDDED RESPONSES HERE\n      // START EMBEDDED RESPONSES\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${androidManifestUrl}\", \"assets://shell-app-manifest.json\", \"application/json\"));\n      embeddedResponses.add(new Constants.EmbeddedResponse(\"${androidManifest.bundleUrl}\", \"assets://shell-app.bundle\", \"application/javascript\"));\n      // END EMBEDDED RESPONSES`,\n      constantsPath\n    );\n    if (releaseChannel) {\n      await ExponentTools.regexFileAsync(\n        /RELEASE_CHANNEL = \"[^\"]*\"/,\n        `RELEASE_CHANNEL = \"${releaseChannel}\"`,\n        constantsPath\n      );\n    }\n  }\n}\n\n/**\n * Guess if this is a user's first publish and run a slightly modified expo-updates plugin.\n * If it is not their first publish and a config mismatch is noticed, log warnings.\n */\nasync function _maybeRunModifiedExpoUpdatesPluginAsync(config: EmbeddedAssetsConfiguration) {\n  if (!config.pkg.dependencies?.['expo-updates'] || config.target === 'managed') {\n    return;\n  }\n\n  const { projectRoot, exp, releaseChannel, iosManifestUrl, androidManifestUrl } = config;\n\n  const { iosSupportingDirectory: supportingDirectory } = getIOSPaths(projectRoot);\n\n  // iOS expo-updates\n  let isLikelyFirstIOSPublish = false;\n  const expoPlistPath = path.join(supportingDirectory, 'Expo.plist');\n  if (fs.existsSync(expoPlistPath)) {\n    let expoPlistForProject = plist.parse(await fs.readFileSync(expoPlistPath, 'utf8'));\n    const currentlyConfiguredExpoPlist = { ...expoPlistForProject };\n\n    // The username is only used for defining a default updates URL.\n    // Since we overwrite the URL below the username is superfluous.\n    expoPlistForProject = IOSConfig.Updates.setUpdatesConfig(\n      projectRoot,\n      exp,\n      expoPlistForProject,\n      /*expoUsername*/ null\n    );\n\n    // overwrite the URL defined in IOSConfig.Updates.setUpdatesConfig\n    expoPlistForProject[IOSConfig.Updates.Config.UPDATE_URL] = iosManifestUrl;\n    // set a release channel (not done in updates plugin)\n    if (releaseChannel) {\n      expoPlistForProject[IOSConfig.Updates.Config.RELEASE_CHANNEL] = releaseChannel;\n    }\n\n    // If we guess that this is a users first publish, modify the native code to match\n    // what is configured.\n    const configuredIOSUpdatesURL =\n      currentlyConfiguredExpoPlist[IOSConfig.Updates.Config.UPDATE_URL];\n    if (configuredIOSUpdatesURL === PLACEHOLDER_URL) {\n      isLikelyFirstIOSPublish = true;\n      fs.writeFileSync(expoPlistPath, plist.build(expoPlistForProject));\n    } else {\n      // Log warnings if this is not the first publish and critical properties seem misconfigured\n      const {\n        UPDATE_URL,\n        SDK_VERSION,\n        RUNTIME_VERSION,\n        RELEASE_CHANNEL,\n      } = IOSConfig.Updates.Config;\n      for (const key of [UPDATE_URL, SDK_VERSION, RUNTIME_VERSION, RELEASE_CHANNEL]) {\n        let currentlyConfiguredValue = currentlyConfiguredExpoPlist[key];\n        const inferredValue = expoPlistForProject[key];\n        if (key === RELEASE_CHANNEL && inferredValue) {\n          // A client with an undefined release channel is mapped to\n          // 'default' in the server, so avoid logging an unneccessary warning.\n          currentlyConfiguredValue = currentlyConfiguredValue ?? 'default';\n        }\n        if (currentlyConfiguredValue !== inferredValue) {\n          let message: string;\n          switch (key) {\n            case RELEASE_CHANNEL: {\n              message = `The value passed to the --release-channel flag is to \"${inferredValue}\", but it is set to \"${currentlyConfiguredValue}\".`;\n              break;\n            }\n            case UPDATE_URL:\n            case SDK_VERSION:\n            case RUNTIME_VERSION:\n            default:\n              message = `${key} is inferred to be \"${inferredValue}\", but it is set to \"${currentlyConfiguredValue}\".`;\n          }\n          WarningAggregator.addWarningIOS(`Expo.plist key: \"${key}\"`, message, FYI_URL);\n        }\n      }\n    }\n  }\n\n  // Android expo-updates\n  let isLikelyFirstAndroidPublish = false;\n  const androidManifestXmlPath = path.join(\n    projectRoot,\n    'android',\n    'app',\n    'src',\n    'main',\n    'AndroidManifest.xml'\n  );\n  const AndroidManifestKeyForUpdateURL = AndroidConfig.Updates.Config.UPDATE_URL;\n  if (fs.existsSync(androidManifestXmlPath)) {\n    const currentlyConfiguredAndroidManifest = await AndroidConfig.Manifest.readAndroidManifestAsync(\n      androidManifestXmlPath\n    );\n    const currentConfiguredManifestApplication = AndroidConfig.Manifest.getMainApplicationOrThrow(\n      currentlyConfiguredAndroidManifest\n    );\n    const currentlyConfiguredMetaDataAttributes =\n      currentConfiguredManifestApplication['meta-data']?.map(md => md['$']) ?? [];\n\n    // The username is only used for defining a default updates URL.\n    // Since we overwrite the URL below the username is superfluous.\n    const inferredAndroidManifest = AndroidConfig.Updates.setUpdatesConfig(\n      projectRoot,\n      exp,\n      currentlyConfiguredAndroidManifest,\n      /*username*/ null\n    );\n    const inferredMainApplication = AndroidConfig.Manifest.getMainApplicationOrThrow(\n      inferredAndroidManifest\n    );\n    // overwrite the URL defined in AndroidConfig.Updates.setUpdatesConfig\n    AndroidConfig.Manifest.addMetaDataItemToMainApplication(\n      inferredMainApplication,\n      AndroidManifestKeyForUpdateURL,\n      androidManifestUrl\n    );\n    // set a release channel (not done in updates plugin)\n    if (releaseChannel) {\n      AndroidConfig.Manifest.addMetaDataItemToMainApplication(\n        inferredMainApplication,\n        AndroidConfig.Updates.Config.RELEASE_CHANNEL,\n        releaseChannel\n      );\n    }\n\n    // If we guess that this is a users first publish, modify the native code to match\n    // what is configured.\n    const currentlyConfiguredAndroidUpdateURL = currentlyConfiguredMetaDataAttributes.find(\n      x => x['android:name'] === AndroidConfig.Updates.Config.UPDATE_URL\n    )?.['android:value'];\n    if (currentlyConfiguredAndroidUpdateURL === PLACEHOLDER_URL) {\n      isLikelyFirstAndroidPublish = true;\n      await AndroidConfig.Manifest.writeAndroidManifestAsync(\n        androidManifestXmlPath,\n        inferredAndroidManifest\n      );\n    } else {\n      // Log warnings if this is not the first publish and critical properties seem misconfigured\n      const inferredMainApplication = AndroidConfig.Manifest.getMainApplicationOrThrow(\n        inferredAndroidManifest\n      );\n      const inferredMetaDataAttributes = inferredMainApplication['meta-data']?.map(md => md['$'])!;\n\n      const {\n        UPDATE_URL,\n        SDK_VERSION,\n        RUNTIME_VERSION,\n        RELEASE_CHANNEL,\n      } = AndroidConfig.Updates.Config;\n      for (const key of [UPDATE_URL, SDK_VERSION, RUNTIME_VERSION, RELEASE_CHANNEL]) {\n        const inferredValue = inferredMetaDataAttributes.find(x => x['android:name'] === key)?.[\n          'android:value'\n        ];\n        let currentlyConfiguredValue = currentlyConfiguredMetaDataAttributes.find(\n          x => x['android:name'] === key\n        )?.['android:value'];\n        if (key === RELEASE_CHANNEL && inferredValue) {\n          // A client with an undefined release channel is mapped to\n          // 'default' in the server, so avoid logging an unneccessary warning.\n          currentlyConfiguredValue = currentlyConfiguredValue ?? 'default';\n        }\n        if (inferredValue !== currentlyConfiguredValue) {\n          let message: string;\n          switch (key) {\n            case RELEASE_CHANNEL: {\n              message = `The value passed to the --release-channel flag is \"${inferredValue}\", but it is set to \"${currentlyConfiguredValue}\".`;\n              break;\n            }\n            case UPDATE_URL:\n            case SDK_VERSION:\n            case RUNTIME_VERSION:\n            default:\n              message = `The inferred value is \"${inferredValue}\", but it is set to \"${currentlyConfiguredValue}\".`;\n          }\n          WarningAggregator.addWarningAndroid(`AndroidManifest.xml key \"${key}\"`, message, FYI_URL);\n        }\n      }\n    }\n  }\n\n  if (isLikelyFirstIOSPublish || isLikelyFirstAndroidPublish) {\n    let platformSpecificMessage: string;\n\n    if (isLikelyFirstIOSPublish && !isLikelyFirstAndroidPublish) {\n      platformSpecificMessage =\n        '🚀 It looks like this your first iOS publish for this project! ' +\n        `We've automatically set some configuration values in Expo.plist. `;\n    } else if (!isLikelyFirstIOSPublish && isLikelyFirstAndroidPublish) {\n      platformSpecificMessage =\n        '🚀 It looks like this your first Android publish for this project! ' +\n        `We've automatically set some configuration values in AndroidManifest.xml. `;\n    } else {\n      platformSpecificMessage =\n        '🚀 It looks like this your first publish for this project! ' +\n        `We've automatically set some configuration values in Expo.plist and AndroidManifest.xml. `;\n    }\n\n    logger.global.warn(\n      platformSpecificMessage +\n        `You'll need to make and release a new build before your users can download the update ` +\n        'you just published.'\n    );\n  }\n}\n\n/** The code below here is duplicated from expo-cli currently **/\n\n// TODO: it's silly and kind of fragile that we look at app config to determine\n// the ios project paths. Overall this function needs to be revamped, just a\n// placeholder for now! Make this more robust when we support applying config\n// at any time (currently it's only applied on eject).\nexport function getIOSPaths(projectRoot: string) {\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n\n  const projectName = exp.name;\n  if (!projectName) {\n    throw new Error('Your project needs a name in app.json/app.config.js.');\n  }\n\n  const iosProjectDirectory = path.join(\n    projectRoot,\n    'ios',\n    IOSConfig.XcodeUtils.sanitizedName(projectName)\n  );\n  const iosSupportingDirectory = path.join(\n    projectRoot,\n    'ios',\n    IOSConfig.XcodeUtils.sanitizedName(projectName),\n    'Supporting'\n  );\n  const iconPath = path.join(iosProjectDirectory, 'Assets.xcassets', 'AppIcon.appiconset');\n\n  return {\n    projectName,\n    iosProjectDirectory,\n    iosSupportingDirectory,\n    iconPath,\n  };\n}\n"],"mappings":"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"}