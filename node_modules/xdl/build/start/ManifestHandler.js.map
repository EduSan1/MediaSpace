{"version":3,"file":"ManifestHandler.js","names":["_cachedSignedManifest","manifestString","signedManifest","blacklistedEnvironmentVariables","Set","shouldExposeEnvironmentVariableInManifest","key","has","toUpperCase","startsWith","stripPort","host","URL","hostname","getPackagerOptionsAsync","projectRoot","projectSettings","ProjectSettings","readAsync","bundleUrlPackagerOpts","JSON","parse","stringify","urlType","hostType","getBundleUrlAsync","platform","mainModuleName","queryParams","UrlUtils","constructBundleQueryParams","path","encodeURI","encodeURIComponent","constructBundleUrlAsync","getPlatformFromRequest","headers","toString","getManifestHandler","req","res","next","url","includes","pathname","Doctor","validateWithNetworkAsync","catch","error","ProjectUtils","logError","exp","hostInfo","getManifestResponseFromHeadersAsync","sdkVersion","setHeader","end","Analytics","logEvent","developerTool","Config","e","stack","statusCode","deviceIds","saveDevicesAsync","acceptSignature","getManifestResponseAsync","getExpoGoConfig","debuggerHost","logUrl","Promise","all","constructDebuggerHostAsync","constructLogUrlAsync","developer","tool","packagerOpts","__flipperHack","projectConfig","getConfig","skipSDKVersionRequirement","entryPoint","resolveEntryPoint","Webpack","isTargetingNative","stripJSExtension","createHostInfoAsync","expoGoConfig","hostUri","constructHostUriAsync","manifest","Versions","lteSdkVersion","env","getManifestEnvironment","bundleUrl","ProjectAssets","resolveManifestAssets","resolver","resolve","match","resolveGoogleServicesFile","getManifestStringAsync","code","owner","addSigningDisabledWarning","chalk","bold","learnMore","ConnectionStatus","setIsOffline","seen","reason","logWarning","Object","keys","process","reduce","prev","hostUUID","currentSession","UserManager","getSessionAsync","isOffline","id","ANONYMOUS_USERNAME","slug","getUnsignedManifestString","getSignedManifestStringAsync","UserSettings","getAnonymousIdentifierAsync","server","serverVersion","require","version","serverDriver","serverOS","os","serverOSVersion","release","user","ensureLoggedInAsync","response","ApiV2","clientForUser","postAsync","args","remoteUsername","getCurrentUsernameAsync","remotePackageName","unsignedManifest","signature"],"sources":["../../src/start/ManifestHandler.ts"],"sourcesContent":["import { ExpoAppManifest, ExpoConfig, ExpoGoConfig, getConfig } from '@expo/config';\nimport { JSONObject } from '@expo/json-file';\nimport chalk from 'chalk';\nimport express from 'express';\nimport http from 'http';\nimport os from 'os';\nimport { parse, resolve, URL } from 'url';\n\nimport {\n  Analytics,\n  ANONYMOUS_USERNAME,\n  ApiV2,\n  Config,\n  ConnectionStatus,\n  Doctor,\n  learnMore,\n  ProjectAssets,\n  ProjectSettings,\n  ProjectUtils,\n  resolveEntryPoint,\n  UrlUtils,\n  UserManager,\n  UserSettings,\n  Versions,\n  Webpack,\n} from '../internal';\n\ninterface HostInfo {\n  host: string;\n  server: 'xdl';\n  serverVersion: string;\n  serverDriver: string | null;\n  serverOS: NodeJS.Platform;\n  serverOSVersion: string;\n}\n\ntype PackagerOptions = ProjectSettings.ProjectSettings;\n\ntype CachedSignedManifest =\n  | {\n      manifestString: null;\n      signedManifest: null;\n    }\n  | {\n      manifestString: string;\n      signedManifest: string;\n    };\n\nconst _cachedSignedManifest: CachedSignedManifest = {\n  manifestString: null,\n  signedManifest: null,\n};\n\nconst blacklistedEnvironmentVariables = new Set([\n  'EXPO_APPLE_PASSWORD',\n  'EXPO_ANDROID_KEY_PASSWORD',\n  'EXPO_ANDROID_KEYSTORE_PASSWORD',\n  'EXPO_IOS_DIST_P12_PASSWORD',\n  'EXPO_IOS_PUSH_P12_PASSWORD',\n  'EXPO_CLI_PASSWORD',\n]);\n\nfunction shouldExposeEnvironmentVariableInManifest(key: string) {\n  if (blacklistedEnvironmentVariables.has(key.toUpperCase())) {\n    return false;\n  }\n  return key.startsWith('REACT_NATIVE_') || key.startsWith('EXPO_');\n}\n\nexport function stripPort(host: string | undefined): string | undefined {\n  if (!host) {\n    return host;\n  }\n  return new URL('/', `http://${host}`).hostname;\n}\n\nexport async function getPackagerOptionsAsync(\n  projectRoot: string\n): Promise<[ProjectSettings.ProjectSettings, PackagerOptions]> {\n  // Get packager opts and then copy into bundleUrlPackagerOpts\n  const projectSettings = await ProjectSettings.readAsync(projectRoot);\n  const bundleUrlPackagerOpts = JSON.parse(JSON.stringify(projectSettings));\n  bundleUrlPackagerOpts.urlType = 'http';\n  if (bundleUrlPackagerOpts.hostType === 'redirect') {\n    bundleUrlPackagerOpts.hostType = 'tunnel';\n  }\n  return [projectSettings, bundleUrlPackagerOpts];\n}\n\nexport async function getBundleUrlAsync({\n  projectRoot,\n  platform,\n  projectSettings,\n  bundleUrlPackagerOpts,\n  mainModuleName,\n  hostname,\n}: {\n  platform: string;\n  hostname?: string;\n  mainModuleName: string;\n  projectRoot: string;\n  projectSettings: PackagerOptions;\n  bundleUrlPackagerOpts: PackagerOptions;\n}): Promise<string> {\n  const queryParams = UrlUtils.constructBundleQueryParams(projectRoot, projectSettings);\n\n  const path = `/${encodeURI(mainModuleName)}.bundle?platform=${encodeURIComponent(\n    platform\n  )}&${queryParams}`;\n\n  return (\n    (await UrlUtils.constructBundleUrlAsync(projectRoot, bundleUrlPackagerOpts, hostname)) + path\n  );\n}\n\nfunction getPlatformFromRequest(headers: http.IncomingHttpHeaders): string {\n  return (headers['exponent-platform'] || 'ios').toString();\n}\n\nexport function getManifestHandler(projectRoot: string) {\n  return async (\n    req: express.Request | http.IncomingMessage,\n    res: express.Response | http.ServerResponse,\n    next: (err?: Error) => void\n  ) => {\n    // Only support `/`, `/manifest`, `/index.exp` for the manifest middleware.\n    if (\n      !req.url ||\n      !['/', '/manifest', '/index.exp'].includes(\n        // Strip the query params\n        parse(req.url).pathname || req.url\n      )\n    ) {\n      next();\n      return;\n    }\n\n    try {\n      // We intentionally don't `await`. We want to continue trying even\n      // if there is a potential error in the package.json and don't want to slow\n      // down the request\n      Doctor.validateWithNetworkAsync(projectRoot).catch(error => {\n        ProjectUtils.logError(\n          projectRoot,\n          'expo',\n          `Error: could not load config json at ${projectRoot}: ${error.toString()}`,\n          'doctor-config-json-not-read'\n        );\n      });\n\n      const { manifestString, exp, hostInfo } = await getManifestResponseFromHeadersAsync({\n        projectRoot,\n        headers: req.headers,\n      });\n      const sdkVersion = exp.sdkVersion ?? null;\n\n      // Send the response\n      res.setHeader('Exponent-Server', JSON.stringify(hostInfo));\n      // End the request\n      res.end(manifestString);\n\n      // Log analytics\n      Analytics.logEvent('Serve Manifest', {\n        developerTool: Config.developerTool,\n        sdkVersion,\n      });\n    } catch (e: any) {\n      ProjectUtils.logError(projectRoot, 'expo', e.stack);\n      // 5xx = Server Error HTTP code\n      res.statusCode = 520;\n      res.end(\n        JSON.stringify({\n          error: e.toString(),\n        })\n      );\n    }\n\n    try {\n      const deviceIds = req.headers['expo-dev-client-id'];\n      if (deviceIds) {\n        await ProjectSettings.saveDevicesAsync(projectRoot, deviceIds);\n      }\n    } catch (e: any) {\n      ProjectUtils.logError(projectRoot, 'expo', e.stack);\n    }\n  };\n}\n\nasync function getManifestResponseFromHeadersAsync({\n  projectRoot,\n  headers,\n}: {\n  projectRoot: string;\n  headers: http.IncomingHttpHeaders;\n}): Promise<{ exp: ExpoConfig; manifestString: string; hostInfo: HostInfo }> {\n  // Read from headers\n  const platform = getPlatformFromRequest(headers);\n  const acceptSignature = headers['exponent-accept-signature'];\n  return getManifestResponseAsync({ projectRoot, host: headers.host, platform, acceptSignature });\n}\n\nexport async function getExpoGoConfig({\n  projectRoot,\n  projectSettings,\n  mainModuleName,\n  hostname,\n}: {\n  projectRoot: string;\n  projectSettings: ProjectSettings.ProjectSettings;\n  mainModuleName: string;\n  hostname: string | undefined;\n}): Promise<ExpoGoConfig> {\n  const [debuggerHost, logUrl] = await Promise.all([\n    UrlUtils.constructDebuggerHostAsync(projectRoot, hostname),\n    UrlUtils.constructLogUrlAsync(projectRoot, hostname),\n  ]);\n  return {\n    developer: {\n      tool: Config.developerTool,\n      projectRoot,\n    },\n    packagerOpts: projectSettings,\n    mainModuleName,\n    // Add this string to make Flipper register React Native / Metro as \"running\".\n    // Can be tested by running:\n    // `METRO_SERVER_PORT=19000 open -a flipper.app`\n    // Where 19000 is the port where the Expo project is being hosted.\n    __flipperHack: 'React Native packager is running',\n    debuggerHost,\n    logUrl,\n  };\n}\n\nexport async function getManifestResponseAsync({\n  projectRoot,\n  host,\n  platform,\n  acceptSignature,\n}: {\n  projectRoot: string;\n  platform: string;\n  host?: string;\n  acceptSignature?: string | string[];\n}): Promise<{ exp: ExpoAppManifest; manifestString: string; hostInfo: HostInfo }> {\n  // Read the config\n  const projectConfig = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  // Opt towards newest functionality when expo isn't installed.\n  if (!projectConfig.exp.sdkVersion) {\n    projectConfig.exp.sdkVersion = 'UNVERSIONED';\n  }\n  // Read from headers\n  const hostname = stripPort(host);\n\n  // Get project entry point and initial module\n  let entryPoint = resolveEntryPoint(projectRoot, platform, projectConfig);\n\n  // NOTE(Bacon): Webpack is currently hardcoded to index.bundle on native\n  // in the future (TODO) we should move this logic into a Webpack plugin and use\n  // a generated file name like we do on web.\n  if (Webpack.isTargetingNative()) {\n    entryPoint = 'index.js';\n  }\n  const mainModuleName = UrlUtils.stripJSExtension(entryPoint);\n  // Gather packager and host info\n  const hostInfo = await createHostInfoAsync();\n  const [projectSettings, bundleUrlPackagerOpts] = await getPackagerOptionsAsync(projectRoot);\n  // Create the manifest and set fields within it\n  const expoGoConfig = await getExpoGoConfig({\n    projectRoot,\n    projectSettings,\n    mainModuleName,\n    hostname,\n  });\n  const hostUri = await UrlUtils.constructHostUriAsync(projectRoot, hostname);\n  const manifest: ExpoAppManifest = {\n    ...(projectConfig.exp as ExpoAppManifest),\n    ...expoGoConfig,\n    hostUri,\n  };\n  // Adding the env variables to the Expo manifest is unsafe.\n  // This feature is deprecated in SDK 41 forward.\n  if (manifest.sdkVersion && Versions.lteSdkVersion(manifest, '40.0.0')) {\n    manifest.env = getManifestEnvironment();\n  }\n\n  // Add URLs to the manifest\n  manifest.bundleUrl = await getBundleUrlAsync({\n    projectRoot,\n    platform,\n    projectSettings,\n    bundleUrlPackagerOpts,\n    mainModuleName,\n    hostname,\n  });\n\n  // Resolve all assets and set them on the manifest as URLs\n  await ProjectAssets.resolveManifestAssets({\n    projectRoot,\n    manifest,\n    async resolver(path) {\n      if (Webpack.isTargetingNative()) {\n        // When using our custom dev server, just do assets normally\n        // without the `assets/` subpath redirect.\n        return resolve(manifest.bundleUrl!.match(/^https?:\\/\\/.*?\\//)![0], path);\n      }\n      return manifest.bundleUrl!.match(/^https?:\\/\\/.*?\\//)![0] + 'assets/' + path;\n    },\n  });\n  // The server normally inserts this but if we're offline we'll do it here\n  await ProjectAssets.resolveGoogleServicesFile(projectRoot, manifest);\n\n  // Create the final string\n  let manifestString;\n  try {\n    manifestString = await getManifestStringAsync(manifest, hostInfo.host, acceptSignature);\n  } catch (error: any) {\n    if (error.code === 'UNAUTHORIZED_ERROR' && manifest.owner) {\n      // Don't have permissions for siging, warn and enable offline mode.\n      addSigningDisabledWarning(\n        projectRoot,\n        `This project belongs to ${chalk.bold(\n          `@${manifest.owner}`\n        )} and you have not been granted the appropriate permissions.\\n` +\n          `Please request access from an admin of @${manifest.owner} or change the \"owner\" field to an account you belong to.\\n` +\n          learnMore('https://docs.expo.dev/versions/latest/config/app/#owner')\n      );\n      ConnectionStatus.setIsOffline(true);\n      manifestString = await getManifestStringAsync(manifest, hostInfo.host, acceptSignature);\n    } else if (error.code === 'ENOTFOUND') {\n      // Got a DNS error, i.e. can't access exp.host, warn and enable offline mode.\n      addSigningDisabledWarning(\n        projectRoot,\n        `Could not reach Expo servers, please check if you can access ${\n          error.hostname || 'exp.host'\n        }.`\n      );\n      ConnectionStatus.setIsOffline(true);\n      manifestString = await getManifestStringAsync(manifest, hostInfo.host, acceptSignature);\n    } else {\n      throw error;\n    }\n  }\n\n  return {\n    manifestString,\n    exp: manifest,\n    hostInfo,\n  };\n}\n\nconst addSigningDisabledWarning = (() => {\n  let seen = false;\n  return (projectRoot: string, reason: string) => {\n    if (!seen) {\n      seen = true;\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `${reason}\\nFalling back to offline mode.`,\n        'signing-disabled'\n      );\n    }\n  };\n})();\n\nfunction getManifestEnvironment(): Record<string, any> {\n  return Object.keys(process.env).reduce<Record<string, any>>((prev, key) => {\n    if (shouldExposeEnvironmentVariableInManifest(key)) {\n      prev[key] = process.env[key];\n    }\n    return prev;\n  }, {});\n}\n\nasync function getManifestStringAsync(\n  manifest: ExpoAppManifest,\n  hostUUID: string,\n  acceptSignature?: string | string[]\n): Promise<string> {\n  const currentSession = await UserManager.getSessionAsync();\n  if (!currentSession || ConnectionStatus.isOffline()) {\n    manifest.id = `@${ANONYMOUS_USERNAME}/${manifest.slug}-${hostUUID}`;\n  }\n  if (!acceptSignature) {\n    return JSON.stringify(manifest);\n  } else if (!currentSession || ConnectionStatus.isOffline()) {\n    return getUnsignedManifestString(manifest);\n  } else {\n    return await getSignedManifestStringAsync(manifest, currentSession);\n  }\n}\n\nasync function createHostInfoAsync(): Promise<HostInfo> {\n  const host = await UserSettings.getAnonymousIdentifierAsync();\n\n  return {\n    host,\n    server: 'xdl',\n    serverVersion: require('xdl/package.json').version,\n    serverDriver: Config.developerTool,\n    serverOS: os.platform(),\n    serverOSVersion: os.release(),\n  };\n}\n\nexport async function getSignedManifestStringAsync(\n  manifest: Partial<ExpoAppManifest>,\n  // NOTE: we currently ignore the currentSession that is passed in, see the note below about analytics.\n  currentSession: { sessionSecret?: string; accessToken?: string }\n) {\n  const manifestString = JSON.stringify(manifest);\n  if (_cachedSignedManifest.manifestString === manifestString) {\n    return _cachedSignedManifest.signedManifest;\n  }\n  // WARNING: Removing the following line will regress analytics, see: https://github.com/expo/expo-cli/pull/2357\n  // TODO: make this more obvious from code\n  const user = await UserManager.ensureLoggedInAsync();\n  const { response } = await ApiV2.clientForUser(user).postAsync('manifest/sign', {\n    args: {\n      remoteUsername: manifest.owner ?? (await UserManager.getCurrentUsernameAsync()),\n      remotePackageName: manifest.slug,\n    },\n    manifest: manifest as JSONObject,\n  });\n  _cachedSignedManifest.manifestString = manifestString;\n  _cachedSignedManifest.signedManifest = response;\n  return response;\n}\n\nexport function getUnsignedManifestString(manifest: ExpoConfig) {\n  const unsignedManifest = {\n    manifestString: JSON.stringify(manifest),\n    signature: 'UNSIGNED',\n  };\n  return JSON.stringify(unsignedManifest);\n}\n"],"mappings":"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"}