{"version":3,"file":"startLegacyReactNativeServerAsync.js","names":["treekillAsync","promisify","treekill","METRO_VERBOSE_WARNING","NODE_12_WINDOWS_METRO_ERROR","NODE_12_WINDOWS_METRO_SUGGESTION","_logPackagerOutput","projectRoot","level","data","output","toString","_isIgnorableDuplicateModuleWarning","ProjectUtils","logDebug","_isIgnorableMetroConsoleOutput","_isIgnorableRnpmWarning","includes","logError","replace","test","logInfo","startsWith","reactNativeNodeModulesPath","path","join","reactNativeNodeModulesPattern","escapeRegExp","reactNativeNodeModulesCollisionRegex","RegExp","startReactNativeServerAsync","options","exp","getConfig","verbose","assertValidProjectRoot","stopReactNativeServerAsync","Watchman","addToPathAsync","unblockAndGetVersionAsync","packagerPort","getFreePortAsync","metroPort","customLogReporterPath","require","resolve","__dirname","sourceExtsConfig","isTS","isReact","isModern","sourceExts","target","getBareExtensions","getManagedExtensions","packagerOpts","port","nonPersistent","Versions","gteSdkVersion","lteSdkVersion","assetPlugins","resolveFrom","silent","Error","maxWorkers","userPackagerOpts","config","userSourceExts","Set","undefined","cliOpts","key","val","Object","entries","push","process","env","EXPO_DEBUG","reset","cliPath","packagerProcess","child_process","fork","cwd","NODE_OPTIONS","METRO_NODE_OPTIONS","REACT_NATIVE_APP_ROOT","ELECTRON_RUN_AS_NODE","ProjectSettings","setPackagerInfoAsync","packagerPid","pid","on","stdout","stderr","setEncoding","pipe","split","exitPromise","Promise","reject","once","code","packagerUrl","UrlUtils","constructBundleUrlAsync","urlType","hostType","race","_waitForRunningAsync","packagerInfo","readPackagerInfoAsync","e","url","retries","response","axios","request","responseType","proxy","message","delayAsync"],"sources":["../../src/start/startLegacyReactNativeServerAsync.ts"],"sourcesContent":["import { ExpoConfig, getConfig } from '@expo/config';\nimport { getBareExtensions, getManagedExtensions } from '@expo/config/paths';\nimport axios from 'axios';\nimport child_process from 'child_process';\nimport escapeRegExp from 'lodash/escapeRegExp';\nimport path from 'path';\nimport resolveFrom from 'resolve-from';\nimport split from 'split';\nimport treekill from 'tree-kill';\nimport { promisify } from 'util';\n\nimport {\n  assertValidProjectRoot,\n  delayAsync,\n  getFreePortAsync,\n  ProjectSettings,\n  ProjectUtils,\n  StartDevServerOptions,\n  UrlUtils,\n  Versions,\n  Watchman,\n} from '../internal';\n\nconst treekillAsync = promisify<number, string>(treekill);\n\n// The --verbose flag is intended for react-native-cli/metro, not expo-cli\nconst METRO_VERBOSE_WARNING = 'Run CLI with --verbose flag for more details.';\n\n// Remove these constants and related code when SDK35 isn't supported anymore\n// Context: https://github.com/expo/expo-cli/issues/1074\nconst NODE_12_WINDOWS_METRO_ERROR = `Invalid regular expression: /(.*\\\\__fixtures__\\\\.*|node_modules[\\\\]react[\\\\]dist[\\\\].*|website\\\\node_modules\\\\.*|heapCapture\\\\bundle.js|.*\\\\__tests__\\\\.*)$/: Unterminated character class`;\nconst NODE_12_WINDOWS_METRO_SUGGESTION = `\\nUnable to start the project due to a documented incompatibility between Node 12 LTS and Expo SDK 35 on Windows.\nPlease refer to this GitHub comment for a solution:\nhttps://github.com/expo/expo-cli/issues/1074#issuecomment-559220752\\n`;\n\nfunction _logPackagerOutput(projectRoot: string, level: string, data: object) {\n  let output = data.toString();\n  if (!output) {\n    return;\n  }\n  // Temporarily hide warnings about duplicate providesModule declarations\n  // under react-native\n  if (_isIgnorableDuplicateModuleWarning(projectRoot, level, output)) {\n    ProjectUtils.logDebug(\n      projectRoot,\n      'expo',\n      `Suppressing @providesModule warning: ${output}`,\n      'project-suppress-providesmodule-warning'\n    );\n    return;\n  }\n  if (_isIgnorableMetroConsoleOutput(output) || _isIgnorableRnpmWarning(output)) {\n    ProjectUtils.logDebug(projectRoot, 'expo', output);\n    return;\n  }\n\n  if (output.includes(NODE_12_WINDOWS_METRO_ERROR)) {\n    ProjectUtils.logError(projectRoot, 'expo', NODE_12_WINDOWS_METRO_SUGGESTION);\n    return;\n  }\n\n  if (output.includes(METRO_VERBOSE_WARNING)) {\n    output = output.replace(METRO_VERBOSE_WARNING, '');\n  }\n\n  if (/^Scanning folders for symlinks in /.test(output)) {\n    ProjectUtils.logDebug(projectRoot, 'metro', output);\n    return;\n  }\n  if (level === 'info') {\n    ProjectUtils.logInfo(projectRoot, 'metro', output);\n  } else {\n    ProjectUtils.logError(projectRoot, 'metro', output);\n  }\n}\n\nfunction _isIgnorableMetroConsoleOutput(output: string) {\n  // As of react-native 0.61.x, Metro prints console logs from the device to console, without\n  // passing them through the custom log reporter.\n  //\n  // Managed apps have a separate remote logging implementation included in the Expo SDK,\n  // (see: _handleDeviceLogs), so we can just ignore these device logs from Metro.\n  // if (/^ () /)\n  //\n  // These logs originate from:\n  // https://github.com/facebook/metro/blob/e8181fb9db7db31adf7d1ed9ab840f54449ef238/packages/metro/src/lib/logToConsole.js#L50\n  return /^\\s+(INFO|WARN|LOG|GROUP|DEBUG) /.test(output);\n}\n\nfunction _isIgnorableRnpmWarning(output: string) {\n  return output.startsWith(\n    'warn The following packages use deprecated \"rnpm\" config that will stop working from next release'\n  );\n}\n\nfunction _isIgnorableDuplicateModuleWarning(\n  projectRoot: string,\n  level: string,\n  output: string\n): boolean {\n  if (\n    level !== 'error' ||\n    !output.startsWith('jest-haste-map: @providesModule naming collision:')\n  ) {\n    return false;\n  }\n\n  const reactNativeNodeModulesPath = path.join(\n    projectRoot,\n    'node_modules',\n    'react-native',\n    'node_modules'\n  );\n  const reactNativeNodeModulesPattern = escapeRegExp(reactNativeNodeModulesPath);\n  const reactNativeNodeModulesCollisionRegex = new RegExp(\n    `Paths: ${reactNativeNodeModulesPattern}.+ collides with ${reactNativeNodeModulesPattern}.+`\n  );\n  return reactNativeNodeModulesCollisionRegex.test(output);\n}\n\nexport async function startReactNativeServerAsync({\n  projectRoot,\n  options = {},\n  exp = getConfig(projectRoot).exp,\n  verbose = true,\n}: {\n  projectRoot: string;\n  options: StartDevServerOptions;\n  exp?: ExpoConfig;\n  verbose?: boolean;\n}): Promise<void> {\n  assertValidProjectRoot(projectRoot);\n  await stopReactNativeServerAsync(projectRoot);\n  await Watchman.addToPathAsync(); // Attempt to fix watchman if it's hanging\n  await Watchman.unblockAndGetVersionAsync(projectRoot);\n\n  let packagerPort = await getFreePortAsync(options.metroPort || 19001); // Create packager options\n\n  const customLogReporterPath: string = require.resolve(\n    path.join(__dirname, '../../build/reporter')\n  );\n\n  // TODO: Bacon: Support .mjs (short-lived JS modules extension that some packages use)\n  const sourceExtsConfig = { isTS: true, isReact: true, isModern: false };\n  const sourceExts =\n    options.target === 'bare'\n      ? getBareExtensions([], sourceExtsConfig)\n      : getManagedExtensions([], sourceExtsConfig);\n\n  let packagerOpts: { [key: string]: any } = {\n    port: packagerPort,\n    customLogReporterPath,\n    sourceExts,\n  };\n\n  if (options.nonPersistent && !Versions.gteSdkVersion(exp, '33.0.0')) {\n    // Expo SDK -32 | React Native -57\n    packagerOpts.nonPersistent = true;\n  }\n\n  if (!Versions.lteSdkVersion(exp, '32.0.0')) {\n    // Expo SDK +33 | React Native +59.8 (hooks): Add asset plugins\n\n    // starting with SDK 37, we bundle this plugin with the expo-asset package instead of expo,\n    // so check there first and fall back to expo if we can't find it in expo-asset\n    packagerOpts.assetPlugins = resolveFrom.silent(projectRoot, 'expo-asset/tools/hashAssetFiles');\n    if (!packagerOpts.assetPlugins) {\n      packagerOpts.assetPlugins = resolveFrom.silent(projectRoot, 'expo/tools/hashAssetFiles');\n      if (!packagerOpts.assetPlugins) {\n        throw new Error(\n          'Unable to find the expo-asset package in the current project. Install it and try again.'\n        );\n      }\n    }\n  }\n\n  if (options.maxWorkers) {\n    packagerOpts['max-workers'] = options.maxWorkers;\n  }\n\n  if (Versions.lteSdkVersion(exp, '15.0.0')) {\n    // Expo SDK -15 | React Native -42: customLogReporterPath is not supported\n    delete packagerOpts.customLogReporterPath;\n  }\n  const userPackagerOpts = exp.packagerOpts;\n\n  if (userPackagerOpts) {\n    // The RN CLI expects rn-cli.config.js's path to be absolute. We use the\n    // project root to resolve relative paths since that was the original\n    // behavior of the RN CLI.\n    if (userPackagerOpts.config) {\n      userPackagerOpts.config = path.resolve(projectRoot, userPackagerOpts.config);\n    }\n\n    // Provide a fallback if the value isn't given\n    const userSourceExts = userPackagerOpts.sourceExts ?? [];\n\n    packagerOpts = {\n      ...packagerOpts,\n      ...userPackagerOpts,\n      // In order to prevent people from forgetting to include the .expo extension or other things\n      // NOTE(brentvatne): we should probably do away with packagerOpts soon in favor of @expo/metro-config!\n      sourceExts: [...new Set([...packagerOpts.sourceExts, ...userSourceExts])],\n    };\n\n    if (userPackagerOpts.port !== undefined && userPackagerOpts.port !== null) {\n      packagerPort = userPackagerOpts.port;\n    }\n  }\n  const cliOpts = ['start'];\n  for (const [key, val] of Object.entries(packagerOpts)) {\n    // If the packager opt value is boolean, don't set\n    // --[opt] [value], just set '--opt'\n    if (val && typeof val === 'boolean') {\n      cliOpts.push(`--${key}`);\n    } else if (val) {\n      cliOpts.push(`--${key}`, val);\n    }\n  }\n\n  if (process.env.EXPO_DEBUG) {\n    cliOpts.push('--verbose');\n  }\n\n  if (options.reset) {\n    cliOpts.push('--reset-cache');\n  }\n\n  // Get the CLI path\n  const cliPath = resolveFrom(projectRoot, 'react-native/local-cli/cli.js');\n\n  // Run the copy of Node that's embedded in Electron by setting the\n  // ELECTRON_RUN_AS_NODE environment variable\n  // Note: the CLI script sets up graceful-fs and sets ulimit to 4096 in the\n  // child process\n  const packagerProcess = child_process.fork(cliPath, cliOpts, {\n    cwd: projectRoot,\n    env: {\n      ...process.env,\n      NODE_OPTIONS: process.env.METRO_NODE_OPTIONS,\n      REACT_NATIVE_APP_ROOT: projectRoot,\n      ELECTRON_RUN_AS_NODE: '1',\n    },\n    silent: true,\n  });\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    packagerPort,\n    packagerPid: packagerProcess.pid,\n  }); // TODO: do we need this? don't know if it's ever called\n  process.on('exit', () => {\n    treekill(packagerProcess.pid);\n  });\n  if (!packagerProcess.stdout) {\n    throw new Error('Expected spawned process to have a stdout stream, but none was found.');\n  }\n  if (!packagerProcess.stderr) {\n    throw new Error('Expected spawned process to have a stderr stream, but none was found.');\n  }\n  packagerProcess.stdout.setEncoding('utf8');\n  packagerProcess.stderr.setEncoding('utf8');\n  packagerProcess.stdout.pipe(split()).on('data', data => {\n    if (verbose) {\n      _logPackagerOutput(projectRoot, 'info', data);\n    }\n  });\n  packagerProcess.stderr.on('data', data => {\n    if (verbose) {\n      _logPackagerOutput(projectRoot, 'error', data);\n    }\n  });\n  const exitPromise = new Promise<void>((resolve, reject) => {\n    packagerProcess.once('exit', async code => {\n      ProjectUtils.logDebug(projectRoot, 'expo', `Metro Bundler process exited with code ${code}`);\n      if (code) {\n        reject(new Error(`Metro Bundler process exited with code ${code}`));\n      } else {\n        resolve();\n      }\n      try {\n        await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n          packagerPort: null,\n          packagerPid: null,\n        });\n      } catch {}\n    });\n  });\n  const packagerUrl = await UrlUtils.constructBundleUrlAsync(projectRoot, {\n    urlType: 'http',\n    hostType: 'localhost',\n  });\n  await Promise.race([_waitForRunningAsync(projectRoot, `${packagerUrl}/status`), exitPromise]);\n}\n\nexport async function stopReactNativeServerAsync(projectRoot: string): Promise<void> {\n  assertValidProjectRoot(projectRoot);\n  const packagerInfo = await ProjectSettings.readPackagerInfoAsync(projectRoot);\n  if (!packagerInfo.packagerPort || !packagerInfo.packagerPid) {\n    ProjectUtils.logDebug(projectRoot, 'expo', `No packager found for project at ${projectRoot}.`);\n    return;\n  }\n  ProjectUtils.logDebug(\n    projectRoot,\n    'expo',\n    `Killing packager process tree: ${packagerInfo.packagerPid}`\n  );\n  try {\n    await treekillAsync(packagerInfo.packagerPid, 'SIGKILL');\n  } catch (e: any) {\n    ProjectUtils.logDebug(projectRoot, 'expo', `Error stopping packager process: ${e.toString()}`);\n  }\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    packagerPort: null,\n    packagerPid: null,\n  });\n}\n\nasync function _waitForRunningAsync(\n  projectRoot: string,\n  url: string,\n  retries: number = 300\n): Promise<true> {\n  try {\n    const response = await axios.request({\n      url,\n      responseType: 'text',\n      proxy: false,\n    });\n    if (/packager-status:running/.test(response.data)) {\n      return true;\n    } else if (retries === 0) {\n      ProjectUtils.logError(\n        projectRoot,\n        'expo',\n        `Could not get status from Metro bundler. Server response: ${response.data}`\n      );\n    }\n  } catch (e: any) {\n    if (retries === 0) {\n      ProjectUtils.logError(\n        projectRoot,\n        'expo',\n        `Could not get status from Metro bundler. ${e.message}`\n      );\n    }\n  }\n\n  if (retries <= 0) {\n    throw new Error('Connecting to Metro bundler failed.');\n  } else {\n    await delayAsync(100);\n    return _waitForRunningAsync(projectRoot, url, retries - 1);\n  }\n}\n"],"mappings":"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"}