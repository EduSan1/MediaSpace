{"version":3,"file":"Webpack.js","names":["WEBPACK_LOG_TAG","webpackDevServerInstance","webpackServerPort","customMessageSocketBroadcaster","clearWebCacheAsync","projectRoot","mode","cacheFolder","path","join","ProjectUtils","logInfo","chalk","dim","fs","remove","_isTargetingNative","includes","process","env","EXPO_WEBPACK_PLATFORM","isTargetingNative","broadcastMessage","message","data","WebpackDevServer","hackyConvertedMessage","sockWrite","sockets","createNativeDevServerMiddleware","port","compiler","forceManifestType","nativeMiddleware","createDevServerMiddleware","logger","getLogger","watchFolders","useExpoUpdatesManifest","middleware","ExpoUpdatesManifestHandler","getManifestHandler","ManifestHandler","use","createSymbolicateMiddleware","attachNativeDevServerMiddlewareToDevServer","server","attachToServer","messageSocketEndpoint","eventsSocketEndpoint","messageSocket","eventsSocket","broadcast","logReporter","LogReporter","reportEvent","attachInspectorProxy","startAsync","options","stopAsync","logError","red","fullOptions","transformCLIOptions","getWebpackConfigEnvFromBundlingOptionsAsync","clear","https","SSL_CRT_FILE","SSL_KEY_FILE","ssl","getSSLCertAsync","name","directory","certPath","keyPath","config","loadConfigAsync","getAvailablePortAsync","defaultPort","underline","protocol","ProjectSettings","setPackagerInfoAsync","expoServerPort","packagerPort","webpack","devServer","before","originalBefore","bind","app","listen","WebpackEnvironment","HOST","error","onWebpackFinished","host","ip","address","url","originalClose","close","callback","err","finally","location","Promise","res","openAsync","openProjectAsync","compileWebAppAsync","warnings","resolve","reject","run","stats","messages","formatWebpackMessages","errors","_showErrors","_showWarnings","toJson","all","length","XDLError","getenv","boolish","logWarning","yellow","bundleWebAppAsync","green","bundleAsync","offline","Error","getUrlAsync","getProtocolAsync","readAsync","DEFAULT_PORT","choosePortAsync","setMode","BABEL_ENV","NODE_ENV","validateBoolOption","value","defaultValue","isImageEditingEnabled","pwa","applyOptionsToProjectSettingsAsync","newSettings","Object","keys","setAsync","dev","webpackEnv","console","log","magenta","result","devcert","certificateFor","key","cert","folder","ensureDir","writeFile","applyEnvironmentVariables","isDebugModeEnabled","bgYellow","black","output","optimization","devtoolLineToLine","pathinfo","namedModules","namedChunks","moduleIds","chunkIds","splitChunks","assign","argv","projectWebpackConfig","existsSync","webpackConfig","require","loadDefaultConfigAsync","UrlUtils","constructWebAppUrlAsync","hostType","openBrowserAsync","success","e","Logger","global"],"sources":["../src/Webpack.ts"],"sourcesContent":["import type Log from '@expo/bunyan';\nimport {\n  attachInspectorProxy,\n  createDevServerMiddleware,\n  LogReporter,\n  MessageSocket,\n} from '@expo/dev-server';\nimport { createSymbolicateMiddleware } from '@expo/dev-server/build/webpack/symbolicateMiddleware';\nimport * as devcert from '@expo/devcert';\nimport openBrowserAsync from 'better-opn';\nimport chalk from 'chalk';\nimport fs from 'fs-extra';\nimport getenv from 'getenv';\nimport http from 'http';\nimport * as path from 'path';\nimport formatWebpackMessages from 'react-dev-utils/formatWebpackMessages';\nimport webpack from 'webpack';\nimport WebpackDevServer from 'webpack-dev-server';\n\nimport {\n  choosePortAsync,\n  ExpoUpdatesManifestHandler,\n  ip,\n  Logger,\n  ManifestHandler,\n  ProjectSettings,\n  ProjectUtils,\n  UrlUtils,\n  WebpackEnvironment,\n  XDLError,\n} from './internal';\n\nconst WEBPACK_LOG_TAG = 'expo';\n\ntype DevServer = WebpackDevServer | http.Server;\n\nlet webpackDevServerInstance: DevServer | null = null;\nlet webpackServerPort: number | null = null;\n\ninterface WebpackSettings {\n  url: string;\n  server: DevServer;\n  port: number;\n  protocol: 'http' | 'https';\n  host?: string;\n}\n\ntype CLIWebOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  pwa?: boolean;\n  nonInteractive?: boolean;\n  port?: number;\n  onWebpackFinished?: (error?: Error) => void;\n  forceManifestType?: 'classic' | 'expo-updates';\n};\n\ntype BundlingOptions = {\n  dev?: boolean;\n  clear?: boolean;\n  port?: number;\n  pwa?: boolean;\n  isImageEditingEnabled?: boolean;\n  webpackEnv?: object;\n  mode?: 'development' | 'production' | 'test' | 'none';\n  https?: boolean;\n  nonInteractive?: boolean;\n  onWebpackFinished?: (error?: Error) => void;\n};\n\ntype WebpackConfiguration = webpack.Configuration;\n\nexport type WebEnvironment = {\n  projectRoot: string;\n  isImageEditingEnabled: boolean;\n  // deprecated\n  pwa: boolean;\n  mode: 'development' | 'production' | 'test' | 'none';\n  https: boolean;\n  logger: Log;\n};\n\n// A custom message websocket broadcaster used to send messages to a React Native runtime.\nlet customMessageSocketBroadcaster:\n  | undefined\n  | ((message: string, data?: Record<string, any>) => void);\n\nasync function clearWebCacheAsync(projectRoot: string, mode: string): Promise<void> {\n  const cacheFolder = path.join(projectRoot, '.expo', 'web', 'cache', mode);\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    chalk.dim(`Clearing ${mode} cache directory...`)\n  );\n  try {\n    await fs.remove(cacheFolder);\n  } catch {}\n}\n\n// Temporary hack while we implement multi-bundler dev server proxy.\nconst _isTargetingNative: boolean = ['ios', 'android'].includes(\n  process.env.EXPO_WEBPACK_PLATFORM || ''\n);\n\nexport function isTargetingNative() {\n  return _isTargetingNative;\n}\n\nexport type WebpackDevServerResults = {\n  server: DevServer;\n  location: Omit<WebpackSettings, 'server'>;\n  messageSocket: MessageSocket;\n};\n\nexport async function broadcastMessage(message: 'reload' | string, data?: any) {\n  if (!webpackDevServerInstance || !(webpackDevServerInstance instanceof WebpackDevServer)) {\n    return;\n  }\n\n  // Allow any message on native\n  if (customMessageSocketBroadcaster) {\n    customMessageSocketBroadcaster(message, data);\n    return;\n  }\n\n  if (message !== 'reload') {\n    // TODO:\n    // Webpack currently only supports reloading the client (browser),\n    // remove this when we have custom sockets, and native support.\n    return;\n  }\n\n  // TODO:\n  // Default webpack-dev-server sockets use \"content-changed\" instead of \"reload\" (what we use on native).\n  // For now, just manually convert the value so our CLI interface can be unified.\n  const hackyConvertedMessage = message === 'reload' ? 'content-changed' : message;\n\n  webpackDevServerInstance.sockWrite(webpackDevServerInstance.sockets, hackyConvertedMessage, data);\n}\n\nfunction createNativeDevServerMiddleware(\n  projectRoot: string,\n  {\n    port,\n    compiler,\n    forceManifestType,\n  }: { port: number; compiler: webpack.Compiler; forceManifestType?: 'classic' | 'expo-updates' }\n) {\n  if (!isTargetingNative()) {\n    return null;\n  }\n  const nativeMiddleware = createDevServerMiddleware(projectRoot, {\n    logger: ProjectUtils.getLogger(projectRoot),\n    port,\n    watchFolders: [projectRoot],\n  });\n  // Add manifest middleware to the other middleware.\n  // TODO: Move this in to expo/dev-server.\n\n  const useExpoUpdatesManifest = forceManifestType === 'expo-updates';\n\n  const middleware = useExpoUpdatesManifest\n    ? ExpoUpdatesManifestHandler.getManifestHandler(projectRoot)\n    : ManifestHandler.getManifestHandler(projectRoot);\n\n  nativeMiddleware.middleware.use(middleware).use(\n    '/symbolicate',\n    createSymbolicateMiddleware({\n      projectRoot,\n      compiler,\n      logger: nativeMiddleware.logger,\n    })\n  );\n  return nativeMiddleware;\n}\n\nfunction attachNativeDevServerMiddlewareToDevServer(\n  projectRoot: string,\n  {\n    server,\n    middleware,\n    logger,\n    // Expo SDK 44 and lower\n    attachToServer,\n    // React Native +68 -- Expo SDK 45 and higher\n    messageSocketEndpoint,\n    eventsSocketEndpoint,\n  }: { server: http.Server } & ReturnType<typeof createNativeDevServerMiddleware>\n) {\n  if (attachToServer) {\n    // Hook up the React Native WebSockets to the Webpack dev server.\n    const { messageSocket, eventsSocket } = attachToServer(server);\n\n    customMessageSocketBroadcaster = messageSocket.broadcast;\n\n    const logReporter = new LogReporter(logger);\n    logReporter.reportEvent = eventsSocket.reportEvent;\n\n    attachInspectorProxy(projectRoot, {\n      middleware,\n      server,\n    });\n  } else {\n    // React Native +68\n    const logReporter = new LogReporter(logger);\n\n    logReporter.reportEvent = eventsSocketEndpoint.reportEvent;\n\n    customMessageSocketBroadcaster = messageSocketEndpoint.broadcast;\n\n    attachInspectorProxy(projectRoot, {\n      middleware,\n      server,\n    });\n  }\n}\n\nexport async function startAsync(\n  projectRoot: string,\n  options: CLIWebOptions = {}\n): Promise<WebpackDevServerResults | null> {\n  await stopAsync(projectRoot);\n\n  if (webpackDevServerInstance) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red(`Webpack is already running.`));\n    return null;\n  }\n\n  const fullOptions = transformCLIOptions(options);\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, fullOptions);\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  if (env.https) {\n    if (!process.env.SSL_CRT_FILE || !process.env.SSL_KEY_FILE) {\n      const ssl = await getSSLCertAsync({\n        name: 'localhost',\n        directory: projectRoot,\n      });\n      if (ssl) {\n        process.env.SSL_CRT_FILE = ssl.certPath;\n        process.env.SSL_KEY_FILE = ssl.keyPath;\n      }\n    }\n  }\n\n  const config = await loadConfigAsync(env);\n  const port = await getAvailablePortAsync({\n    projectRoot,\n    defaultPort: options.port,\n  });\n\n  webpackServerPort = port;\n\n  ProjectUtils.logInfo(\n    projectRoot,\n    WEBPACK_LOG_TAG,\n    `Starting Webpack on port ${webpackServerPort} in ${chalk.underline(env.mode)} mode.`\n  );\n\n  const protocol = env.https ? 'https' : 'http';\n\n  if (isTargetingNative()) {\n    await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n      expoServerPort: webpackServerPort,\n      packagerPort: webpackServerPort,\n    });\n  }\n\n  // Create a webpack compiler that is configured with custom messages.\n  const compiler = webpack(config);\n\n  // Create the middleware required for interacting with a native runtime (Expo Go, or a development build).\n  let nativeMiddleware: ReturnType<typeof createNativeDevServerMiddleware> | null = null;\n\n  if (config.devServer?.before) {\n    nativeMiddleware = createNativeDevServerMiddleware(projectRoot, {\n      port,\n      compiler,\n      forceManifestType: options.forceManifestType,\n    });\n    // Inject the native manifest middleware.\n    const originalBefore = config.devServer.before.bind(config.devServer.before);\n    config.devServer.before = (app, server, compiler) => {\n      originalBefore(app, server, compiler);\n\n      if (nativeMiddleware?.middleware) {\n        app.use(nativeMiddleware.middleware);\n      }\n    };\n  }\n\n  const server = new WebpackDevServer(compiler, config.devServer);\n  // Launch WebpackDevServer.\n  server.listen(port, WebpackEnvironment.HOST, function (this: http.Server, error) {\n    if (nativeMiddleware) {\n      attachNativeDevServerMiddlewareToDevServer(projectRoot, {\n        server: this,\n        ...nativeMiddleware,\n      });\n    }\n    if (error) {\n      ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, error.message);\n    }\n    if (typeof options.onWebpackFinished === 'function') {\n      options.onWebpackFinished(error);\n    }\n  });\n\n  webpackDevServerInstance = server;\n\n  await ProjectSettings.setPackagerInfoAsync(projectRoot, {\n    webpackServerPort,\n  });\n\n  const host = ip.address();\n  const url = `${protocol}://${host}:${port}`;\n\n  // Extend the close method to ensure that we clean up the local info.\n  const originalClose = server.close.bind(server);\n\n  server.close = (callback?: (err?: Error) => void) => {\n    return originalClose((err?: Error) => {\n      ProjectSettings.setPackagerInfoAsync(projectRoot, {\n        webpackServerPort: null,\n      }).finally(() => {\n        callback?.(err);\n        webpackDevServerInstance = null;\n        webpackServerPort = null;\n      });\n    });\n  };\n\n  return {\n    server,\n    location: {\n      url,\n      port,\n      protocol,\n      host,\n    },\n    // Match the native protocol.\n    messageSocket: {\n      broadcast: broadcastMessage,\n    },\n  };\n}\n\nexport async function stopAsync(projectRoot: string): Promise<void> {\n  if (webpackDevServerInstance) {\n    await new Promise(res => {\n      if (webpackDevServerInstance) {\n        ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, '\\u203A Stopping Webpack server');\n        webpackDevServerInstance.close(res);\n      }\n    });\n  }\n}\n\nexport async function openAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  if (!webpackDevServerInstance) {\n    await startAsync(projectRoot, options);\n  }\n  await openProjectAsync(projectRoot);\n}\n\nasync function compileWebAppAsync(projectRoot: string, compiler: webpack.Compiler): Promise<any> {\n  // We generate the stats.json file in the webpack-config\n  const { warnings } = await new Promise((resolve, reject) =>\n    compiler.run((error, stats) => {\n      let messages;\n      if (error) {\n        if (!error.message) {\n          return reject(error);\n        }\n        messages = formatWebpackMessages({\n          errors: [error.message],\n          warnings: [],\n          _showErrors: true,\n          _showWarnings: true,\n        });\n      } else {\n        messages = formatWebpackMessages(\n          stats.toJson({ all: false, warnings: true, errors: true })\n        );\n      }\n\n      if (messages.errors.length) {\n        // Only keep the first error. Others are often indicative\n        // of the same problem, but confuse the reader with noise.\n        if (messages.errors.length > 1) {\n          messages.errors.length = 1;\n        }\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.errors.join('\\n\\n')));\n      }\n      if (\n        getenv.boolish('EXPO_WEB_BUILD_STRICT', false) &&\n        getenv.boolish('CI', false) &&\n        messages.warnings.length\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          WEBPACK_LOG_TAG,\n          chalk.yellow(\n            '\\nTreating warnings as errors because `process.env.CI = true` and `process.env.EXPO_WEB_BUILD_STRICT = true`. \\n' +\n              'Most CI servers set it automatically.\\n'\n          )\n        );\n        return reject(new XDLError('WEBPACK_BUNDLE', messages.warnings.join('\\n\\n')));\n      }\n      resolve({\n        warnings: messages.warnings,\n      });\n    })\n  );\n  return { warnings };\n}\n\nasync function bundleWebAppAsync(projectRoot: string, config: WebpackConfiguration) {\n  const compiler = webpack(config);\n\n  try {\n    const { warnings } = await compileWebAppAsync(projectRoot, compiler);\n    if (warnings.length) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        WEBPACK_LOG_TAG,\n        chalk.yellow('Compiled with warnings.\\n')\n      );\n      ProjectUtils.logWarning(projectRoot, WEBPACK_LOG_TAG, warnings.join('\\n\\n'));\n    } else {\n      ProjectUtils.logInfo(projectRoot, WEBPACK_LOG_TAG, chalk.green('Compiled successfully.\\n'));\n    }\n  } catch (error: any) {\n    ProjectUtils.logError(projectRoot, WEBPACK_LOG_TAG, chalk.red('Failed to compile.\\n'));\n    throw error;\n  }\n}\n\nexport async function bundleAsync(projectRoot: string, options?: BundlingOptions): Promise<void> {\n  const fullOptions = transformCLIOptions({\n    ...options,\n  });\n\n  const env = await getWebpackConfigEnvFromBundlingOptionsAsync(projectRoot, {\n    ...fullOptions,\n    // Force production\n    mode: 'production',\n  });\n\n  // @ts-ignore\n  if (typeof env.offline !== 'undefined') {\n    throw new Error(\n      'offline support must be added manually: https://expo.fyi/enabling-web-service-workers'\n    );\n  }\n\n  if (fullOptions.clear) {\n    await clearWebCacheAsync(projectRoot, env.mode);\n  }\n\n  const config = await loadConfigAsync(env);\n  await bundleWebAppAsync(projectRoot, config);\n}\n\n/**\n * Get the URL for the running instance of Webpack dev server.\n *\n * @param projectRoot\n */\nexport async function getUrlAsync(projectRoot: string): Promise<string | null> {\n  if (!webpackDevServerInstance) {\n    return null;\n  }\n  const host = ip.address();\n  const protocol = await getProtocolAsync(projectRoot);\n  return `${protocol}://${host}:${webpackServerPort}`;\n}\n\nasync function getProtocolAsync(projectRoot: string): Promise<'http' | 'https'> {\n  // TODO: Bacon: Handle when not in expo\n  const { https } = await ProjectSettings.readAsync(projectRoot);\n  return https === true ? 'https' : 'http';\n}\n\nasync function getAvailablePortAsync(options: {\n  host?: string;\n  defaultPort?: number;\n  projectRoot: string;\n}): Promise<number> {\n  try {\n    const defaultPort =\n      'defaultPort' in options && options.defaultPort\n        ? options.defaultPort\n        : WebpackEnvironment.DEFAULT_PORT;\n    const port = await choosePortAsync(options.projectRoot, {\n      defaultPort,\n      host: 'host' in options && options.host ? options.host : WebpackEnvironment.HOST,\n    });\n    if (!port) {\n      throw new Error(`Port ${defaultPort} not available.`);\n    }\n    return port;\n  } catch (error: any) {\n    throw new XDLError('NO_PORT_FOUND', error.message);\n  }\n}\n\nfunction setMode(mode: 'development' | 'production' | 'test' | 'none'): void {\n  process.env.BABEL_ENV = mode;\n  process.env.NODE_ENV = mode;\n}\n\nfunction validateBoolOption(name: string, value: unknown, defaultValue: boolean): boolean {\n  if (typeof value === 'undefined') {\n    value = defaultValue;\n  }\n\n  if (typeof value !== 'boolean') {\n    throw new XDLError('WEBPACK_INVALID_OPTION', `'${name}' option must be a boolean.`);\n  }\n\n  return value;\n}\n\nfunction transformCLIOptions(options: CLIWebOptions): BundlingOptions {\n  // Transform the CLI flags into more explicit values\n  return {\n    ...options,\n\n    isImageEditingEnabled: options.pwa,\n  };\n}\n\nasync function applyOptionsToProjectSettingsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<ProjectSettings.Settings> {\n  const newSettings: Partial<ProjectSettings.Settings> = {};\n  // Change settings before reading them\n  if (typeof options.https === 'boolean') {\n    newSettings.https = options.https;\n  }\n\n  if (Object.keys(newSettings).length) {\n    await ProjectSettings.setAsync(projectRoot, newSettings);\n  }\n\n  return await ProjectSettings.readAsync(projectRoot);\n}\n\nasync function getWebpackConfigEnvFromBundlingOptionsAsync(\n  projectRoot: string,\n  options: BundlingOptions\n): Promise<WebEnvironment> {\n  const { dev, https } = await applyOptionsToProjectSettingsAsync(projectRoot, options);\n\n  const mode = typeof options.mode === 'string' ? options.mode : dev ? 'development' : 'production';\n\n  const isImageEditingEnabled = validateBoolOption(\n    'isImageEditingEnabled',\n    options.isImageEditingEnabled,\n    true\n  );\n\n  return {\n    projectRoot,\n    pwa: isImageEditingEnabled,\n    logger: ProjectUtils.getLogger(projectRoot),\n    isImageEditingEnabled,\n    mode,\n    https,\n    ...(options.webpackEnv || {}),\n  };\n}\n\nasync function getSSLCertAsync({\n  name,\n  directory,\n}: {\n  name: string;\n  directory: string;\n}): Promise<{ keyPath: string; certPath: string } | false> {\n  console.log(\n    chalk.magenta`Ensuring auto SSL certificate is created (you might need to re-run with sudo)`\n  );\n  try {\n    const result = await devcert.certificateFor(name);\n    if (result) {\n      const { key, cert } = result;\n      const folder = path.join(directory, '.expo', 'web', 'development', 'ssl');\n      await fs.ensureDir(folder);\n\n      const keyPath = path.join(folder, `key-${name}.pem`);\n      await fs.writeFile(keyPath, key);\n\n      const certPath = path.join(folder, `cert-${name}.pem`);\n      await fs.writeFile(certPath, cert);\n\n      return {\n        keyPath,\n        certPath,\n      };\n    }\n    return result;\n  } catch (error: any) {\n    console.log(`Error creating SSL certificates: ${error}`);\n  }\n\n  return false;\n}\n\nfunction applyEnvironmentVariables(config: WebpackConfiguration): WebpackConfiguration {\n  // Use EXPO_DEBUG_WEB=true to enable debugging features for cases where the prod build\n  // has errors that aren't caught in development mode.\n  // Related: https://github.com/expo/expo-cli/issues/614\n  if (WebpackEnvironment.isDebugModeEnabled() && config.mode === 'production') {\n    console.log(chalk.bgYellow.black('Bundling the project in debug mode.'));\n\n    const output = config.output || {};\n    const optimization = config.optimization || {};\n\n    // Enable line to line mapped mode for all/specified modules.\n    // Line to line mapped mode uses a simple SourceMap where each line of the generated source is mapped to the same line of the original source.\n    // It’s a performance optimization. Only use it if your performance need to be better and you are sure that input lines match which generated lines.\n    // true enables it for all modules (not recommended)\n    output.devtoolLineToLine = true;\n\n    // Add comments that describe the file import/exports.\n    // This will make it easier to debug.\n    output.pathinfo = true;\n    // Instead of numeric ids, give modules readable names for better debugging.\n    optimization.namedModules = true;\n    // Instead of numeric ids, give chunks readable names for better debugging.\n    optimization.namedChunks = true;\n    // Readable ids for better debugging.\n    // @ts-ignore Property 'moduleIds' does not exist.\n    optimization.moduleIds = 'named';\n    // if optimization.namedChunks is enabled optimization.chunkIds is set to 'named'.\n    // This will manually enable it just to be safe.\n    // @ts-ignore Property 'chunkIds' does not exist.\n    optimization.chunkIds = 'named';\n\n    if (optimization.splitChunks) {\n      optimization.splitChunks.name = true;\n    }\n\n    Object.assign(config, { output, optimization });\n  }\n\n  return config;\n}\n\nasync function loadConfigAsync(\n  env: WebEnvironment,\n  argv?: string[]\n): Promise<WebpackConfiguration> {\n  setMode(env.mode);\n  // Check if the project has a webpack.config.js in the root.\n  const projectWebpackConfig = path.resolve(env.projectRoot, 'webpack.config.js');\n  let config: WebpackConfiguration;\n  if (fs.existsSync(projectWebpackConfig)) {\n    const webpackConfig = require(projectWebpackConfig);\n    if (typeof webpackConfig === 'function') {\n      config = await webpackConfig(env, argv);\n    } else {\n      config = webpackConfig;\n    }\n  } else {\n    // Fallback to the default expo webpack config.\n    const loadDefaultConfigAsync = require('@expo/webpack-config');\n    config = await loadDefaultConfigAsync(env, argv);\n  }\n  return applyEnvironmentVariables(config);\n}\n\nasync function openProjectAsync(\n  projectRoot: string\n): Promise<{ success: true; url: string } | { success: false; error: Error }> {\n  try {\n    const url = await UrlUtils.constructWebAppUrlAsync(projectRoot, { hostType: 'localhost' });\n    if (!url) {\n      throw new Error('Webpack Dev Server is not running');\n    }\n    openBrowserAsync(url);\n    return { success: true, url };\n  } catch (e: any) {\n    Logger.global.error(`Couldn't start project on web: ${e.message}`);\n    return { success: false, error: e };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAMA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;;;;;AAaA,MAAMA,eAAe,GAAG,MAAxB;AAIA,IAAIC,wBAA0C,GAAG,IAAjD;AACA,IAAIC,iBAAgC,GAAG,IAAvC;AA6CA;AACA,IAAIC,8BAAJ;;AAIA,eAAeC,kBAAf,CAAkCC,WAAlC,EAAuDC,IAAvD,EAAoF;EAClF,MAAMC,WAAW,GAAGC,IAAI,GAACC,IAAL,CAAUJ,WAAV,EAAuB,OAAvB,EAAgC,KAAhC,EAAuC,OAAvC,EAAgDC,IAAhD,CAApB;;EACAI,wBAAA,CAAaC,OAAb,CACEN,WADF,EAEEL,eAFF,EAGEY,gBAAA,CAAMC,GAAN,CAAW,YAAWP,IAAK,qBAA3B,CAHF;;EAKA,IAAI;IACF,MAAMQ,kBAAA,CAAGC,MAAH,CAAUR,WAAV,CAAN;EACD,CAFD,CAEE,MAAM,CAAE;AACX,C,CAED;;;AACA,MAAMS,kBAA2B,GAAG,CAAC,KAAD,EAAQ,SAAR,EAAmBC,QAAnB,CAClCC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IAAqC,EADH,CAApC;;AAIO,SAASC,iBAAT,GAA6B;EAClC,OAAOL,kBAAP;AACD;;AAQM,eAAeM,gBAAf,CAAgCC,OAAhC,EAA4DC,IAA5D,EAAwE;EAC7E,IAAI,CAACvB,wBAAD,IAA6B,EAAEA,wBAAwB,YAAYwB,2BAAtC,CAAjC,EAA0F;IACxF;EACD,CAH4E,CAK7E;;;EACA,IAAItB,8BAAJ,EAAoC;IAClCA,8BAA8B,CAACoB,OAAD,EAAUC,IAAV,CAA9B;IACA;EACD;;EAED,IAAID,OAAO,KAAK,QAAhB,EAA0B;IACxB;IACA;IACA;IACA;EACD,CAhB4E,CAkB7E;EACA;EACA;;;EACA,MAAMG,qBAAqB,GAAGH,OAAO,KAAK,QAAZ,GAAuB,iBAAvB,GAA2CA,OAAzE;EAEAtB,wBAAwB,CAAC0B,SAAzB,CAAmC1B,wBAAwB,CAAC2B,OAA5D,EAAqEF,qBAArE,EAA4FF,IAA5F;AACD;;AAED,SAASK,+BAAT,CACExB,WADF,EAEE;EACEyB,IADF;EAEEC,QAFF;EAGEC;AAHF,CAFF,EAOE;EACA,IAAI,CAACX,iBAAiB,EAAtB,EAA0B;IACxB,OAAO,IAAP;EACD;;EACD,MAAMY,gBAAgB,GAAG,IAAAC,sCAAA,EAA0B7B,WAA1B,EAAuC;IAC9D8B,MAAM,EAAEzB,wBAAA,CAAa0B,SAAb,CAAuB/B,WAAvB,CADsD;IAE9DyB,IAF8D;IAG9DO,YAAY,EAAE,CAAChC,WAAD;EAHgD,CAAvC,CAAzB,CAJA,CASA;EACA;;EAEA,MAAMiC,sBAAsB,GAAGN,iBAAiB,KAAK,cAArD;EAEA,MAAMO,UAAU,GAAGD,sBAAsB,GACrCE,sCAAA,CAA2BC,kBAA3B,CAA8CpC,WAA9C,CADqC,GAErCqC,2BAAA,CAAgBD,kBAAhB,CAAmCpC,WAAnC,CAFJ;EAIA4B,gBAAgB,CAACM,UAAjB,CAA4BI,GAA5B,CAAgCJ,UAAhC,EAA4CI,GAA5C,CACE,cADF,EAEE,IAAAC,oDAAA,EAA4B;IAC1BvC,WAD0B;IAE1B0B,QAF0B;IAG1BI,MAAM,EAAEF,gBAAgB,CAACE;EAHC,CAA5B,CAFF;EAQA,OAAOF,gBAAP;AACD;;AAED,SAASY,0CAAT,CACExC,WADF,EAEE;EACEyC,MADF;EAEEP,UAFF;EAGEJ,MAHF;EAIE;EACAY,cALF;EAME;EACAC,qBAPF;EAQEC;AARF,CAFF,EAYE;EACA,IAAIF,cAAJ,EAAoB;IAClB;IACA,MAAM;MAAEG,aAAF;MAAiBC;IAAjB,IAAkCJ,cAAc,CAACD,MAAD,CAAtD;IAEA3C,8BAA8B,GAAG+C,aAAa,CAACE,SAA/C;IAEA,MAAMC,WAAW,GAAG,KAAIC,wBAAJ,EAAgBnB,MAAhB,CAApB;IACAkB,WAAW,CAACE,WAAZ,GAA0BJ,YAAY,CAACI,WAAvC;IAEA,IAAAC,iCAAA,EAAqBnD,WAArB,EAAkC;MAChCkC,UADgC;MAEhCO;IAFgC,CAAlC;EAID,CAbD,MAaO;IACL;IACA,MAAMO,WAAW,GAAG,KAAIC,wBAAJ,EAAgBnB,MAAhB,CAApB;IAEAkB,WAAW,CAACE,WAAZ,GAA0BN,oBAAoB,CAACM,WAA/C;IAEApD,8BAA8B,GAAG6C,qBAAqB,CAACI,SAAvD;IAEA,IAAAI,iCAAA,EAAqBnD,WAArB,EAAkC;MAChCkC,UADgC;MAEhCO;IAFgC,CAAlC;EAID;AACF;;AAEM,eAAeW,UAAf,CACLpD,WADK,EAELqD,OAAsB,GAAG,EAFpB,EAGoC;EAAA;;EACzC,MAAMC,SAAS,CAACtD,WAAD,CAAf;;EAEA,IAAIJ,wBAAJ,EAA8B;IAC5BS,wBAAA,CAAakD,QAAb,CAAsBvD,WAAtB,EAAmCL,eAAnC,EAAoDY,gBAAA,CAAMiD,GAAN,CAAW,6BAAX,CAApD;;IACA,OAAO,IAAP;EACD;;EAED,MAAMC,WAAW,GAAGC,mBAAmB,CAACL,OAAD,CAAvC;EAEA,MAAMvC,GAAG,GAAG,MAAM6C,2CAA2C,CAAC3D,WAAD,EAAcyD,WAAd,CAA7D;;EAEA,IAAIA,WAAW,CAACG,KAAhB,EAAuB;IACrB,MAAM7D,kBAAkB,CAACC,WAAD,EAAcc,GAAG,CAACb,IAAlB,CAAxB;EACD;;EAED,IAAIa,GAAG,CAAC+C,KAAR,EAAe;IACb,IAAI,CAAChD,OAAO,CAACC,GAAR,CAAYgD,YAAb,IAA6B,CAACjD,OAAO,CAACC,GAAR,CAAYiD,YAA9C,EAA4D;MAC1D,MAAMC,GAAG,GAAG,MAAMC,eAAe,CAAC;QAChCC,IAAI,EAAE,WAD0B;QAEhCC,SAAS,EAAEnE;MAFqB,CAAD,CAAjC;;MAIA,IAAIgE,GAAJ,EAAS;QACPnD,OAAO,CAACC,GAAR,CAAYgD,YAAZ,GAA2BE,GAAG,CAACI,QAA/B;QACAvD,OAAO,CAACC,GAAR,CAAYiD,YAAZ,GAA2BC,GAAG,CAACK,OAA/B;MACD;IACF;EACF;;EAED,MAAMC,MAAM,GAAG,MAAMC,eAAe,CAACzD,GAAD,CAApC;EACA,MAAMW,IAAI,GAAG,MAAM+C,qBAAqB,CAAC;IACvCxE,WADuC;IAEvCyE,WAAW,EAAEpB,OAAO,CAAC5B;EAFkB,CAAD,CAAxC;EAKA5B,iBAAiB,GAAG4B,IAApB;;EAEApB,wBAAA,CAAaC,OAAb,CACEN,WADF,EAEEL,eAFF,EAGG,4BAA2BE,iBAAkB,OAAMU,gBAAA,CAAMmE,SAAN,CAAgB5D,GAAG,CAACb,IAApB,CAA0B,QAHhF;;EAMA,MAAM0E,QAAQ,GAAG7D,GAAG,CAAC+C,KAAJ,GAAY,OAAZ,GAAsB,MAAvC;;EAEA,IAAI7C,iBAAiB,EAArB,EAAyB;IACvB,MAAM4D,2BAAA,CAAgBC,oBAAhB,CAAqC7E,WAArC,EAAkD;MACtD8E,cAAc,EAAEjF,iBADsC;MAEtDkF,YAAY,EAAElF;IAFwC,CAAlD,CAAN;EAID,CAlDwC,CAoDzC;;;EACA,MAAM6B,QAAQ,GAAG,IAAAsD,kBAAA,EAAQV,MAAR,CAAjB,CArDyC,CAuDzC;;EACA,IAAI1C,gBAA2E,GAAG,IAAlF;;EAEA,yBAAI0C,MAAM,CAACW,SAAX,8CAAI,kBAAkBC,MAAtB,EAA8B;IAC5BtD,gBAAgB,GAAGJ,+BAA+B,CAACxB,WAAD,EAAc;MAC9DyB,IAD8D;MAE9DC,QAF8D;MAG9DC,iBAAiB,EAAE0B,OAAO,CAAC1B;IAHmC,CAAd,CAAlD,CAD4B,CAM5B;;IACA,MAAMwD,cAAc,GAAGb,MAAM,CAACW,SAAP,CAAiBC,MAAjB,CAAwBE,IAAxB,CAA6Bd,MAAM,CAACW,SAAP,CAAiBC,MAA9C,CAAvB;;IACAZ,MAAM,CAACW,SAAP,CAAiBC,MAAjB,GAA0B,CAACG,GAAD,EAAM5C,MAAN,EAAcf,QAAd,KAA2B;MAAA;;MACnDyD,cAAc,CAACE,GAAD,EAAM5C,MAAN,EAAcf,QAAd,CAAd;;MAEA,yBAAIE,gBAAJ,8CAAI,kBAAkBM,UAAtB,EAAkC;QAChCmD,GAAG,CAAC/C,GAAJ,CAAQV,gBAAgB,CAACM,UAAzB;MACD;IACF,CAND;EAOD;;EAED,MAAMO,MAAM,GAAG,KAAIrB,2BAAJ,EAAqBM,QAArB,EAA+B4C,MAAM,CAACW,SAAtC,CAAf,CA3EyC,CA4EzC;;EACAxC,MAAM,CAAC6C,MAAP,CAAc7D,IAAd,EAAoB8D,8BAAA,CAAmBC,IAAvC,EAA6C,UAA6BC,KAA7B,EAAoC;IAC/E,IAAI7D,gBAAJ,EAAsB;MACpBY,0CAA0C,CAACxC,WAAD,EAAc;QACtDyC,MAAM,EAAE,IAD8C;QAEtD,GAAGb;MAFmD,CAAd,CAA1C;IAID;;IACD,IAAI6D,KAAJ,EAAW;MACTpF,wBAAA,CAAakD,QAAb,CAAsBvD,WAAtB,EAAmCL,eAAnC,EAAoD8F,KAAK,CAACvE,OAA1D;IACD;;IACD,IAAI,OAAOmC,OAAO,CAACqC,iBAAf,KAAqC,UAAzC,EAAqD;MACnDrC,OAAO,CAACqC,iBAAR,CAA0BD,KAA1B;IACD;EACF,CAbD;EAeA7F,wBAAwB,GAAG6C,MAA3B;EAEA,MAAMmC,2BAAA,CAAgBC,oBAAhB,CAAqC7E,WAArC,EAAkD;IACtDH;EADsD,CAAlD,CAAN;;EAIA,MAAM8F,IAAI,GAAGC,cAAA,CAAGC,OAAH,EAAb;;EACA,MAAMC,GAAG,GAAI,GAAEnB,QAAS,MAAKgB,IAAK,IAAGlE,IAAK,EAA1C,CAnGyC,CAqGzC;;EACA,MAAMsE,aAAa,GAAGtD,MAAM,CAACuD,KAAP,CAAaZ,IAAb,CAAkB3C,MAAlB,CAAtB;;EAEAA,MAAM,CAACuD,KAAP,GAAgBC,QAAD,IAAsC;IACnD,OAAOF,aAAa,CAAEG,GAAD,IAAiB;MACpCtB,2BAAA,CAAgBC,oBAAhB,CAAqC7E,WAArC,EAAkD;QAChDH,iBAAiB,EAAE;MAD6B,CAAlD,EAEGsG,OAFH,CAEW,MAAM;QACfF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGC,GAAH,CAAR;QACAtG,wBAAwB,GAAG,IAA3B;QACAC,iBAAiB,GAAG,IAApB;MACD,CAND;IAOD,CARmB,CAApB;EASD,CAVD;;EAYA,OAAO;IACL4C,MADK;IAEL2D,QAAQ,EAAE;MACRN,GADQ;MAERrE,IAFQ;MAGRkD,QAHQ;MAIRgB;IAJQ,CAFL;IAQL;IACA9C,aAAa,EAAE;MACbE,SAAS,EAAE9B;IADE;EATV,CAAP;AAaD;;AAEM,eAAeqC,SAAf,CAAyBtD,WAAzB,EAA6D;EAClE,IAAIJ,wBAAJ,EAA8B;IAC5B,MAAM,IAAIyG,OAAJ,CAAYC,GAAG,IAAI;MACvB,IAAI1G,wBAAJ,EAA8B;QAC5BS,wBAAA,CAAaC,OAAb,CAAqBN,WAArB,EAAkCL,eAAlC,EAAmD,gCAAnD;;QACAC,wBAAwB,CAACoG,KAAzB,CAA+BM,GAA/B;MACD;IACF,CALK,CAAN;EAMD;AACF;;AAEM,eAAeC,SAAf,CAAyBvG,WAAzB,EAA8CqD,OAA9C,EAAwF;EAC7F,IAAI,CAACzD,wBAAL,EAA+B;IAC7B,MAAMwD,UAAU,CAACpD,WAAD,EAAcqD,OAAd,CAAhB;EACD;;EACD,MAAMmD,gBAAgB,CAACxG,WAAD,CAAtB;AACD;;AAED,eAAeyG,kBAAf,CAAkCzG,WAAlC,EAAuD0B,QAAvD,EAAiG;EAC/F;EACA,MAAM;IAAEgF;EAAF,IAAe,MAAM,IAAIL,OAAJ,CAAY,CAACM,OAAD,EAAUC,MAAV,KACrClF,QAAQ,CAACmF,GAAT,CAAa,CAACpB,KAAD,EAAQqB,KAAR,KAAkB;IAC7B,IAAIC,QAAJ;;IACA,IAAItB,KAAJ,EAAW;MACT,IAAI,CAACA,KAAK,CAACvE,OAAX,EAAoB;QAClB,OAAO0F,MAAM,CAACnB,KAAD,CAAb;MACD;;MACDsB,QAAQ,GAAG,IAAAC,gCAAA,EAAsB;QAC/BC,MAAM,EAAE,CAACxB,KAAK,CAACvE,OAAP,CADuB;QAE/BwF,QAAQ,EAAE,EAFqB;QAG/BQ,WAAW,EAAE,IAHkB;QAI/BC,aAAa,EAAE;MAJgB,CAAtB,CAAX;IAMD,CAVD,MAUO;MACLJ,QAAQ,GAAG,IAAAC,gCAAA,EACTF,KAAK,CAACM,MAAN,CAAa;QAAEC,GAAG,EAAE,KAAP;QAAcX,QAAQ,EAAE,IAAxB;QAA8BO,MAAM,EAAE;MAAtC,CAAb,CADS,CAAX;IAGD;;IAED,IAAIF,QAAQ,CAACE,MAAT,CAAgBK,MAApB,EAA4B;MAC1B;MACA;MACA,IAAIP,QAAQ,CAACE,MAAT,CAAgBK,MAAhB,GAAyB,CAA7B,EAAgC;QAC9BP,QAAQ,CAACE,MAAT,CAAgBK,MAAhB,GAAyB,CAAzB;MACD;;MACD,OAAOV,MAAM,CAAC,KAAIW,oBAAJ,EAAa,gBAAb,EAA+BR,QAAQ,CAACE,MAAT,CAAgB7G,IAAhB,CAAqB,MAArB,CAA/B,CAAD,CAAb;IACD;;IACD,IACEoH,iBAAA,CAAOC,OAAP,CAAe,uBAAf,EAAwC,KAAxC,KACAD,iBAAA,CAAOC,OAAP,CAAe,IAAf,EAAqB,KAArB,CADA,IAEAV,QAAQ,CAACL,QAAT,CAAkBY,MAHpB,EAIE;MACAjH,wBAAA,CAAaqH,UAAb,CACE1H,WADF,EAEEL,eAFF,EAGEY,gBAAA,CAAMoH,MAAN,CACE,qHACE,yCAFJ,CAHF;;MAQA,OAAOf,MAAM,CAAC,KAAIW,oBAAJ,EAAa,gBAAb,EAA+BR,QAAQ,CAACL,QAAT,CAAkBtG,IAAlB,CAAuB,MAAvB,CAA/B,CAAD,CAAb;IACD;;IACDuG,OAAO,CAAC;MACND,QAAQ,EAAEK,QAAQ,CAACL;IADb,CAAD,CAAP;EAGD,CA5CD,CADyB,CAA3B;EA+CA,OAAO;IAAEA;EAAF,CAAP;AACD;;AAED,eAAekB,iBAAf,CAAiC5H,WAAjC,EAAsDsE,MAAtD,EAAoF;EAClF,MAAM5C,QAAQ,GAAG,IAAAsD,kBAAA,EAAQV,MAAR,CAAjB;;EAEA,IAAI;IACF,MAAM;MAAEoC;IAAF,IAAe,MAAMD,kBAAkB,CAACzG,WAAD,EAAc0B,QAAd,CAA7C;;IACA,IAAIgF,QAAQ,CAACY,MAAb,EAAqB;MACnBjH,wBAAA,CAAaqH,UAAb,CACE1H,WADF,EAEEL,eAFF,EAGEY,gBAAA,CAAMoH,MAAN,CAAa,2BAAb,CAHF;;MAKAtH,wBAAA,CAAaqH,UAAb,CAAwB1H,WAAxB,EAAqCL,eAArC,EAAsD+G,QAAQ,CAACtG,IAAT,CAAc,MAAd,CAAtD;IACD,CAPD,MAOO;MACLC,wBAAA,CAAaC,OAAb,CAAqBN,WAArB,EAAkCL,eAAlC,EAAmDY,gBAAA,CAAMsH,KAAN,CAAY,0BAAZ,CAAnD;IACD;EACF,CAZD,CAYE,OAAOpC,KAAP,EAAmB;IACnBpF,wBAAA,CAAakD,QAAb,CAAsBvD,WAAtB,EAAmCL,eAAnC,EAAoDY,gBAAA,CAAMiD,GAAN,CAAU,sBAAV,CAApD;;IACA,MAAMiC,KAAN;EACD;AACF;;AAEM,eAAeqC,WAAf,CAA2B9H,WAA3B,EAAgDqD,OAAhD,EAA0F;EAC/F,MAAMI,WAAW,GAAGC,mBAAmB,CAAC,EACtC,GAAGL;EADmC,CAAD,CAAvC;EAIA,MAAMvC,GAAG,GAAG,MAAM6C,2CAA2C,CAAC3D,WAAD,EAAc,EACzE,GAAGyD,WADsE;IAEzE;IACAxD,IAAI,EAAE;EAHmE,CAAd,CAA7D,CAL+F,CAW/F;;EACA,IAAI,OAAOa,GAAG,CAACiH,OAAX,KAAuB,WAA3B,EAAwC;IACtC,MAAM,IAAIC,KAAJ,CACJ,uFADI,CAAN;EAGD;;EAED,IAAIvE,WAAW,CAACG,KAAhB,EAAuB;IACrB,MAAM7D,kBAAkB,CAACC,WAAD,EAAcc,GAAG,CAACb,IAAlB,CAAxB;EACD;;EAED,MAAMqE,MAAM,GAAG,MAAMC,eAAe,CAACzD,GAAD,CAApC;EACA,MAAM8G,iBAAiB,CAAC5H,WAAD,EAAcsE,MAAd,CAAvB;AACD;AAED;AACA;AACA;AACA;AACA;;;AACO,eAAe2D,WAAf,CAA2BjI,WAA3B,EAAwE;EAC7E,IAAI,CAACJ,wBAAL,EAA+B;IAC7B,OAAO,IAAP;EACD;;EACD,MAAM+F,IAAI,GAAGC,cAAA,CAAGC,OAAH,EAAb;;EACA,MAAMlB,QAAQ,GAAG,MAAMuD,gBAAgB,CAAClI,WAAD,CAAvC;EACA,OAAQ,GAAE2E,QAAS,MAAKgB,IAAK,IAAG9F,iBAAkB,EAAlD;AACD;;AAED,eAAeqI,gBAAf,CAAgClI,WAAhC,EAAgF;EAC9E;EACA,MAAM;IAAE6D;EAAF,IAAY,MAAMe,2BAAA,CAAgBuD,SAAhB,CAA0BnI,WAA1B,CAAxB;EACA,OAAO6D,KAAK,KAAK,IAAV,GAAiB,OAAjB,GAA2B,MAAlC;AACD;;AAED,eAAeW,qBAAf,CAAqCnB,OAArC,EAIoB;EAClB,IAAI;IACF,MAAMoB,WAAW,GACf,iBAAiBpB,OAAjB,IAA4BA,OAAO,CAACoB,WAApC,GACIpB,OAAO,CAACoB,WADZ,GAEIc,8BAAA,CAAmB6C,YAHzB;IAIA,MAAM3G,IAAI,GAAG,MAAM,IAAA4G,2BAAA,EAAgBhF,OAAO,CAACrD,WAAxB,EAAqC;MACtDyE,WADsD;MAEtDkB,IAAI,EAAE,UAAUtC,OAAV,IAAqBA,OAAO,CAACsC,IAA7B,GAAoCtC,OAAO,CAACsC,IAA5C,GAAmDJ,8BAAA,CAAmBC;IAFtB,CAArC,CAAnB;;IAIA,IAAI,CAAC/D,IAAL,EAAW;MACT,MAAM,IAAIuG,KAAJ,CAAW,QAAOvD,WAAY,iBAA9B,CAAN;IACD;;IACD,OAAOhD,IAAP;EACD,CAbD,CAaE,OAAOgE,KAAP,EAAmB;IACnB,MAAM,KAAI8B,oBAAJ,EAAa,eAAb,EAA8B9B,KAAK,CAACvE,OAApC,CAAN;EACD;AACF;;AAED,SAASoH,OAAT,CAAiBrI,IAAjB,EAA6E;EAC3EY,OAAO,CAACC,GAAR,CAAYyH,SAAZ,GAAwBtI,IAAxB;EACAY,OAAO,CAACC,GAAR,CAAY0H,QAAZ,GAAuBvI,IAAvB;AACD;;AAED,SAASwI,kBAAT,CAA4BvE,IAA5B,EAA0CwE,KAA1C,EAA0DC,YAA1D,EAA0F;EACxF,IAAI,OAAOD,KAAP,KAAiB,WAArB,EAAkC;IAChCA,KAAK,GAAGC,YAAR;EACD;;EAED,IAAI,OAAOD,KAAP,KAAiB,SAArB,EAAgC;IAC9B,MAAM,KAAInB,oBAAJ,EAAa,wBAAb,EAAwC,IAAGrD,IAAK,6BAAhD,CAAN;EACD;;EAED,OAAOwE,KAAP;AACD;;AAED,SAAShF,mBAAT,CAA6BL,OAA7B,EAAsE;EACpE;EACA,OAAO,EACL,GAAGA,OADE;IAGLuF,qBAAqB,EAAEvF,OAAO,CAACwF;EAH1B,CAAP;AAKD;;AAED,eAAeC,kCAAf,CACE9I,WADF,EAEEqD,OAFF,EAGqC;EACnC,MAAM0F,WAA8C,GAAG,EAAvD,CADmC,CAEnC;;EACA,IAAI,OAAO1F,OAAO,CAACQ,KAAf,KAAyB,SAA7B,EAAwC;IACtCkF,WAAW,CAAClF,KAAZ,GAAoBR,OAAO,CAACQ,KAA5B;EACD;;EAED,IAAImF,MAAM,CAACC,IAAP,CAAYF,WAAZ,EAAyBzB,MAA7B,EAAqC;IACnC,MAAM1C,2BAAA,CAAgBsE,QAAhB,CAAyBlJ,WAAzB,EAAsC+I,WAAtC,CAAN;EACD;;EAED,OAAO,MAAMnE,2BAAA,CAAgBuD,SAAhB,CAA0BnI,WAA1B,CAAb;AACD;;AAED,eAAe2D,2CAAf,CACE3D,WADF,EAEEqD,OAFF,EAG2B;EACzB,MAAM;IAAE8F,GAAF;IAAOtF;EAAP,IAAiB,MAAMiF,kCAAkC,CAAC9I,WAAD,EAAcqD,OAAd,CAA/D;EAEA,MAAMpD,IAAI,GAAG,OAAOoD,OAAO,CAACpD,IAAf,KAAwB,QAAxB,GAAmCoD,OAAO,CAACpD,IAA3C,GAAkDkJ,GAAG,GAAG,aAAH,GAAmB,YAArF;EAEA,MAAMP,qBAAqB,GAAGH,kBAAkB,CAC9C,uBAD8C,EAE9CpF,OAAO,CAACuF,qBAFsC,EAG9C,IAH8C,CAAhD;EAMA,OAAO;IACL5I,WADK;IAEL6I,GAAG,EAAED,qBAFA;IAGL9G,MAAM,EAAEzB,wBAAA,CAAa0B,SAAb,CAAuB/B,WAAvB,CAHH;IAIL4I,qBAJK;IAKL3I,IALK;IAML4D,KANK;IAOL,IAAIR,OAAO,CAAC+F,UAAR,IAAsB,EAA1B;EAPK,CAAP;AASD;;AAED,eAAenF,eAAf,CAA+B;EAC7BC,IAD6B;EAE7BC;AAF6B,CAA/B,EAM2D;EACzDkF,OAAO,CAACC,GAAR,CACE/I,gBAAA,CAAMgJ,OAAQ,+EADhB;;EAGA,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMC,OAAO,GAACC,cAAR,CAAuBxF,IAAvB,CAArB;;IACA,IAAIsF,MAAJ,EAAY;MACV,MAAM;QAAEG,GAAF;QAAOC;MAAP,IAAgBJ,MAAtB;MACA,MAAMK,MAAM,GAAG1J,IAAI,GAACC,IAAL,CAAU+D,SAAV,EAAqB,OAArB,EAA8B,KAA9B,EAAqC,aAArC,EAAoD,KAApD,CAAf;MACA,MAAM1D,kBAAA,CAAGqJ,SAAH,CAAaD,MAAb,CAAN;MAEA,MAAMxF,OAAO,GAAGlE,IAAI,GAACC,IAAL,CAAUyJ,MAAV,EAAmB,OAAM3F,IAAK,MAA9B,CAAhB;MACA,MAAMzD,kBAAA,CAAGsJ,SAAH,CAAa1F,OAAb,EAAsBsF,GAAtB,CAAN;MAEA,MAAMvF,QAAQ,GAAGjE,IAAI,GAACC,IAAL,CAAUyJ,MAAV,EAAmB,QAAO3F,IAAK,MAA/B,CAAjB;MACA,MAAMzD,kBAAA,CAAGsJ,SAAH,CAAa3F,QAAb,EAAuBwF,IAAvB,CAAN;MAEA,OAAO;QACLvF,OADK;QAELD;MAFK,CAAP;IAID;;IACD,OAAOoF,MAAP;EACD,CAnBD,CAmBE,OAAO/D,KAAP,EAAmB;IACnB4D,OAAO,CAACC,GAAR,CAAa,oCAAmC7D,KAAM,EAAtD;EACD;;EAED,OAAO,KAAP;AACD;;AAED,SAASuE,yBAAT,CAAmC1F,MAAnC,EAAuF;EACrF;EACA;EACA;EACA,IAAIiB,8BAAA,CAAmB0E,kBAAnB,MAA2C3F,MAAM,CAACrE,IAAP,KAAgB,YAA/D,EAA6E;IAC3EoJ,OAAO,CAACC,GAAR,CAAY/I,gBAAA,CAAM2J,QAAN,CAAeC,KAAf,CAAqB,qCAArB,CAAZ;IAEA,MAAMC,MAAM,GAAG9F,MAAM,CAAC8F,MAAP,IAAiB,EAAhC;IACA,MAAMC,YAAY,GAAG/F,MAAM,CAAC+F,YAAP,IAAuB,EAA5C,CAJ2E,CAM3E;IACA;IACA;IACA;;IACAD,MAAM,CAACE,iBAAP,GAA2B,IAA3B,CAV2E,CAY3E;IACA;;IACAF,MAAM,CAACG,QAAP,GAAkB,IAAlB,CAd2E,CAe3E;;IACAF,YAAY,CAACG,YAAb,GAA4B,IAA5B,CAhB2E,CAiB3E;;IACAH,YAAY,CAACI,WAAb,GAA2B,IAA3B,CAlB2E,CAmB3E;IACA;;IACAJ,YAAY,CAACK,SAAb,GAAyB,OAAzB,CArB2E,CAsB3E;IACA;IACA;;IACAL,YAAY,CAACM,QAAb,GAAwB,OAAxB;;IAEA,IAAIN,YAAY,CAACO,WAAjB,EAA8B;MAC5BP,YAAY,CAACO,WAAb,CAAyB1G,IAAzB,GAAgC,IAAhC;IACD;;IAED8E,MAAM,CAAC6B,MAAP,CAAcvG,MAAd,EAAsB;MAAE8F,MAAF;MAAUC;IAAV,CAAtB;EACD;;EAED,OAAO/F,MAAP;AACD;;AAED,eAAeC,eAAf,CACEzD,GADF,EAEEgK,IAFF,EAGiC;EAC/BxC,OAAO,CAACxH,GAAG,CAACb,IAAL,CAAP,CAD+B,CAE/B;;EACA,MAAM8K,oBAAoB,GAAG5K,IAAI,GAACwG,OAAL,CAAa7F,GAAG,CAACd,WAAjB,EAA8B,mBAA9B,CAA7B;EACA,IAAIsE,MAAJ;;EACA,IAAI7D,kBAAA,CAAGuK,UAAH,CAAcD,oBAAd,CAAJ,EAAyC;IACvC,MAAME,aAAa,GAAGC,OAAO,CAACH,oBAAD,CAA7B;;IACA,IAAI,OAAOE,aAAP,KAAyB,UAA7B,EAAyC;MACvC3G,MAAM,GAAG,MAAM2G,aAAa,CAACnK,GAAD,EAAMgK,IAAN,CAA5B;IACD,CAFD,MAEO;MACLxG,MAAM,GAAG2G,aAAT;IACD;EACF,CAPD,MAOO;IACL;IACA,MAAME,sBAAsB,GAAGD,OAAO,CAAC,sBAAD,CAAtC;;IACA5G,MAAM,GAAG,MAAM6G,sBAAsB,CAACrK,GAAD,EAAMgK,IAAN,CAArC;EACD;;EACD,OAAOd,yBAAyB,CAAC1F,MAAD,CAAhC;AACD;;AAED,eAAekC,gBAAf,CACExG,WADF,EAE8E;EAC5E,IAAI;IACF,MAAM8F,GAAG,GAAG,MAAMsF,oBAAA,CAASC,uBAAT,CAAiCrL,WAAjC,EAA8C;MAAEsL,QAAQ,EAAE;IAAZ,CAA9C,CAAlB;;IACA,IAAI,CAACxF,GAAL,EAAU;MACR,MAAM,IAAIkC,KAAJ,CAAU,mCAAV,CAAN;IACD;;IACD,IAAAuD,oBAAA,EAAiBzF,GAAjB;IACA,OAAO;MAAE0F,OAAO,EAAE,IAAX;MAAiB1F;IAAjB,CAAP;EACD,CAPD,CAOE,OAAO2F,CAAP,EAAe;IACfC,kBAAA,CAAOC,MAAP,CAAclG,KAAd,CAAqB,kCAAiCgG,CAAC,CAACvK,OAAQ,EAAhE;;IACA,OAAO;MAAEsK,OAAO,EAAE,KAAX;MAAkB/F,KAAK,EAAEgG;IAAzB,CAAP;EACD;AACF"}