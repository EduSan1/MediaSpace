{"version":3,"file":"Doctor.js","names":["NO_ISSUES","WARNING","ERROR","FATAL","MIN_WATCHMAN_VERSION","MIN_NPM_VERSION","CORRECT_NPM_VERSION","WARN_NPM_VERSION_RANGES","BAD_NPM_VERSION_RANGES","EXPO_NO_DOCTOR","getenv","boolish","_isNpmVersionWithinRanges","npmVersion","ranges","some","range","semver","satisfies","_checkNpmVersionAsync","projectRoot","yarnVersionResponse","spawnAsync","status","execSync","stdio","toString","trim","lt","ProjectUtils","logError","logWarning","clearNotification","_checkWatchmanVersionAsync","Watchman","isPlatformSupported","watchmanVersion","unblockAndGetVersionAsync","validSemver","valid","gte","validNewVersion","test","warningMessage","process","platform","validateWithSchema","_internal","exp","schema","configName","validateAssets","schemaErrorMessage","assetsErrorMessage","validator","Schemer","rootDir","validateSchemaAsync","e","SchemerError","errors","length","learnMore","map","formatValidationError","join","validateAssetsAsync","validationError","fieldPath","message","_validateExpJsonAsync","pkg","allowNetwork","skipSDKVersionRequirement","sdkVersion","configFilename","env","EXPO_SKIP_MANIFEST_VALIDATION_TOKEN","sdkVersions","Versions","sdkVersionsAsync","Object","keys","ExpSchema","getSchemaAsync","reactNativeIssue","_validateReactNativeVersionAsync","resolveReactNativeVersionFromProjectRoot","memoize","require","resolveFrom","version","reactNative","dependencies","devDependencies","peerDependencies","gteSdkVersion","isExpoForkedReactNative","isDetached","exactReactNativeVersion","profileMethod","facebookReactNativeVersion","anyReactNativePatchVersion","reactNativeTag","match","sdkVersionObject","major","parseSdkVersionFromTag","_validateNodeModulesAsync","silent","validateWithoutNetworkAsync","options","validateAsync","validateWithNetworkAsync","getConfig","strict","expStatus","Math","max","nodeModulesStatus","validateExpoServersAsync","domains","attempts","Promise","all","domain","reachable","isReachable","failures","filter","attempt","forEach","failure","console","log"],"sources":["../../src/project/Doctor.ts"],"sourcesContent":["import { configFilename, ExpoConfig, getConfig, PackageJSONConfig } from '@expo/config';\nimport Schemer, { SchemerError, ValidationError } from '@expo/schemer';\nimport spawnAsync from '@expo/spawn-async';\nimport { execSync } from 'child_process';\nimport getenv from 'getenv';\nimport isReachable from 'is-reachable';\nimport memoize from 'lodash/memoize';\nimport resolveFrom from 'resolve-from';\nimport semver from 'semver';\n\nimport { ExpSchema, ProjectUtils, Versions, Watchman } from '../internal';\nimport { learnMore } from '../logs/TerminalLink';\nimport { profileMethod } from '../utils/profileMethod';\n\nexport const NO_ISSUES = 0;\nexport const WARNING = 1;\nexport const ERROR = 2;\nexport const FATAL = 3;\n\nconst MIN_WATCHMAN_VERSION = '4.6.0';\nconst MIN_NPM_VERSION = '3.0.0';\nconst CORRECT_NPM_VERSION = 'latest';\nconst WARN_NPM_VERSION_RANGES = ['>= 5.0.0 < 5.7.0'];\nconst BAD_NPM_VERSION_RANGES = ['>= 5.0.0 <= 5.0.3'];\n\nconst EXPO_NO_DOCTOR = getenv.boolish('EXPO_NO_DOCTOR', false);\n\nfunction _isNpmVersionWithinRanges(npmVersion: string, ranges: string[]) {\n  return ranges.some(range => semver.satisfies(npmVersion, range));\n}\n\nasync function _checkNpmVersionAsync(projectRoot: string) {\n  try {\n    try {\n      const yarnVersionResponse = await spawnAsync('yarnpkg', ['--version']);\n      if (yarnVersionResponse.status === 0) {\n        return NO_ISSUES;\n      }\n    } catch {}\n\n    const npmVersion = execSync('npm --version', { stdio: 'pipe' }).toString().trim();\n\n    if (\n      semver.lt(npmVersion, MIN_NPM_VERSION) ||\n      _isNpmVersionWithinRanges(npmVersion, BAD_NPM_VERSION_RANGES)\n    ) {\n      ProjectUtils.logError(\n        projectRoot,\n        'expo',\n        `Error: You are using npm version ${npmVersion}. We recommend the latest version ${CORRECT_NPM_VERSION}. To install it, run 'npm i -g npm@${CORRECT_NPM_VERSION}'.`,\n        'doctor-npm-version'\n      );\n      return WARNING;\n    } else if (_isNpmVersionWithinRanges(npmVersion, WARN_NPM_VERSION_RANGES)) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: You are using npm version ${npmVersion}. There may be bugs in this version, use it at your own risk. We recommend version ${CORRECT_NPM_VERSION}.`,\n        'doctor-npm-version'\n      );\n    } else {\n      ProjectUtils.clearNotification(projectRoot, 'doctor-npm-version');\n    }\n  } catch {\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `Warning: Could not determine npm version. Make sure your version is >= ${MIN_NPM_VERSION} - we recommend ${CORRECT_NPM_VERSION}.`,\n      'doctor-npm-version'\n    );\n    return WARNING;\n  }\n\n  return NO_ISSUES;\n}\n\nasync function _checkWatchmanVersionAsync(projectRoot: string) {\n  // There's no point in checking any of this stuff if watchman isn't supported on this platform\n  if (!Watchman.isPlatformSupported()) {\n    ProjectUtils.clearNotification(projectRoot, 'doctor-watchman-version');\n    return;\n  }\n\n  const watchmanVersion = await Watchman.unblockAndGetVersionAsync(projectRoot);\n\n  // If we can't get the watchman version, `getVersionAsync` will return `null`\n  if (!watchmanVersion) {\n    // watchman is probably just not installed\n    ProjectUtils.clearNotification(projectRoot, 'doctor-watchman-version');\n    return;\n  }\n\n  // Watchman versioning through homebrew is changed from semver to date since \"2021.05.31.00\"\n  // see: https://github.com/Homebrew/homebrew-core/commit/d299c2867503cb6ad8d90792343993c80e745071\n  const validSemver =\n    !!semver.valid(watchmanVersion) && semver.gte(watchmanVersion, MIN_WATCHMAN_VERSION);\n\n  // This new format is used later than the MIN_WATCHMAN_VERSION, we assume/estimate if the version is correct here.\n  const validNewVersion =\n    !validSemver && /[0-9]{4}\\.[0-9]{2}\\.[0-9]{2}\\.[0-9]{2}/.test(watchmanVersion);\n\n  if (!validSemver && !validNewVersion) {\n    let warningMessage = `Warning: You are using an old version of watchman (v${watchmanVersion}).\\n\\nIt is recommend to always use the latest version, or at least v${MIN_WATCHMAN_VERSION}.`;\n\n    // Add a note about homebrew if the user is on a Mac\n    if (process.platform === 'darwin') {\n      warningMessage += `\\n\\nIf you are using homebrew, try:\\nbrew uninstall watchman; brew install watchman`;\n    }\n    ProjectUtils.logWarning(projectRoot, 'expo', warningMessage, 'doctor-watchman-version');\n    return;\n  }\n\n  ProjectUtils.clearNotification(projectRoot, 'doctor-watchman-version');\n}\n\nasync function validateWithSchema(\n  projectRoot: string,\n  {\n    // Extract internal from the config object.\n    _internal,\n    ...exp\n  }: ExpoConfig,\n  schema: any,\n  configName: string,\n  validateAssets: boolean\n): Promise<{ schemaErrorMessage: string | undefined; assetsErrorMessage: string | undefined }> {\n  let schemaErrorMessage;\n  let assetsErrorMessage;\n  const validator = new Schemer(schema, { rootDir: projectRoot });\n\n  // Validate the schema itself\n  try {\n    await validator.validateSchemaAsync(exp);\n  } catch (e: any) {\n    if (e instanceof SchemerError) {\n      schemaErrorMessage = `Error: Problem${\n        e.errors.length > 1 ? 's' : ''\n      } validating fields in ${configName}. ${learnMore(\n        'https://docs.expo.dev/workflow/configuration/'\n      )}`;\n      schemaErrorMessage += e.errors.map(formatValidationError).join('');\n    }\n  }\n\n  if (validateAssets) {\n    try {\n      await validator.validateAssetsAsync(exp);\n    } catch (e: any) {\n      if (e instanceof SchemerError) {\n        assetsErrorMessage = `Error: Problem${\n          e.errors.length > 1 ? '' : 's'\n        } validating asset fields in ${configName}. ${learnMore('https://docs.expo.dev/')}`;\n        assetsErrorMessage += e.errors.map(formatValidationError).join('');\n      }\n    }\n  }\n  return { schemaErrorMessage, assetsErrorMessage };\n}\n\nfunction formatValidationError(validationError: ValidationError) {\n  return `\\n â€¢ ${validationError.fieldPath ? 'Field: ' + validationError.fieldPath + ' - ' : ''}${\n    validationError.message\n  }.`;\n}\n\nasync function _validateExpJsonAsync(\n  exp: ExpoConfig,\n  pkg: PackageJSONConfig,\n  projectRoot: string,\n  allowNetwork: boolean,\n  skipSDKVersionRequirement: boolean | undefined\n): Promise<number> {\n  if (!exp || !pkg) {\n    // getConfig already logged an error\n    return FATAL;\n  }\n\n  try {\n    await _checkWatchmanVersionAsync(projectRoot);\n  } catch (e: any) {\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `Warning: Problem checking watchman version. ${e.message}.`,\n      'doctor-problem-checking-watchman-version'\n    );\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-problem-checking-watchman-version');\n\n  const sdkVersion = exp.sdkVersion;\n  const configName = configFilename(projectRoot);\n\n  // Warn if sdkVersion is UNVERSIONED\n  if (sdkVersion === 'UNVERSIONED' && !process.env.EXPO_SKIP_MANIFEST_VALIDATION_TOKEN) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Using unversioned Expo SDK. Do not publish until you set sdkVersion in ${configName}`,\n      'doctor-unversioned'\n    );\n    return ERROR;\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-unversioned');\n  const sdkVersions = await Versions.sdkVersionsAsync();\n  if (!sdkVersions) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Couldn't connect to SDK versions server`,\n      'doctor-versions-endpoint-failed'\n    );\n    return ERROR;\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-versions-endpoint-failed');\n\n  if (!skipSDKVersionRequirement && (!sdkVersion || !sdkVersions[sdkVersion])) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Invalid sdkVersion. Valid options are ${Object.keys(sdkVersions).join(', ')}`,\n      'doctor-invalid-sdk-version'\n    );\n    return ERROR;\n  }\n  ProjectUtils.clearNotification(projectRoot, 'doctor-invalid-sdk-version');\n\n  // Skip validation if the correct token is set in env\n  if (sdkVersion && sdkVersion !== 'UNVERSIONED') {\n    try {\n      const schema = await ExpSchema.getSchemaAsync(sdkVersion);\n      const { schemaErrorMessage, assetsErrorMessage } = await validateWithSchema(\n        projectRoot,\n        exp,\n        schema,\n        configName,\n        allowNetwork\n      );\n\n      if (schemaErrorMessage) {\n        ProjectUtils.logError(projectRoot, 'expo', schemaErrorMessage, 'doctor-schema-validation');\n      } else {\n        ProjectUtils.clearNotification(projectRoot, 'doctor-schema-validation');\n      }\n      if (assetsErrorMessage) {\n        ProjectUtils.logError(\n          projectRoot,\n          'expo',\n          assetsErrorMessage,\n          `doctor-validate-asset-fields`\n        );\n      } else {\n        ProjectUtils.clearNotification(projectRoot, `doctor-validate-asset-fields`);\n      }\n      ProjectUtils.clearNotification(projectRoot, 'doctor-schema-validation-exception');\n      if (schemaErrorMessage || assetsErrorMessage) return ERROR;\n    } catch (e: any) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: Problem validating ${configName}: ${e.message}.`,\n        'doctor-schema-validation-exception'\n      );\n    }\n  }\n\n  if (sdkVersion) {\n    const reactNativeIssue = await _validateReactNativeVersionAsync(\n      exp,\n      pkg,\n      projectRoot,\n      sdkVersions,\n      sdkVersion\n    );\n\n    if (reactNativeIssue !== NO_ISSUES) {\n      return reactNativeIssue;\n    }\n  }\n\n  // TODO: Check any native module versions here\n\n  return NO_ISSUES;\n}\n\nconst resolveReactNativeVersionFromProjectRoot = memoize((projectRoot: string): string | null => {\n  try {\n    return require(resolveFrom(projectRoot, 'react-native/package.json')).version;\n  } catch {}\n  return null;\n});\n\nasync function _validateReactNativeVersionAsync(\n  exp: ExpoConfig,\n  pkg: PackageJSONConfig,\n  projectRoot: string,\n  sdkVersions: Versions.SDKVersions,\n  sdkVersion: string\n): Promise<number> {\n  let reactNative = null;\n\n  if (pkg.dependencies?.['react-native']) {\n    reactNative = pkg.dependencies['react-native'];\n  } else if (pkg.devDependencies?.['react-native']) {\n    reactNative = pkg.devDependencies['react-native'];\n  } else if (pkg.peerDependencies?.['react-native']) {\n    reactNative = pkg.peerDependencies['react-native'];\n  }\n\n  // react-native is required\n  if (!reactNative) {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: Can't find react-native in package.json dependencies`,\n      'doctor-no-react-native-in-package-json'\n    );\n    return ERROR;\n  }\n\n  ProjectUtils.clearNotification(projectRoot, 'doctor-no-react-native-in-package-json');\n\n  if (\n    Versions.gteSdkVersion(exp, '41.0.0') &&\n    pkg.dependencies?.['@react-native-community/async-storage']\n  ) {\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `\\n@react-native-community/async-storage has been renamed. To upgrade:\\n- remove @react-native-community/async-storage from package.json\\n- run \"expo install @react-native-async-storage/async-storage\"\\n- update your imports manually, or run \"npx expo-codemod sdk41-async-storage './**/*'\".\\n`,\n      'doctor-legacy-async-storage'\n    );\n    return WARNING;\n  } else {\n    ProjectUtils.clearNotification(projectRoot, 'doctor-legacy-async-storage');\n  }\n\n  const isExpoForkedReactNative = /expo\\/react-native/.test(reactNative);\n  if (!isExpoForkedReactNative) {\n    // Expo fork of react-native is required for deprecated `isDetached` project\n    if (exp.isDetached) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: Not using the Expo fork of react-native (${reactNative}). ${learnMore(\n          'https://docs.expo.dev/'\n        )}`,\n        'doctor-not-using-expo-fork'\n      );\n      return WARNING;\n    }\n    ProjectUtils.clearNotification(projectRoot, 'doctor-not-using-expo-fork');\n\n    // Get the exact version as late as possible\n    // `semver` will match `semver.satisfies('~1.0.0', '~1.0.0')` as `false` even though it's technically allowed,\n    // to combat this, attempt to get the exact installed version.\n    const exactReactNativeVersion = profileMethod(resolveReactNativeVersionFromProjectRoot)(\n      projectRoot\n    );\n\n    reactNative = exactReactNativeVersion || reactNative;\n\n    // Check react-native version satisfies with sdk's `facebookReactNativeVersion`\n    const { facebookReactNativeVersion } = sdkVersions[sdkVersion];\n    const anyReactNativePatchVersion = `~${facebookReactNativeVersion}`;\n    if (!semver.satisfies(reactNative, anyReactNativePatchVersion)) {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: Invalid version react-native@${reactNative} for expo sdkVersion ${sdkVersion}. Use react-native@${facebookReactNativeVersion}`,\n        'doctor-invalid-version-of-react-native'\n      );\n      return WARNING;\n    }\n    ProjectUtils.clearNotification(projectRoot, 'doctor-invalid-version-of-react-native');\n  } else {\n    // If `isExpoForkedReactNative === true`\n    try {\n      const reactNativeTag = reactNative.match(/sdk-\\d+\\.\\d+\\.\\d+/)[0];\n      const sdkVersionObject = sdkVersions[sdkVersion];\n\n      // TODO: Want to be smarter about this. Maybe warn if there's a newer version.\n      if (\n        semver.major(Versions.parseSdkVersionFromTag(reactNativeTag)) !==\n        semver.major(Versions.parseSdkVersionFromTag(sdkVersionObject['expoReactNativeTag']))\n      ) {\n        ProjectUtils.logWarning(\n          projectRoot,\n          'expo',\n          `Warning: Invalid version of react-native for sdkVersion ${sdkVersion}. Use github:expo/react-native#${sdkVersionObject['expoReactNativeTag']}`,\n          'doctor-invalid-version-of-react-native'\n        );\n        return WARNING;\n      }\n      ProjectUtils.clearNotification(projectRoot, 'doctor-invalid-version-of-react-native');\n\n      ProjectUtils.clearNotification(projectRoot, 'doctor-malformed-version-of-react-native');\n    } catch {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: ${reactNative} is not a valid version. Version must be in the form of sdk-x.y.z. Please update your package.json file.`,\n        'doctor-malformed-version-of-react-native'\n      );\n      return WARNING;\n    }\n  }\n\n  return NO_ISSUES;\n}\n\nasync function _validateNodeModulesAsync(projectRoot: string): Promise<number> {\n  // Check to make sure react-native is installed\n\n  if (resolveFrom.silent(projectRoot, 'react-native/local-cli/cli.js')) {\n    ProjectUtils.clearNotification(projectRoot, 'doctor-react-native-not-installed');\n  } else {\n    ProjectUtils.logError(\n      projectRoot,\n      'expo',\n      `Error: react-native is not installed. Please run \\`npm install\\` or \\`yarn\\` in your project directory.`,\n      'doctor-react-native-not-installed'\n    );\n    return FATAL;\n  }\n  return NO_ISSUES;\n}\n\nexport async function validateWithoutNetworkAsync(\n  projectRoot: string,\n  options: { skipSDKVersionRequirement?: boolean } = {}\n): Promise<number> {\n  return validateAsync(projectRoot, false, options.skipSDKVersionRequirement);\n}\n\nexport async function validateWithNetworkAsync(\n  projectRoot: string,\n  options: { skipSDKVersionRequirement?: boolean } = {}\n): Promise<number> {\n  return validateAsync(projectRoot, true, options.skipSDKVersionRequirement);\n}\n\nasync function validateAsync(\n  projectRoot: string,\n  allowNetwork: boolean,\n  skipSDKVersionRequirement: boolean | undefined\n): Promise<number> {\n  if (EXPO_NO_DOCTOR) {\n    return NO_ISSUES;\n  }\n\n  const { exp, pkg } = getConfig(projectRoot, {\n    strict: true,\n    skipSDKVersionRequirement,\n  });\n\n  ProjectUtils.clearNotification(projectRoot, 'doctor-config-json-not-read');\n\n  let status = await _checkNpmVersionAsync(projectRoot);\n  if (status === FATAL) {\n    return status;\n  }\n\n  const expStatus = await _validateExpJsonAsync(\n    exp,\n    pkg,\n    projectRoot,\n    allowNetwork,\n    skipSDKVersionRequirement\n  );\n  if (expStatus === FATAL) {\n    return expStatus;\n  }\n\n  status = Math.max(status, expStatus);\n\n  const nodeModulesStatus = await _validateNodeModulesAsync(projectRoot);\n  if (nodeModulesStatus > status) {\n    return nodeModulesStatus;\n  }\n\n  return status;\n}\n\nexport async function validateExpoServersAsync(projectRoot: string): Promise<number> {\n  const domains = ['expo.io', 'expo.fyi', 'expo.dev', 'static.expo.dev', 'exp.host'];\n  const attempts = await Promise.all(\n    domains.map(async domain => ({\n      domain,\n      reachable: await isReachable(domain),\n    }))\n  );\n  const failures = attempts.filter(attempt => !attempt.reachable);\n\n  if (failures.length) {\n    failures.forEach(failure => {\n      ProjectUtils.logWarning(\n        projectRoot,\n        'expo',\n        `Warning: could not reach \\`${failure.domain}\\`.`,\n        `doctor-server-dashboard-not-reachable-${failure.domain}`\n      );\n    });\n    console.log();\n    ProjectUtils.logWarning(\n      projectRoot,\n      'expo',\n      `We couldn't reach some of our domains, this might cause issues on our website or services.\\nPlease check your network configuration and try to access these domains in your browser.`,\n      'doctor-server-dashboard-not-reachable'\n    );\n    console.log();\n    return WARNING;\n  }\n  return NO_ISSUES;\n}\n"],"mappings":"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"}