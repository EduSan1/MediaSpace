{"version":3,"file":"IosPlist.js","names":["spawnAsyncThrowError","ExponentTools","_getNormalizedPlistFilename","plistName","plistFilename","indexOf","modifyAsync","plistPath","transform","configPlistName","path","join","configFilename","config","process","platform","configContents","fs","readFile","JSON","parse","e","logger","info","plist","readFileSync","copyFileSync","writeFile","stringify","build","createBlankAsync","emptyConfig","tmpConfigFile","removeSync"],"sources":["../../src/detach/IosPlist.ts"],"sourcesContent":["import plist from '@expo/plist';\nimport fs from 'fs-extra';\nimport path from 'path';\n\nimport { ExponentTools, LoggerDetach as logger } from '../internal';\n\nconst { spawnAsyncThrowError } = ExponentTools;\n\nfunction _getNormalizedPlistFilename(plistName: string) {\n  let plistFilename;\n  if (plistName.indexOf('.') !== -1) {\n    plistFilename = plistName;\n  } else {\n    plistFilename = `${plistName}.plist`;\n  }\n  return plistFilename;\n}\n\n/**\n *  @param plistName base filename of property list. if no extension, assumes .plist\n */\nasync function modifyAsync(plistPath: string, plistName: string, transform: (config: any) => any) {\n  const plistFilename = _getNormalizedPlistFilename(plistName);\n  const configPlistName = path.join(plistPath, plistFilename);\n  const configFilename = path.join(plistPath, `${plistName}.json`);\n\n  // grab original plist as json object\n  let config;\n  if (process.platform === 'darwin') {\n    await spawnAsyncThrowError('plutil', [\n      '-convert',\n      'json',\n      configPlistName,\n      '-o',\n      configFilename,\n    ]);\n    const configContents = await fs.readFile(configFilename, 'utf8');\n\n    try {\n      config = JSON.parse(configContents);\n    } catch (e: any) {\n      logger.info(`Error parsing ${configFilename}`, e);\n      logger.info('The erroneous file contents was:', configContents);\n      config = {};\n    }\n  } else {\n    config = plist.parse(fs.readFileSync(configPlistName, 'utf8'));\n  }\n\n  // apply transformation\n  config = await transform(config);\n\n  // back up old plist and swap in modified one\n  fs.copyFileSync(configPlistName, `${configPlistName}.bak`);\n  await fs.writeFile(configFilename, JSON.stringify(config));\n  if (process.platform === 'darwin') {\n    await spawnAsyncThrowError('plutil', [\n      '-convert',\n      'xml1',\n      configFilename,\n      '-o',\n      configPlistName,\n    ]);\n  } else {\n    await fs.writeFile(configPlistName, plist.build(config));\n  }\n\n  return config;\n}\n\nasync function createBlankAsync(plistPath: string, plistName: string) {\n  // write empty json file\n  const emptyConfig = {};\n  const tmpConfigFile = path.join(plistPath, `${plistName}.json`);\n  await fs.writeFile(tmpConfigFile, JSON.stringify(emptyConfig));\n\n  // convert to plist\n  const plistFilename = _getNormalizedPlistFilename(plistName);\n  const configPlistName = path.join(plistPath, plistFilename);\n  if (process.platform === 'darwin') {\n    await spawnAsyncThrowError('plutil', [\n      '-convert',\n      'xml1',\n      tmpConfigFile,\n      '-o',\n      configPlistName,\n    ]);\n  } else {\n    await fs.writeFile(configPlistName, JSON.stringify(plist.build(emptyConfig)));\n  }\n\n  // remove tmp json file\n  fs.removeSync(tmpConfigFile);\n}\n\nexport { modifyAsync, createBlankAsync };\n"],"mappings":"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"}