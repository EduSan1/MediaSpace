{"version":3,"file":"StandaloneContext.js","names":["isStandaloneContextDataUser","value","projectPath","isStandaloneContextTestEnvironment","includes","isStandaloneContextDataService","testEnvironment","expoSourcePath","shellAppSdkVersion","StandaloneContext","isAnonymous","exp","publishedUrl","context","StandaloneContextUser","url","releaseChannel","StandaloneBuildFlags","createEmpty","config","archivePath","manifest","privateConfig","build","StandaloneContextService","constructor","data","published"],"sources":["../../src/detach/StandaloneContext.ts"],"sourcesContent":["import { StandaloneBuildFlags } from '../internal';\n\ntype StandaloneContextDataType = 'user' | 'service';\n\ntype StandaloneContextTestEnvironment = 'none' | 'local' | 'ci';\n\n// currently unused\nexport function isStandaloneContextDataUser(value: any): value is StandaloneContextDataUser {\n  return value && typeof value.projectPath === 'string' && 'exp' in value;\n}\n\nexport function isStandaloneContextTestEnvironment(\n  value: string\n): value is StandaloneContextTestEnvironment {\n  return ['none', 'local', 'ci'].includes(value);\n}\n\nexport function isStandaloneContextDataService(value: any): value is StandaloneContextDataService {\n  return (\n    value &&\n    isStandaloneContextTestEnvironment(value.testEnvironment) &&\n    typeof value.expoSourcePath === 'string' &&\n    typeof value.shellAppSdkVersion === 'string'\n  );\n}\n\n/**\n *  A user context is used when we are configuring a standalone app locally on a user's machine,\n *  such as during `exp detach`.\n */\nexport type StandaloneContextDataUser = {\n  projectPath: string;\n  exp: any;\n};\n\n/**\n *  A service context is used when we are generating a standalone app remotely on an Expo\n *  service machine, such as during `exp build`.\n */\nexport type StandaloneContextDataService = {\n  expoSourcePath: string;\n  archivePath: string | null;\n  manifest: any;\n  privateConfig: any;\n  testEnvironment: StandaloneContextTestEnvironment;\n  shellAppSdkVersion: string;\n};\n\nclass StandaloneContext {\n  data?: StandaloneContextDataUser | StandaloneContextDataService;\n  config: any; // same as underlying app.json or manifest\n\n  static createUserContext = (\n    projectPath: string,\n    exp: any,\n    publishedUrl?: string\n  ): StandaloneContextUser => {\n    const context = new StandaloneContextUser(\n      {\n        projectPath,\n        exp,\n      },\n      {\n        url: publishedUrl,\n        releaseChannel: 'default',\n      },\n      // we never expect to handle the build step for user contexts right now\n      StandaloneBuildFlags.createEmpty()\n    );\n    context.config = exp;\n    return context;\n  };\n\n  static createServiceContext = (\n    expoSourcePath: string,\n    archivePath: string | null,\n    manifest: any,\n    privateConfig: any,\n    testEnvironment: StandaloneContextTestEnvironment,\n    build: StandaloneBuildFlags,\n    publishedUrl: string,\n    releaseChannel: string,\n    shellAppSdkVersion: string\n  ): StandaloneContextService => {\n    const context = new StandaloneContextService(\n      {\n        expoSourcePath,\n        archivePath,\n        manifest,\n        privateConfig,\n        testEnvironment,\n        shellAppSdkVersion,\n      },\n      {\n        url: publishedUrl,\n        releaseChannel: releaseChannel ? releaseChannel : 'default',\n      },\n      build\n    );\n    context.config = manifest;\n\n    return context;\n  };\n\n  /**\n   *  On iOS we begin configuring standalone apps before we have any information about the\n   *  project's manifest. By default let's treat all contexts as non-anonymous and override\n   *  it in contexts that needs this to be different.\n   */\n  isAnonymous() {\n    return false;\n  }\n}\n\nexport class StandaloneContextUser extends StandaloneContext {\n  type: StandaloneContextDataType = 'user';\n  constructor(\n    public data: StandaloneContextDataUser,\n    public published: {\n      url?: string;\n      releaseChannel: 'default';\n    },\n    public build: StandaloneBuildFlags\n  ) {\n    super();\n  }\n}\n\nexport class StandaloneContextService extends StandaloneContext {\n  type: StandaloneContextDataType = 'service';\n  constructor(\n    public data: StandaloneContextDataService,\n    public published: {\n      url: string;\n      releaseChannel: string;\n    },\n    public build: StandaloneBuildFlags\n  ) {\n    super();\n  }\n\n  /**\n   *  On iOS we begin configuring standalone apps before we have any information about the\n   *  project's manifest.\n   */\n  isAnonymous() {\n    return true;\n  }\n}\n\nexport type AnyStandaloneContext = StandaloneContextUser | StandaloneContextService;\n\nexport default StandaloneContext;\n"],"mappings":";;;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAMA;AACO,SAASA,2BAAT,CAAqCC,KAArC,EAAqF;EAC1F,OAAOA,KAAK,IAAI,OAAOA,KAAK,CAACC,WAAb,KAA6B,QAAtC,IAAkD,SAASD,KAAlE;AACD;;AAEM,SAASE,kCAAT,CACLF,KADK,EAEsC;EAC3C,OAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,IAAlB,EAAwBG,QAAxB,CAAiCH,KAAjC,CAAP;AACD;;AAEM,SAASI,8BAAT,CAAwCJ,KAAxC,EAA2F;EAChG,OACEA,KAAK,IACLE,kCAAkC,CAACF,KAAK,CAACK,eAAP,CADlC,IAEA,OAAOL,KAAK,CAACM,cAAb,KAAgC,QAFhC,IAGA,OAAON,KAAK,CAACO,kBAAb,KAAoC,QAJtC;AAMD;AAED;AACA;AACA;AACA;;;AAmBA,MAAMC,iBAAN,CAAwB;EAAA;IAAA;;IAAA;EAAA;;EAwDtB;AACF;AACA;AACA;AACA;EACEC,WAAW,GAAG;IACZ,OAAO,KAAP;EACD;;AA/DqB;;gBAAlBD,iB,uBAIuB,CACzBP,WADyB,EAEzBS,GAFyB,EAGzBC,YAHyB,KAIC;EAC1B,MAAMC,OAAO,GAAG,IAAIC,qBAAJ,CACd;IACEZ,WADF;IAEES;EAFF,CADc,EAKd;IACEI,GAAG,EAAEH,YADP;IAEEI,cAAc,EAAE;EAFlB,CALc,EASd;EACAC,gCAAA,CAAqBC,WAArB,EAVc,CAAhB;EAYAL,OAAO,CAACM,MAAR,GAAiBR,GAAjB;EACA,OAAOE,OAAP;AACD,C;;gBAvBGJ,iB,0BAyB0B,CAC5BF,cAD4B,EAE5Ba,WAF4B,EAG5BC,QAH4B,EAI5BC,aAJ4B,EAK5BhB,eAL4B,EAM5BiB,KAN4B,EAO5BX,YAP4B,EAQ5BI,cAR4B,EAS5BR,kBAT4B,KAUC;EAC7B,MAAMK,OAAO,GAAG,IAAIW,wBAAJ,CACd;IACEjB,cADF;IAEEa,WAFF;IAGEC,QAHF;IAIEC,aAJF;IAKEhB,eALF;IAMEE;EANF,CADc,EASd;IACEO,GAAG,EAAEH,YADP;IAEEI,cAAc,EAAEA,cAAc,GAAGA,cAAH,GAAoB;EAFpD,CATc,EAadO,KAbc,CAAhB;EAeAV,OAAO,CAACM,MAAR,GAAiBE,QAAjB;EAEA,OAAOR,OAAP;AACD,C;;AAYI,MAAMC,qBAAN,SAAoCL,iBAApC,CAAsD;EAE3DgB,WAAW,CACFC,IADE,EAEFC,SAFE,EAMFJ,KANE,EAOT;IACA;IADA,KANOG,IAMP,GANOA,IAMP;IAAA,KALOC,SAKP,GALOA,SAKP;IAAA,KADOJ,KACP,GADOA,KACP;;IAAA,8BARgC,MAQhC;EAED;;AAX0D;;;;AActD,MAAMC,wBAAN,SAAuCf,iBAAvC,CAAyD;EAE9DgB,WAAW,CACFC,IADE,EAEFC,SAFE,EAMFJ,KANE,EAOT;IACA;IADA,KANOG,IAMP,GANOA,IAMP;IAAA,KALOC,SAKP,GALOA,SAKP;IAAA,KADOJ,KACP,GADOA,KACP;;IAAA,8BARgC,SAQhC;EAED;EAED;AACF;AACA;AACA;;;EACEb,WAAW,GAAG;IACZ,OAAO,IAAP;EACD;;AAnB6D;;;eAwBjDD,iB"}