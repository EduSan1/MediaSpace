{"version":3,"file":"parseBinaryPlistAsync.js","names":["CHAR_CHEVRON_OPEN","CHAR_B_LOWER","parseBinaryPlistAsync","plistPath","parsePlistBuffer","fs","promises","readFile","contents","info","plist","parse","toString","Array","isArray","binaryPlist","parseBuffer","Error"],"sources":["../../src/utils/parseBinaryPlistAsync.ts"],"sourcesContent":["import plist from '@expo/plist';\n// @ts-ignore\nimport binaryPlist from 'bplist-parser';\nimport fs from 'fs';\n\nconst CHAR_CHEVRON_OPEN = 60;\nconst CHAR_B_LOWER = 98;\n// .mobileprovision\n// const CHAR_ZERO = 30;\n\nexport async function parseBinaryPlistAsync(plistPath: string) {\n  return parsePlistBuffer(await fs.promises.readFile(plistPath));\n}\n\nexport function parsePlistBuffer(contents: Buffer) {\n  if (contents[0] === CHAR_CHEVRON_OPEN) {\n    const info = plist.parse(contents.toString());\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else if (contents[0] === CHAR_B_LOWER) {\n    const info = binaryPlist.parseBuffer(contents);\n    if (Array.isArray(info)) return info[0];\n    return info;\n  } else {\n    throw new Error(`Cannot parse plist of type byte (0x${contents[0].toString(16)})`);\n  }\n}\n"],"mappings":";;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAFA;AAIA,MAAMA,iBAAiB,GAAG,EAA1B;AACA,MAAMC,YAAY,GAAG,EAArB,C,CACA;AACA;;AAEO,eAAeC,qBAAf,CAAqCC,SAArC,EAAwD;EAC7D,OAAOC,gBAAgB,CAAC,MAAMC,aAAA,CAAGC,QAAH,CAAYC,QAAZ,CAAqBJ,SAArB,CAAP,CAAvB;AACD;;AAEM,SAASC,gBAAT,CAA0BI,QAA1B,EAA4C;EACjD,IAAIA,QAAQ,CAAC,CAAD,CAAR,KAAgBR,iBAApB,EAAuC;IACrC,MAAMS,IAAI,GAAGC,gBAAA,CAAMC,KAAN,CAAYH,QAAQ,CAACI,QAAT,EAAZ,CAAb;;IACA,IAAIC,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAyB,OAAOA,IAAI,CAAC,CAAD,CAAX;IACzB,OAAOA,IAAP;EACD,CAJD,MAIO,IAAID,QAAQ,CAAC,CAAD,CAAR,KAAgBP,YAApB,EAAkC;IACvC,MAAMQ,IAAI,GAAGM,uBAAA,CAAYC,WAAZ,CAAwBR,QAAxB,CAAb;;IACA,IAAIK,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAyB,OAAOA,IAAI,CAAC,CAAD,CAAX;IACzB,OAAOA,IAAP;EACD,CAJM,MAIA;IACL,MAAM,IAAIQ,KAAJ,CAAW,sCAAqCT,QAAQ,CAAC,CAAD,CAAR,CAAYI,QAAZ,CAAqB,EAArB,CAAyB,GAAzE,CAAN;EACD;AACF"}