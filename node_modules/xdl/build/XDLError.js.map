{"version":3,"file":"XDLError.js","names":["ERROR_PREFIX","XDLError","Error","constructor","code","message","startsWith","substring","length","isXDLError"],"sources":["../src/XDLError.ts"],"sourcesContent":["import { ErrorCode } from './internal';\n\nconst ERROR_PREFIX = 'Error: ';\n\nexport default class XDLError extends Error {\n  readonly name = 'XDLError';\n\n  code: string;\n  isXDLError: true;\n\n  constructor(code: ErrorCode, message: string) {\n    super('');\n\n    // If e.toString() was called to get `message` we don't want it to look\n    // like \"Error: Error:\".\n    if (message.startsWith(ERROR_PREFIX)) {\n      message = message.substring(ERROR_PREFIX.length);\n    }\n\n    this.message = message;\n    this.code = code;\n    this.isXDLError = true;\n  }\n}\n"],"mappings":";;;;;;;;;AAEA,MAAMA,YAAY,GAAG,SAArB;;AAEe,MAAMC,QAAN,SAAuBC,KAAvB,CAA6B;EAM1CC,WAAW,CAACC,IAAD,EAAkBC,OAAlB,EAAmC;IAC5C,MAAM,EAAN,EAD4C,CAG5C;IACA;;IAJ4C,8BAL9B,UAK8B;;IAAA;;IAAA;;IAK5C,IAAIA,OAAO,CAACC,UAAR,CAAmBN,YAAnB,CAAJ,EAAsC;MACpCK,OAAO,GAAGA,OAAO,CAACE,SAAR,CAAkBP,YAAY,CAACQ,MAA/B,CAAV;IACD;;IAED,KAAKH,OAAL,GAAeA,OAAf;IACA,KAAKD,IAAL,GAAYA,IAAZ;IACA,KAAKK,UAAL,GAAkB,IAAlB;EACD;;AAlByC"}