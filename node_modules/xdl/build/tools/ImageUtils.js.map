{"version":3,"file":"ImageUtils.js","names":["getImageDimensionsAsync","projectDirname","basename","_getImageDimensionsAsync","_getImageDimensionsWithImageProbeAsync","imagePath","path","resolve","readStream","fs","createReadStream","width","height","probeImageSize","destroy","_hasWarned","resizeImageAsync","iconSizePx","iconFilename","destinationIconPath","process","platform","_resizeImageAsync","_resizeImageWithSipsAsync","LoggerDetach","warn","ExponentTools","spawnAsyncThrowError","toFixed","stdio","cwd","setResizeImageFunction","fn","setGetImageDimensionsFunction"],"sources":["../../src/tools/ImageUtils.ts"],"sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport probeImageSize from 'probe-image-size';\n\nimport { ExponentTools, LoggerDetach } from '../internal';\n\n/**\n * @param {string} projectDirname\n * @param {string} basename\n * @returns {} { width: number, height: number } image dimensions or null\n */\nasync function getImageDimensionsAsync(\n  projectDirname: string,\n  basename: string\n): Promise<{ width: number; height: number } | null> {\n  try {\n    return await _getImageDimensionsAsync(projectDirname, basename);\n  } catch {}\n  return null;\n}\n\nasync function _getImageDimensionsWithImageProbeAsync(\n  projectDirname: string,\n  basename: string\n): Promise<{ width: number; height: number }> {\n  const imagePath = path.resolve(projectDirname, basename);\n  const readStream = fs.createReadStream(imagePath);\n  const { width, height } = await probeImageSize(readStream);\n  readStream.destroy();\n  return { width, height };\n}\n\nlet _hasWarned = false;\nasync function resizeImageAsync(\n  iconSizePx: number,\n  iconFilename: string,\n  destinationIconPath: string\n) {\n  if (\n    process.platform !== 'darwin' &&\n    _resizeImageAsync === _resizeImageWithSipsAsync &&\n    !_hasWarned\n  ) {\n    LoggerDetach.warn('`sips` utility may or may not work outside of macOS');\n    _hasWarned = true;\n  }\n  return _resizeImageAsync(iconSizePx, iconFilename, destinationIconPath);\n}\n\nasync function _resizeImageWithSipsAsync(\n  iconSizePx: number,\n  iconFilename: string,\n  destinationIconPath: string\n) {\n  return ExponentTools.spawnAsyncThrowError('sips', ['-Z', iconSizePx.toFixed(), iconFilename], {\n    stdio: ['ignore', 'ignore', 'inherit'], // only stderr\n    cwd: destinationIconPath,\n  });\n}\n\n// Allow us to swap out the default implementations of image functions\nlet _resizeImageAsync = _resizeImageWithSipsAsync;\nlet _getImageDimensionsAsync: (\n  dirname: string,\n  filename: string\n) => Promise<{ width: number; height: number } | null> = _getImageDimensionsWithImageProbeAsync;\n\n// Allow users to provide an alternate implementation for our image resize function.\n// This is used internally in order to use sharp instead of sips in standalone builder.\nfunction setResizeImageFunction(\n  fn: (iconSizePx: number, iconFilename: string, destinationIconPath: string) => Promise<any>\n) {\n  _resizeImageAsync = fn;\n}\n\n// Allow users to provide an alternate implementation for our image dimensions function.\n// This is used internally in order to use sharp instead of sips in standalone builder.\nfunction setGetImageDimensionsFunction(\n  fn: (dirname: string, filename: string) => Promise<{ width: number; height: number } | null>\n) {\n  _getImageDimensionsAsync = fn;\n}\n\nexport {\n  resizeImageAsync,\n  setResizeImageFunction,\n  setGetImageDimensionsFunction,\n  getImageDimensionsAsync,\n};\n"],"mappings":";;;;;;;;;;AAAA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AACA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;AAEA;EAAA;;EAAA;IAAA;EAAA;;EAAA;AAAA;;;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAeA,uBAAf,CACEC,cADF,EAEEC,QAFF,EAGqD;EACnD,IAAI;IACF,OAAO,MAAMC,wBAAwB,CAACF,cAAD,EAAiBC,QAAjB,CAArC;EACD,CAFD,CAEE,MAAM,CAAE;;EACV,OAAO,IAAP;AACD;;AAED,eAAeE,sCAAf,CACEH,cADF,EAEEC,QAFF,EAG8C;EAC5C,MAAMG,SAAS,GAAGC,eAAA,CAAKC,OAAL,CAAaN,cAAb,EAA6BC,QAA7B,CAAlB;;EACA,MAAMM,UAAU,GAAGC,aAAA,CAAGC,gBAAH,CAAoBL,SAApB,CAAnB;;EACA,MAAM;IAAEM,KAAF;IAASC;EAAT,IAAoB,MAAM,IAAAC,yBAAA,EAAeL,UAAf,CAAhC;EACAA,UAAU,CAACM,OAAX;EACA,OAAO;IAAEH,KAAF;IAASC;EAAT,CAAP;AACD;;AAED,IAAIG,UAAU,GAAG,KAAjB;;AACA,eAAeC,gBAAf,CACEC,UADF,EAEEC,YAFF,EAGEC,mBAHF,EAIE;EACA,IACEC,OAAO,CAACC,QAAR,KAAqB,QAArB,IACAC,iBAAiB,KAAKC,yBADtB,IAEA,CAACR,UAHH,EAIE;IACAS,wBAAA,CAAaC,IAAb,CAAkB,qDAAlB;;IACAV,UAAU,GAAG,IAAb;EACD;;EACD,OAAOO,iBAAiB,CAACL,UAAD,EAAaC,YAAb,EAA2BC,mBAA3B,CAAxB;AACD;;AAED,eAAeI,yBAAf,CACEN,UADF,EAEEC,YAFF,EAGEC,mBAHF,EAIE;EACA,OAAOO,yBAAA,CAAcC,oBAAd,CAAmC,MAAnC,EAA2C,CAAC,IAAD,EAAOV,UAAU,CAACW,OAAX,EAAP,EAA6BV,YAA7B,CAA3C,EAAuF;IAC5FW,KAAK,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,CADqF;IACpD;IACxCC,GAAG,EAAEX;EAFuF,CAAvF,CAAP;AAID,C,CAED;;;AACA,IAAIG,iBAAiB,GAAGC,yBAAxB;AACA,IAAIpB,wBAGkD,GAAGC,sCAHzD,C,CAKA;AACA;;AACA,SAAS2B,sBAAT,CACEC,EADF,EAEE;EACAV,iBAAiB,GAAGU,EAApB;AACD,C,CAED;AACA;;;AACA,SAASC,6BAAT,CACED,EADF,EAEE;EACA7B,wBAAwB,GAAG6B,EAA3B;AACD"}